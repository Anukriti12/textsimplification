{"ast":null,"code":"var _jsxFileName = \"/Users/anukumar/Desktop/Autumn 2024/Text Simplification/project_v4/client/src/components/Main/index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as pdfjsLib from \"pdfjs-dist/legacy/build/pdf\";\n// import { BrowserRouter as Router, Routes, Route, useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = `${process.env.PUBLIC_URL}/pdf.worker.mjs`;\nconst Main = () => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [outputText, setOutputText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isEditable, setIsEditable] = useState(false); // For toggling edit mode\n  const [uploadedFileName, setUploadedFileName] = useState(\"\"); // State for file name\n  const [isSaveButtonVisible, setIsSaveButtonVisible] = useState(true);\n  const [showSurveyPrompt, setShowSurveyPrompt] = useState(false); // State for survey prompt\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/Login\");\n  };\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    try {\n      setUploadedFileName(file.name); // Set the uploaded file name\n      const fileReader = new FileReader();\n      fileReader.onload = async function () {\n        const typedArray = new Uint8Array(this.result);\n        const pdf = await pdfjsLib.getDocument(typedArray).promise;\n        let text = \"\";\n\n        // Extract text from all pages\n        for (let i = 1; i <= pdf.numPages; i++) {\n          const page = await pdf.getPage(i);\n          const textContent = await page.getTextContent();\n          text += textContent.items.map(item => item.str).join(\" \");\n        }\n        setInputText(text);\n      };\n      fileReader.readAsArrayBuffer(file);\n    } catch (error) {\n      console.error(\"Error reading PDF:\", error);\n      alert(\"Failed to extract text from the PDF.\");\n    }\n  };\n  const handleSubmit = async () => {\n    if (!inputText.trim()) return;\n    setIsLoading(true);\n    try {\n      var _data$response;\n      const prompt = `Simplify the following text for better readability while preserving meaning:\\n\\n\"${inputText}\"`;\n      const response = await fetch(\"http://localhost:5001/api/gpt4\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n      const data = await response.json();\n      const cleanedResponse = (data === null || data === void 0 ? void 0 : (_data$response = data.response) === null || _data$response === void 0 ? void 0 : _data$response.replace(/^\"|\"$/g, \"\")) || \"No response received.\";\n      setOutputText(cleanedResponse);\n      setIsSubmitted(true);\n      navigate(\"/review\", {\n        state: {\n          inputText,\n          outputText: cleanedResponse\n        }\n      });\n\n      // navigate(\"/simplify\");\n    } catch (error) {\n      console.error(\"Error fetching GPT-4 response:\", error);\n      setOutputText(\"An error occurred while fetching the response.\");\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: styles.navbar,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Text Simplification Study\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.white_btn,\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main_container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.description,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This app is about simplifying text for improved readability and accessibility.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload a document or paste your text to get a simplified version with just a click.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.form_container,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.input_area,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.text_container,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: styles.label,\n                htmlFor: \"inputText\",\n                children: \"Input Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 6\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"inputText\",\n                className: styles.textarea,\n                placeholder: \"Original Text\",\n                value: inputText,\n                onChange: e => setInputText(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 6\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.or_divider,\n              children: \"OR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.upload_area,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"fileUpload\",\n                className: styles.upload_box,\n                children: uploadedFileName ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\"File uploaded: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: uploadedFileName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 24\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\"Click to Upload a PDF\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"...or drag and drop a file.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 9\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 6\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"fileUpload\",\n                accept: \"application/pdf\",\n                onChange: handleFileUpload,\n                className: styles.hidden_input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 6\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.submit_btn,\n          onClick: handleSubmit,\n          disabled: !inputText.trim() || isLoading,\n          children: isLoading ? \"Processing...\" : \"Simplfiy Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(Main, \"PhGCY4nGQxG8Sssj4WBO1go/AEw=\", false, function () {\n  return [useNavigate];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","styles","useNavigate","pdfjsLib","jwtDecode","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalWorkerOptions","workerSrc","process","env","PUBLIC_URL","Main","_s","inputText","setInputText","outputText","setOutputText","isLoading","setIsLoading","isSubmitted","setIsSubmitted","isEditable","setIsEditable","uploadedFileName","setUploadedFileName","isSaveButtonVisible","setIsSaveButtonVisible","showSurveyPrompt","setShowSurveyPrompt","navigate","handleLogout","localStorage","removeItem","handleFileUpload","event","file","target","files","name","fileReader","FileReader","onload","typedArray","Uint8Array","result","pdf","getDocument","promise","text","i","numPages","page","getPage","textContent","getTextContent","items","map","item","str","join","readAsArrayBuffer","error","console","alert","handleSubmit","trim","_data$response","prompt","response","fetch","method","headers","body","JSON","stringify","data","json","cleanedResponse","replace","state","children","className","navbar","fileName","_jsxFileName","lineNumber","columnNumber","white_btn","onClick","main_container","description","form_container","input_area","text_container","label","htmlFor","id","textarea","placeholder","value","onChange","e","or_divider","upload_area","upload_box","type","accept","hidden_input","submit_btn","disabled","_c","$RefreshReg$"],"sources":["/Users/anukumar/Desktop/Autumn 2024/Text Simplification/project_v4/client/src/components/Main/index.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as pdfjsLib from \"pdfjs-dist/legacy/build/pdf\";\n// import { BrowserRouter as Router, Routes, Route, useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\n\n\npdfjsLib.GlobalWorkerOptions.workerSrc = `${process.env.PUBLIC_URL}/pdf.worker.mjs`;\n\nconst Main = () => {\n\n\tconst [inputText, setInputText] = useState(\"\");\n\tconst [outputText, setOutputText] = useState(\"\");\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [isSubmitted, setIsSubmitted] = useState(false);\n\tconst [isEditable, setIsEditable] = useState(false); // For toggling edit mode\n\tconst [uploadedFileName, setUploadedFileName] = useState(\"\"); // State for file name\n\tconst [isSaveButtonVisible, setIsSaveButtonVisible] = useState(true);\n\tconst [showSurveyPrompt, setShowSurveyPrompt] = useState(false); // State for survey prompt\n\tconst navigate = useNavigate();\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/Login\"); \n  };\n\n\n  \tconst handleFileUpload = async (event) => {\n\t  const file = event.target.files[0];\n\t  if (!file) return;\n  \n\t  try {\n\t\tsetUploadedFileName(file.name); // Set the uploaded file name\n\t\tconst fileReader = new FileReader();\n\t\tfileReader.onload = async function () {\n\t\t  const typedArray = new Uint8Array(this.result);\n  \n\t\t  const pdf = await pdfjsLib.getDocument(typedArray).promise;\n\t\t  let text = \"\";\n  \n\t\t  // Extract text from all pages\n\t\t  for (let i = 1; i <= pdf.numPages; i++) {\n\t\t\tconst page = await pdf.getPage(i);\n\t\t\tconst textContent = await page.getTextContent();\n\t\t\ttext += textContent.items.map((item) => item.str).join(\" \");\n\t\t  }\n  \n\t\t  setInputText(text);\n\t\t};\n\t\tfileReader.readAsArrayBuffer(file);\n\t  } catch (error) {\n\t\tconsole.error(\"Error reading PDF:\", error);\n\t\talert(\"Failed to extract text from the PDF.\");\n\t  }\n\t};\n \n  \tconst handleSubmit = async () => {\n\t  if (!inputText.trim()) return;\n\t  setIsLoading(true);\n  \n\t  try {\n\t\tconst prompt = `Simplify the following text for better readability while preserving meaning:\\n\\n\"${inputText}\"`;\n  \n\t\tconst response = await fetch(\"http://localhost:5001/api/gpt4\", {\n\t\t  method: \"POST\",\n\t\t  headers: { \"Content-Type\": \"application/json\" },\n\t\t  body: JSON.stringify({ prompt }),\n\t\t});\n  \n\t\tconst data = await response.json();\n\t\tconst cleanedResponse =\n\t\t  data?.response?.replace(/^\"|\"$/g, \"\") || \"No response received.\";\n\t\tsetOutputText(cleanedResponse);\n\t\tsetIsSubmitted(true);\n\t\tnavigate(\"/review\", { state: { inputText, outputText: cleanedResponse } });\n\n\t\t// navigate(\"/simplify\");\n\t  } catch (error) {\n\t\tconsole.error(\"Error fetching GPT-4 response:\", error);\n\t\tsetOutputText(\"An error occurred while fetching the response.\");\n\t  }\n  \n\t  setIsLoading(false);\n\t};\n\n  return (\n    <>\n      <nav className={styles.navbar}>\n        <h1>Text Simplification Study</h1>\n        <button className={styles.white_btn} onClick={handleLogout}>\n          Logout\n        </button>\n      </nav>\n\n\t  <div className={styles.main_container}>\n\t\n\t\t\t<div className={styles.description}>\n\t\t\t  <p>\n\t\t\t\tThis app is about simplifying text for improved readability and\n\t\t\t\taccessibility.\n\t\t\t  </p>\n\t\t\t  <p>\n\t\t\t\tUpload a document or paste your text to get a simplified version\n\t\t\t\twith just a click.\n\t\t\t  </p>\n  \n\t\t\t  <div className={styles.form_container}>\n\t\t\t\t{/* Input Area */}\n\t\t\t\t<div className={styles.input_area}>\n\t\t\t\t  <div className={styles.text_container}>\n\t\t\t\t\t<label className={styles.label} htmlFor=\"inputText\">\n\t\t\t\t\t  Input Text\n\t\t\t\t\t</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t  id=\"inputText\"\n\t\t\t\t\t  className={styles.textarea}\n\t\t\t\t\t  placeholder=\"Original Text\"\n\t\t\t\t\t  value={inputText}\n\t\t\t\t\t  onChange={(e) => setInputText(e.target.value)}\n\t\t\t\t\t></textarea>\n\t\t\t\t  </div>\n  \n\t\t\t\t  {/* OR Divider */}\n\t\t\t\t  <div className={styles.or_divider}>OR</div>\n  \n\t\t\t\t  {/* File Upload */}\n\t\t\t\t  <div className={styles.upload_area}>\n\t\t\t\t\t<label htmlFor=\"fileUpload\" className={styles.upload_box}>\n\t\t\t\t\t  {uploadedFileName ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t  File uploaded: <strong>{uploadedFileName}</strong>\n\t\t\t\t\t\t</>\n\t\t\t\t\t  ) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t  Click to Upload a PDF\n\t\t\t\t\t\t  <br />\n\t\t\t\t\t\t  <span>...or drag and drop a file.</span>\n\t\t\t\t\t\t</>\n\t\t\t\t\t  )}\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t  type=\"file\"\n\t\t\t\t\t  id=\"fileUpload\"\n\t\t\t\t\t  accept=\"application/pdf\"\n\t\t\t\t\t  onChange={handleFileUpload}\n\t\t\t\t\t  className={styles.hidden_input}\n\t\t\t\t\t/>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t  </div>\n\t\t\t  {/* Submit Button */}\n\t\t\t  <button\n\t\t\t\tclassName={styles.submit_btn}\n\t\t\t\tonClick={handleSubmit}\n\t\t\t\tdisabled={!inputText.trim() || isLoading}\n\t\t\t  >\n\t\t\t\t{isLoading ? \"Processing...\" : \"Simplfiy Text\"}\n\t\t\t  </button>\n\t\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Main;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}