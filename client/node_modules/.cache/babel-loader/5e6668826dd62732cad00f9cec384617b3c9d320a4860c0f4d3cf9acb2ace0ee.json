{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useLocation,useNavigate}from\"react-router-dom\";import styles from\"./styles.module.css\";import{saveAs}from\"file-saver\";import DiffMatchPatch from\"diff-match-patch\";// const handleFormSubmit = (e) => {\n//   e.preventDefault();\n//   alert(\"Survey responses saved\");\n// };\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SurveyPage=()=>{const{state}=useLocation();//const { email, inputText } = state || {};\nconst{email,inputText,outputText:initialOutputText,editHistory,saveHistory}=state||{};const[data,setData]=useState(null);const[showDifference1,setShowDifference1]=useState(false);// For Input Text vs System-generated Text\nconst[showDifference2,setShowDifference2]=useState(false);// For System-generated Text vs Submitted Text\nconst[diffHtml1,setDiffHtml1]=useState(\"\");const[diffHtml2,setDiffHtml2]=useState(\"\");// Store latest submitted text from history selection\nconst[latestFinalText,setLatestFinalText]=useState(\"\");const[isSidebarVisible,setIsSidebarVisible]=useState(false);const navigate=useNavigate();// Word count states\nconst[inputWordCount,setInputWordCount]=useState(0);const[outputWordCount,setOutputWordCount]=useState(0);const[submittedWordCount,setSubmittedWordCount]=useState(0);// Function to count words\nconst countWords=text=>{return text?text.trim().split(/\\s+/).filter(Boolean).length:0;};// Update word counts when data changes\nuseEffect(()=>{setInputWordCount(countWords(inputText));setOutputWordCount(countWords(initialOutputText));setSubmittedWordCount(countWords(latestFinalText));},[inputText,initialOutputText,latestFinalText]);useEffect(()=>{if(saveHistory.length>0){var _saveHistory,_saveHistory2;setLatestFinalText(((_saveHistory=saveHistory[saveHistory.length-1])===null||_saveHistory===void 0?void 0:_saveHistory.finalText)||\"\");setSubmittedWordCount(countWords(((_saveHistory2=saveHistory[saveHistory.length-1])===null||_saveHistory2===void 0?void 0:_saveHistory2.finalText)||\"\"));}},[saveHistory]);// Handler to update \"Submitted Text\" when a history entry is clicked\nconst handleHistoryClick=entry=>{setLatestFinalText(entry.finalText);// Update the Submitted Text box\n};useEffect(()=>{const handleBackButton=event=>{event.preventDefault();const confirmLeave=window.confirm(\"You have unsaved changes. Going back may result in losing your edits. Do you want to continue?\\n\\nIf you want to edit your already submitted text, copy it from here.\");if(!confirmLeave){window.history.pushState(null,\"\",window.location.href);// Prevent navigation\n}else{navigate(-1);}};// **Push a history state to detect back button click**\nwindow.history.pushState(null,\"\",window.location.href);window.addEventListener(\"popstate\",handleBackButton);return()=>{window.removeEventListener(\"popstate\",handleBackButton);};},[navigate]);useEffect(()=>{if(saveHistory.length>0){var _saveHistory3;setLatestFinalText(((_saveHistory3=saveHistory[saveHistory.length-1])===null||_saveHistory3===void 0?void 0:_saveHistory3.finalText)||\"\");// Default to last submitted text\n}},[saveHistory]);const[submitted,setSubmitted]=useState(false);const[responses,setResponses]=useState({clarity:\"\",meaning:\"\",grammar:\"\",needs:\"\",guidelines:\"\",coherent:\"\",editing_effort:\"\"});// Handle input changes\n// const handleOptionChange = (event) => {\n//   setResponses({ ...responses, [event.target.name]: event.target.value });\n// };\n// Handle input changes, allowing deselection\nconst handleOptionChange=event=>{const{name,value}=event.target;setResponses(prevResponses=>({...prevResponses,[name]:prevResponses[name]===value?\"\":value// Toggle selection\n}));};// Check if all required fields are filled\nconst isFormComplete=Object.values(responses).every(value=>value!==\"\"&&value!==null);const handleLogout=()=>{localStorage.removeItem(\"token\");navigate(\"/Login\");};const handleCopy=text=>{navigator.clipboard.writeText(text).then(()=>{alert(\"Copied to clipboard!\");},err=>{console.error(\"Failed to copy text:\",err);});};const handleDownload=(text,filename,format)=>{const blob=new Blob([text],{type:\"text/plain;charset=utf-8\"});saveAs(blob,`${filename}.${format}`);};// Handle form submission\nconst handleFormSubmit=event=>{event.preventDefault();if(!isFormComplete){alert(\"Please answer all required questions before submitting.\");return;}// Simulate saving responses (replace with API call if needed)\nconsole.log(\"Survey Responses:\",responses);// Show the thank-you message\nsetSubmitted(true);};const generateDiff=(input,output)=>{const dmp=new DiffMatchPatch();const diffs=dmp.diff_main(input,output);dmp.diff_cleanupSemantic(diffs);// Optional cleanup for better readability\nreturn dmp.diff_prettyHtml(diffs);};useEffect(()=>{const fetchSimplification=async()=>{try{const response=await fetch(\"https://textsimplification-eecqhvdcduczf8cz.westus-01.azurewebsites.net/api/simplifications/fetch\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email,inputText})});const result=await response.json();if(response.ok){setData(result.data);setDiffHtml1(generateDiff(result.data.inputText,result.data.outputText));// Input vs System-generated\nsetDiffHtml2(generateDiff(result.data.outputText,result.data.latestFinalText));// System-generated vs Submitted\n}}catch(error){console.error(\"Error fetching simplification data:\",error);}};if(email&&inputText){fetchSimplification();}},[email,inputText]);if(!data){return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});}// const { inputText: input, outputText, editedText } = data;\nconst{inputText:input,outputText,latestText}=data;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"nav\",{className:styles.navbar,children:[/*#__PURE__*/_jsx(\"h1\",{onClick:()=>window.location.href=\"https://textsimplification-eecqhvdcduczf8cz.westus-01.azurewebsites.net/\",style:{cursor:\"pointer\"}// Makes it look clickable\n,children:\"Text Simplification Tool\"}),/*#__PURE__*/_jsx(\"button\",{className:styles.white_btn,onClick:handleLogout,children:\"Logout\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:`${styles.sidebar} ${isSidebarVisible?styles.expanded:\"\"}`,children:[/*#__PURE__*/_jsxs(\"button\",{className:styles.historyIcon,onClick:()=>setIsSidebarVisible(!isSidebarVisible),children:[\"\\uD83D\\uDD52 \",/*#__PURE__*/_jsx(\"p\",{style:{fontSize:\"15px\"},children:\"History\"})]}),isSidebarVisible&&/*#__PURE__*/_jsxs(\"div\",{className:styles.historyContent,children:[/*#__PURE__*/_jsx(\"button\",{className:styles.closeButton,onClick:()=>setIsSidebarVisible(false),children:\"\\u2716\"}),/*#__PURE__*/_jsx(\"ul\",{className:styles.historyList,children:saveHistory.map((entry,index)=>/*#__PURE__*/_jsx(\"li\",{className:styles.historyItem,onClick:()=>handleHistoryClick(entry),children:entry.timestamp},index))})]})]}),!submitted?/*#__PURE__*/_jsx(\"div\",{className:styles.container,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.description,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.textareas_container,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.text_container,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.labelWrapper,children:/*#__PURE__*/_jsx(\"label\",{className:styles.label,htmlFor:\"inputText\",children:\"Input Text\"})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.wordCount,children:[\"Words: \",inputWordCount]}),/*#__PURE__*/_jsx(\"textarea\",{id:\"inputText\",className:`${styles.textarea} ${styles.side_by_side}`,value:input,readOnly:true,placeholder:\"Input Text\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.text_container,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.labelWrapper,children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,htmlFor:\"outputText\",children:\"System-generated Text\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.actions,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.copyIcon,onClick:()=>handleCopy(outputText),title:\"Copy to Clipboard\",children:\"\\uD83D\\uDCCB \"}),/*#__PURE__*/_jsx(\"div\",{className:styles.copyIcon,onClick:()=>handleDownload(outputText,\"GeneratedText\",\"txt\"),title:\"Download as .txt file\",children:\"\\uD83D\\uDCE5 \"}),/*#__PURE__*/_jsx(\"button\",{className:styles.toggleDiffBtn,onClick:()=>setShowDifference1(!showDifference1),children:showDifference1?\"Hide the comparison\":\"Compare with input text\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.wordCount,children:[\"Words: \",outputWordCount]}),/*#__PURE__*/_jsx(\"textarea\",{id:\"outputText\",className:`${styles.output_box} ${styles.side_by_side}`,value:outputText,readOnly:true,placeholder:\"Initial Generated Text\"}),showDifference1&&/*#__PURE__*/_jsxs(\"div\",{className:styles.diff_box,children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,children:\"Input vs System-generated Text\"}),/*#__PURE__*/_jsx(\"div\",{className:`${styles.diff_output}`,dangerouslySetInnerHTML:{__html:diffHtml1}})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.text_container,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.labelWrapper,children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,htmlFor:\"outputText\",children:\"Submitted Text\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.actions,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.copyIcon,onClick:()=>handleCopy(outputText),title:\"Copy to Clipboard\",children:\"\\uD83D\\uDCCB \"}),/*#__PURE__*/_jsx(\"div\",{className:styles.copyIcon,onClick:()=>handleDownload(outputText,\"SubmittedText\",\"txt\"),title:\"Download as .txt file\",children:\"\\uD83D\\uDCE5 \"}),/*#__PURE__*/_jsx(\"button\",{className:styles.toggleDiffBtn,onClick:()=>setShowDifference2(!showDifference2),children:showDifference2?\"Hide the comparison\":\"Compare with system-generated text\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.wordCount,children:[\"Words: \",submittedWordCount]}),/*#__PURE__*/_jsx(\"textarea\",{id:\"submittedText\",className:`${styles.output_box} ${styles.side_by_side}`,value:latestFinalText,readOnly:true,placeholder:\"Submitted Text\"}),showDifference2&&/*#__PURE__*/_jsxs(\"div\",{className:styles.diff_box,children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,children:\"System-generated vs Submitted Text\"}),/*#__PURE__*/_jsx(\"div\",{className:`${styles.diff_output}`,dangerouslySetInnerHTML:{__html:diffHtml2}})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.diff_container}),/*#__PURE__*/_jsx(\"div\",{className:styles.surveyContainer,children:/*#__PURE__*/_jsxs(\"form\",{className:styles.surveyForm,onSubmit:handleFormSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Survey\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Your feedback is valuable. Please answer all required questions.\"})}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Is the system generated text clear and free of confusing language? \",/*#__PURE__*/_jsx(\"span\",{style:{color:\"red\"},children:\"*\"}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyOptions,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"clarity\",value:\"not-clear\",onChange:handleOptionChange,required:true}),\"  Not clear at all\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"clarity\",value:\"somewhat-clear\",onChange:handleOptionChange,required:true}),\"  Somewhat clear\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"clarity\",value:\"moderately-clear\",onChange:handleOptionChange,required:true}),\"  Moderately clear\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"clarity\",value:\"mostly-clear\",onChange:handleOptionChange,required:true}),\"  Mostly clear\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"clarity\",value:\"very-clear\",onChange:handleOptionChange,required:true}),\"  Very clear\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Does the system generated text preserve the original meaning? \",/*#__PURE__*/_jsx(\"span\",{style:{color:\"red\"},children:\"*\"}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyOptions,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"meaning\",value:\"not-at-all\",onChange:handleOptionChange,required:true}),\"  Not at all\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"meaning\",value:\"somewhat-preserves\",onChange:handleOptionChange,required:true}),\"  Somewhat preserves\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"meaning\",value:\"moderately-preserves\",onChange:handleOptionChange,required:true}),\"  Moderately preserves\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"meaning\",value:\"mostly-preserves\",onChange:handleOptionChange,required:true}),\"  Mostly preserves\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"meaning\",value:\"completely-preserves\",onChange:handleOptionChange,required:true}),\"  Completely preserves\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Are there grammatical errors in the system generated text? \",/*#__PURE__*/_jsx(\"span\",{style:{color:\"red\"},children:\"*\"}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyOptions,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"grammar\",value:\"many-errors\",onChange:handleOptionChange,required:true}),\"  Many errors\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"grammar\",value:\"several-errors\",onChange:handleOptionChange,required:true}),\"  Several errors\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"grammar\",value:\"some-errors\",onChange:handleOptionChange,required:true}),\"  Some errors\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"grammar\",value:\"few-errors\",onChange:handleOptionChange,required:true}),\"  Few errors\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"grammar\",value:\"no-errors\",onChange:handleOptionChange,required:true}),\"  No errors\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Does the system generated text meet your needs? \",/*#__PURE__*/_jsx(\"span\",{style:{color:\"red\"},children:\"*\"}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyOptions,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"needs\",value:\"not-at-all\",onChange:handleOptionChange,required:true}),\"  Not at all\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"needs\",value:\"somewhat-meets\",onChange:handleOptionChange,required:true}),\"  Somewhat meets\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"needs\",value:\"moderately-meets\",onChange:handleOptionChange,required:true}),\"  Moderately meets\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"needs\",value:\"mostly-meets\",onChange:handleOptionChange,required:true}),\"  Mostly meets\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"needs\",value:\"completely-meets\",onChange:handleOptionChange,required:true}),\"  Completely meets\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Does the system generated text follow the IDD guidelines for sentence structure and organization? \",/*#__PURE__*/_jsx(\"span\",{style:{color:\"red\"},children:\"*\"}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyOptions,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"guidelines\",value:\"not-at-all\",onChange:handleOptionChange,required:true}),\"  Not at all\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"guidelines\",value:\"somewhat-follows\",onChange:handleOptionChange,required:true}),\"  Somewhat follows\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"guidelines\",value:\"moderately-follows\",onChange:handleOptionChange,required:true}),\"  Moderately follows\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"guidelines\",value:\"mostly-follows\",onChange:handleOptionChange,required:true}),\"  Mostly follows\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"guidelines\",value:\"completely-follows\",onChange:handleOptionChange,required:true}),\"  Completely follows\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Is the system generated text coherent in terms of sentence flow and organization? \",/*#__PURE__*/_jsx(\"span\",{style:{color:\"red\"},children:\"*\"}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyOptions,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"coherent\",value:\"not-at-all\",onChange:handleOptionChange,required:true}),\"  Not at all\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"coherent\",value:\"somewhat-follows\",onChange:handleOptionChange,required:true}),\"  Somewhat coherent\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"coherent\",value:\"moderately-follows\",onChange:handleOptionChange,required:true}),\"  Moderately coherent\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"coherent\",value:\"mostly-follows\",onChange:handleOptionChange,required:true}),\"  Mostly coherent\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"coherent\",value:\"completely-follows\",onChange:handleOptionChange,required:true}),\"  Completely coherent\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"[OPTIONAL]\"}),\" How much effort was needed to edit the simplified text to make it acceptable? \"]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyOptions,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"editing_effort\",value:\"many-errors\",checked:responses.editing_effort===\"many-errors\",onChange:handleOptionChange}),\"  A lot of effort\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"editing_effort\",value:\"several-errors\",checked:responses.editing_effort===\"several-errors\",onChange:handleOptionChange}),\"  Significant effort\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"editing_effort\",value:\"some-errors\",checked:responses.editing_effort===\"some-errors\",onChange:handleOptionChange}),\"  Moderate effort\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"editing_effort\",value:\"few-errors\",checked:responses.editing_effort===\"few-errors\",onChange:handleOptionChange}),\"  Minimal effort\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"editing_effort\",value:\"no-errors\",checked:responses.editing_effort===\"no-errors\",onChange:handleOptionChange}),\"  No effort at all\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"[OPTIONAL]\"}),\" Do you have any additional comments about the system generated text? \"]}),/*#__PURE__*/_jsx(\"textarea\",{// className={styles.textarea}\nname:\"comments\",rows:\"4\",cols:\"70\",placeholder:\"Enter your feedback or any additional comments here\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{className:styles.submitButton,type:\"submit\",disabled:!isFormComplete,children:\"Submit\"})})]})})]})}):/*#__PURE__*/// Thank You Message & Redirect\n_jsxs(\"div\",{className:styles.thankYouContainer,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Thank You!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Your responses have been saved. We appreciate your feedback.\"}),/*#__PURE__*/_jsx(\"button\",{className:styles.redirectButton,onClick:()=>navigate(\"/simplify\",{replace:true}),children:\"Start Another Simplification\"})]})]});};export default SurveyPage;{/* <div className={styles.surveyQuestion}>\n            <label>Is the system-generated text clear and free of confusing language?</label>\n            <div className={styles.surveyOptions}>\n              {[\"not-clear\", \"somewhat-clear\", \"moderately-clear\", \"mostly-clear\", \"very-clear\"].map((option) => (\n                <label key={option}>\n                  <input type=\"radio\" name=\"clarity\" value={option} onChange={handleOptionChange} required />\n                  {option.replace(\"-\", \" \")}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <div className={styles.surveyQuestion}>\n            <label>Does the system-generated text preserve the original meaning?</label>\n            <div className={styles.surveyOptions}>\n              {[\"not-at-all\", \"somewhat-preserves\", \"moderately-preserves\", \"mostly-preserves\", \"completely-preserves\"].map((option) => (\n                <label key={option}>\n                  <input type=\"radio\" name=\"meaning\" value={option} onChange={handleOptionChange} required />\n                  {option.replace(\"-\", \" \")}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <div className={styles.surveyQuestion}>\n            <label>Are there grammatical errors in the system-generated text?</label>\n            <div className={styles.surveyOptions}>\n              {[\"many-errors\", \"several-errors\", \"some-errors\", \"few-errors\", \"no-errors\"].map((option) => (\n                <label key={option}>\n                  <input type=\"radio\" name=\"grammar\" value={option} onChange={handleOptionChange} required />\n                  {option.replace(\"-\", \" \")}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <div className={styles.surveyQuestion}>\n            <label>Does the system-generated text meet your needs?</label>\n            <div className={styles.surveyOptions}>\n              {[\"not-at-all\", \"somewhat-meets\", \"moderately-meets\", \"mostly-meets\", \"completely-meets\"].map((option) => (\n                <label key={option}>\n                  <input type=\"radio\" name=\"needs\" value={option} onChange={handleOptionChange} required />\n                  {option.replace(\"-\", \" \")}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <div className={styles.surveyQuestion}>\n            <label>Does the system-generated text follow the IDD guidelines for sentence structure and organization?</label>\n            <div className={styles.surveyOptions}>\n              {[\"not-at-all\", \"somewhat-follows\", \"moderately-follows\", \"mostly-follows\", \"completely-follows\"].map((option) => (\n                <label key={option}>\n                  <input type=\"radio\" name=\"guidelines\" value={option} onChange={handleOptionChange} required />\n                  {option.replace(\"-\", \" \")}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <div className={styles.surveyQuestion}>\n            <label>Is the system-generated text coherent in terms of sentence flow and organization?</label>\n            <div className={styles.surveyOptions}>\n              {[\"not-at-all\", \"somewhat-coherent\", \"moderately-coherent\", \"mostly-coherent\", \"completely-coherent\"].map((option) => (\n                <label key={option}>\n                  <input type=\"radio\" name=\"coherent\" value={option} onChange={handleOptionChange} required />\n                  {option.replace(\"-\", \" \")}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <div className={styles.surveyQuestion}>\n            <label>Is the system-generated text coherent in terms of sentence flow and organization?</label>\n            <div className={styles.surveyOptions}>\n              {[\"not-at-all\", \"somewhat-coherent\", \"moderately-coherent\", \"mostly-coherent\", \"completely-coherent\"].map((option) => (\n                <label key={option}>\n                  <input type=\"radio\" name=\"editing_effort\" value={option} onChange={handleOptionChange} required />\n                  {option.replace(\"-\", \" \")}\n                </label>\n              ))}\n            </div>\n          </div>\n\n\n          <div className={styles.surveyQuestion}>\n            <label><strong>[OPTIONAL]</strong> Additional comments:</label>\n            <textarea name=\"comments\" rows=\"4\" cols=\"70\" placeholder=\"Enter your feedback here\"></textarea>\n          </div> */}","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","styles","saveAs","DiffMatchPatch","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SurveyPage","state","email","inputText","outputText","initialOutputText","editHistory","saveHistory","data","setData","showDifference1","setShowDifference1","showDifference2","setShowDifference2","diffHtml1","setDiffHtml1","diffHtml2","setDiffHtml2","latestFinalText","setLatestFinalText","isSidebarVisible","setIsSidebarVisible","navigate","inputWordCount","setInputWordCount","outputWordCount","setOutputWordCount","submittedWordCount","setSubmittedWordCount","countWords","text","trim","split","filter","Boolean","length","_saveHistory","_saveHistory2","finalText","handleHistoryClick","entry","handleBackButton","event","preventDefault","confirmLeave","window","confirm","history","pushState","location","href","addEventListener","removeEventListener","_saveHistory3","submitted","setSubmitted","responses","setResponses","clarity","meaning","grammar","needs","guidelines","coherent","editing_effort","handleOptionChange","name","value","target","prevResponses","isFormComplete","Object","values","every","handleLogout","localStorage","removeItem","handleCopy","navigator","clipboard","writeText","then","alert","err","console","error","handleDownload","filename","format","blob","Blob","type","handleFormSubmit","log","generateDiff","input","output","dmp","diffs","diff_main","diff_cleanupSemantic","diff_prettyHtml","fetchSimplification","response","fetch","method","headers","body","JSON","stringify","result","json","ok","children","latestText","className","navbar","onClick","style","cursor","white_btn","sidebar","expanded","historyIcon","fontSize","historyContent","closeButton","historyList","map","index","historyItem","timestamp","container","description","textareas_container","text_container","labelWrapper","label","htmlFor","wordCount","id","textarea","side_by_side","readOnly","placeholder","actions","copyIcon","title","toggleDiffBtn","output_box","diff_box","diff_output","dangerouslySetInnerHTML","__html","diff_container","surveyContainer","surveyForm","onSubmit","surveyQuestion","color","surveyOptions","onChange","required","checked","rows","cols","submitButton","disabled","thankYouContainer","redirectButton","replace"],"sources":["/Users/anukumar/Desktop/Autumn 2024/Text Simplification/textsimplification/client/src/components/Survey/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\nimport { saveAs } from \"file-saver\";\nimport DiffMatchPatch from \"diff-match-patch\";\n\n// const handleFormSubmit = (e) => {\n//   e.preventDefault();\n//   alert(\"Survey responses saved\");\n// };\n\nconst SurveyPage = () => {\n  const { state } = useLocation();\n  //const { email, inputText } = state || {};\n  const { email, inputText, outputText: initialOutputText, editHistory, saveHistory } = state || {};\n\n\n  const [data, setData] = useState(null);\n\n  const [showDifference1, setShowDifference1] = useState(false); // For Input Text vs System-generated Text\n  const [showDifference2, setShowDifference2] = useState(false); // For System-generated Text vs Submitted Text\n  const [diffHtml1, setDiffHtml1] = useState(\"\");\n  const [diffHtml2, setDiffHtml2] = useState(\"\");\n\n\n    // Store latest submitted text from history selection\n    const [latestFinalText, setLatestFinalText] = useState(\"\"); \n    const [isSidebarVisible, setIsSidebarVisible] = useState(false);\n    \n\n  const navigate = useNavigate();\n\n  // Word count states\n  const [inputWordCount, setInputWordCount] = useState(0);\n  const [outputWordCount, setOutputWordCount] = useState(0);\n  const [submittedWordCount, setSubmittedWordCount] = useState(0);\n\n  // Function to count words\n  const countWords = (text) => {\n    return text ? text.trim().split(/\\s+/).filter(Boolean).length : 0;\n  };\n\n  // Update word counts when data changes\n  useEffect(() => {\n    setInputWordCount(countWords(inputText));\n    setOutputWordCount(countWords(initialOutputText));\n    setSubmittedWordCount(countWords(latestFinalText));\n  }, [inputText, initialOutputText, latestFinalText]);\n\n\n  useEffect(() => {\n    if (saveHistory.length > 0) {\n      setLatestFinalText(saveHistory[saveHistory.length - 1]?.finalText || \"\");\n      setSubmittedWordCount(countWords(saveHistory[saveHistory.length - 1]?.finalText || \"\"));\n    }\n  }, [saveHistory]);\n\n  // Handler to update \"Submitted Text\" when a history entry is clicked\n  const handleHistoryClick = (entry) => {\n    setLatestFinalText(entry.finalText); // Update the Submitted Text box\n  };\n\n  useEffect(() => {\n    const handleBackButton = (event) => {\n      event.preventDefault();\n      const confirmLeave = window.confirm(\n        \"You have unsaved changes. Going back may result in losing your edits. Do you want to continue?\\n\\nIf you want to edit your already submitted text, copy it from here.\"\n      );\n      if (!confirmLeave) {\n        window.history.pushState(null, \"\", window.location.href); // Prevent navigation\n      } else {\n        navigate(-1);\n      }\n    };\n\n\n    // **Push a history state to detect back button click**\n    window.history.pushState(null, \"\", window.location.href);\n    window.addEventListener(\"popstate\", handleBackButton);\n\n    return () => {\n      window.removeEventListener(\"popstate\", handleBackButton);\n    };\n  }, [navigate]);\n\n  useEffect(() => {\n    if (saveHistory.length > 0) {\n      setLatestFinalText(saveHistory[saveHistory.length - 1]?.finalText || \"\"); // Default to last submitted text\n    }\n  }, [saveHistory]);\n  \n  const [submitted, setSubmitted] = useState(false);\n\n  const [responses, setResponses] = useState({\n    clarity: \"\",\n    meaning: \"\",\n    grammar: \"\",\n    needs: \"\",\n    guidelines: \"\",\n    coherent: \"\",\n    editing_effort: \"\",\n  });\n\n  // Handle input changes\n  // const handleOptionChange = (event) => {\n  //   setResponses({ ...responses, [event.target.name]: event.target.value });\n  // };\n\n  // Handle input changes, allowing deselection\nconst handleOptionChange = (event) => {\n  const { name, value } = event.target;\n  setResponses((prevResponses) => ({\n    ...prevResponses,\n    [name]: prevResponses[name] === value ? \"\" : value,  // Toggle selection\n  }));\n};\n  // Check if all required fields are filled\n  const isFormComplete = Object.values(responses).every((value) => value !== \"\" && value !== null);\n\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/Login\"); \n  };\n  \n  const handleCopy = (text) => {\n    navigator.clipboard.writeText(text).then(\n      () => {\n        alert(\"Copied to clipboard!\");\n      },\n      (err) => {\n        console.error(\"Failed to copy text:\", err);\n      }\n    );\n  };\n\n  const handleDownload = (text, filename, format) => {\n    const blob = new Blob([text], { type: \"text/plain;charset=utf-8\" });\n    saveAs(blob, `${filename}.${format}`);\n  };\n\n  // Handle form submission\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    if (!isFormComplete) {\n      alert(\"Please answer all required questions before submitting.\");\n      return;\n    }\n\n    // Simulate saving responses (replace with API call if needed)\n    console.log(\"Survey Responses:\", responses);\n\n    // Show the thank-you message\n    setSubmitted(true);\n  };\n\n  const generateDiff = (input, output) => {\n    const dmp = new DiffMatchPatch();\n    const diffs = dmp.diff_main(input, output);\n    dmp.diff_cleanupSemantic(diffs); // Optional cleanup for better readability\n    return dmp.diff_prettyHtml(diffs);\n  };\n\n  useEffect(() => {\n    const fetchSimplification = async () => {\n      try {\n        const response = await fetch(\"https://textsimplification-eecqhvdcduczf8cz.westus-01.azurewebsites.net/api/simplifications/fetch\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ email, inputText }),\n        });\n  \n        const result = await response.json();\n  \n        if (response.ok) {\n          setData(result.data);\n          setDiffHtml1(generateDiff(result.data.inputText, result.data.outputText)); // Input vs System-generated\n          setDiffHtml2(generateDiff(result.data.outputText, result.data.latestFinalText)); // System-generated vs Submitted\n        }\n      } catch (error) {\n        console.error(\"Error fetching simplification data:\", error);\n      }\n    };\n  \n    if (email && inputText) {\n      fetchSimplification();\n    }\n  }, [email, inputText]);\n\n\n  if (!data)\n    {return <p>Loading...</p>;}\n\n  // const { inputText: input, outputText, editedText } = data;\n  const { inputText: input, outputText, latestText } = data;\n\n  return (\n    <>\n\t\t{/* Navbar */}\n\t\t<nav className={styles.navbar}>\n\t\t  {/* <h1>Text Simplification Tool</h1> */}\n      <h1 \n    onClick={() => window.location.href = \"https://textsimplification-eecqhvdcduczf8cz.westus-01.azurewebsites.net/\"}\n    style={{ cursor: \"pointer\" }} // Makes it look clickable\n \t\t>\n\t\tText Simplification Tool</h1>\n\t\t  <button className={styles.white_btn} onClick={handleLogout}>\n\t\t\tLogout\n\t\t  </button>\n\t\t</nav>\n\n    <div className={`${styles.sidebar} ${isSidebarVisible ? styles.expanded : \"\"}`}>\n         \n         <button className={styles.historyIcon} onClick={() => setIsSidebarVisible(!isSidebarVisible)}>\n           🕒 <p style={{ fontSize: \"15px\" }}>History</p>\n         </button>\n         {isSidebarVisible && (\n           <div className={styles.historyContent}>\n             <button className={styles.closeButton} onClick={() => setIsSidebarVisible(false)}>✖</button>\n             <ul className={styles.historyList}>\n               {saveHistory.map((entry, index) => (\n                 <li key={index} className={styles.historyItem} onClick={() => handleHistoryClick(entry)}>\n                   {entry.timestamp}\n                 </li>\n               ))}\n             </ul>\n           </div>\n         )}\n       </div>\n\n\n    {!submitted ? (\n      <div className={styles.container}>\n\n    {/* <div className={`${styles.mainContent} ${isSidebarVisible ? styles.withSidebar : \"\"}`}>\n    */}\n    <div className={styles.description}>\n\t\t\t \n                    {/* Sidebar for History Navigation */}\n\n\n      \t\t\t<div className={styles.textareas_container}>\n\n  {/* Input Text */}\n  <div className={styles.text_container}>\n    \n    <div className={styles.labelWrapper}>\n      <label className={styles.label} htmlFor=\"inputText\">\n        Input Text\n      </label>\n\n    </div>\n    <div className={styles.wordCount}>Words: {inputWordCount}</div>\n\n    <textarea\n      id=\"inputText\"\n      className={`${styles.textarea} ${styles.side_by_side}`}\n      value={input} readOnly placeholder=\"Input Text\"\n    ></textarea>\n  </div>\n\n\t\t\t{/* system generated text Box */}\n<div className={styles.text_container}>\n  <div className={styles.labelWrapper}>\n    <label className={styles.label} htmlFor=\"outputText\">\n      System-generated Text\n    </label>\n\n\n    <div className={styles.actions}>\n      <div\n        className={styles.copyIcon}\n        onClick={() => handleCopy(outputText)}\n        title=\"Copy to Clipboard\"\n      >\n        📋 {/* Clipboard Emoji */}\n      </div>\n\n      <div\n        className={styles.copyIcon}\n        onClick={() => handleDownload(outputText, \"GeneratedText\", \"txt\")}\n        title=\"Download as .txt file\"\n      >\n        📥 {/* Download Icon */}\n      </div>\n      <button\n        className={styles.toggleDiffBtn}\n        onClick={() => setShowDifference1(!showDifference1)}\n      >\n        {showDifference1 ? \"Hide the comparison\" : \"Compare with input text\"}\n      </button>\n\n    </div>\n  </div>\n  <div className={styles.wordCount}>Words: {outputWordCount}</div>\n\n  <textarea\n    id=\"outputText\"\n    className={`${styles.output_box} ${styles.side_by_side}`}\n    value={outputText}\nreadOnly placeholder=\"Initial Generated Text\"\n\n  ></textarea>\n    {/* Difference Box appears right below System-generated Text */}\n    {showDifference1 && (\n    <div className={styles.diff_box}>\n      <label className={styles.label}>Input vs System-generated Text</label>\n      <div className={`${styles.diff_output}`} dangerouslySetInnerHTML={{ __html: diffHtml1 }}></div>\n    </div>\n  )}\n</div>\n\n<div className={styles.text_container}>\n  <div className={styles.labelWrapper}>\n  <label className={styles.label} htmlFor=\"outputText\">Submitted Text</label>\n  {/* <textarea className={styles.textarea} value={latestText} readOnly></textarea> */}\n\n        {/* <textarea value={latestFinalText} readOnly /> */}\n\n\n    <div className={styles.actions}>\n      <div\n        className={styles.copyIcon}\n        onClick={() => handleCopy(outputText)}\n        title=\"Copy to Clipboard\"\n      >\n        📋 {/* Clipboard Emoji */}\n      </div>\n\n      <div\n        className={styles.copyIcon}\n        onClick={() => handleDownload(outputText, \"SubmittedText\", \"txt\")}\n        title=\"Download as .txt file\"\n      >\n        📥 {/* Download Icon */}\n      </div>\n\n      <button\n        className={styles.toggleDiffBtn}\n        onClick={() => setShowDifference2(!showDifference2)}\n      >\n        {showDifference2 ? \"Hide the comparison\" : \"Compare with system-generated text\"}\n      </button>\n\n    </div>\n  </div>\n  {/* <textarea id=\"EditedText\" className={`${styles.output_box} ${styles.side_by_side}`} value={latestFinalText} readOnly/>\n  */}\n               \n                <div className={styles.wordCount}>Words: {submittedWordCount}</div>\n\n  <textarea\n              id=\"submittedText\"\n              className={`${styles.output_box} ${styles.side_by_side}`}\n              value={latestFinalText}\n              readOnly\n              placeholder=\"Submitted Text\"\n            ></textarea>\n\n              {/* Difference Box appears right below Submitted Text */}\n  {showDifference2 && (\n    <div className={styles.diff_box}>\n      <label className={styles.label}>System-generated vs Submitted Text</label>\n      <div className={`${styles.diff_output}`} dangerouslySetInnerHTML={{ __html: diffHtml2 }}></div>\n    </div>\n  )}\n</div>\n\t\t\t\n\t\t\t</div>\n\n      <div className={styles.diff_container}>\n  {/* Difference for Input vs System-generated Text */}\n  {/* {showDifference1 && (\n    <div className={styles.diff_box}>\n      <label className={styles.label}>Input vs System-generated Text</label>\n\n      <div\n        className={`${styles.diff_output}`}\n        dangerouslySetInnerHTML={{ __html: diffHtml1 }}\n      ></div>\n    </div>\n  )} */}\n\n  {/* Difference for System-generated vs Submitted Text */}\n  {/* {showDifference2 && (\n    <div className={styles.diff_box}>\n      <label className={styles.label}>System-generated vs Submitted Text</label>\n\n      <div\n        className={`${styles.diff_output}`}\n        dangerouslySetInnerHTML={{ __html: diffHtml2 }}\n      ></div>\n    </div>\n  )} */}\n</div>\n\n\n      {/* <div> */}\n  <div className={styles.surveyContainer}>\n\n    <form className={styles.surveyForm} onSubmit={handleFormSubmit}>\n      <h2>Survey</h2>\n      <p><strong>Your feedback is valuable. Please answer all required questions.</strong></p>\n\n\t\t\t{/* <h3 class=\"centered\">Survey</h3>\n\n      <p>\n        <strong>Kindly answer the questions below. Your feedback is valuable to us.</strong>\n      </p> */}\n\n{/* <form onSubmit={handleFormSubmit}> */}\n{/* \n<form class={styles.surveyForm} onSubmit={handleFormSubmit}> */}\n\n       {/* Survey Questions */}\n\n<div className={styles.surveyQuestion}>\n    <label>Is the system generated text clear and free of confusing language? <span style={{ color: \"red\" }}>*</span> </label>\n    <div className={styles.surveyOptions}>\n      <label>\n        <input type=\"radio\" name=\"clarity\" value=\"not-clear\" onChange={handleOptionChange} required />  Not clear at all\n      </label>\n      <label>\n        <input type=\"radio\" name=\"clarity\" value=\"somewhat-clear\" onChange={handleOptionChange} required />  Somewhat clear\n      </label>\n      <label>\n        <input type=\"radio\" name=\"clarity\" value=\"moderately-clear\" onChange={handleOptionChange} required />  Moderately clear\n      </label>\n      <label>\n        <input type=\"radio\" name=\"clarity\" value=\"mostly-clear\" onChange={handleOptionChange} required />  Mostly clear\n      </label>\n      <label>\n        <input type=\"radio\" name=\"clarity\" value=\"very-clear\" onChange={handleOptionChange} required />  Very clear\n      </label>\n    </div>\n  </div>\n\n  <div className={styles.surveyQuestion}>\n    <label>Does the system generated text preserve the original meaning? <span style={{ color: \"red\" }}>*</span> </label>\n    <div className={styles.surveyOptions}>\n      <label>\n        <input type=\"radio\" name=\"meaning\" value=\"not-at-all\" onChange={handleOptionChange} required />  Not at all\n      </label>\n      <label>\n        <input type=\"radio\" name=\"meaning\" value=\"somewhat-preserves\" onChange={handleOptionChange} required />  Somewhat preserves\n      </label>\n      <label>\n        <input type=\"radio\" name=\"meaning\" value=\"moderately-preserves\" onChange={handleOptionChange} required />  Moderately preserves\n      </label>\n      <label>\n        <input type=\"radio\" name=\"meaning\" value=\"mostly-preserves\" onChange={handleOptionChange} required />  Mostly preserves\n      </label>\n      <label>\n        <input type=\"radio\" name=\"meaning\" value=\"completely-preserves\" onChange={handleOptionChange} required />  Completely preserves\n      </label>\n    </div>\n  </div>\n\n  <div className={styles.surveyQuestion}>\n    <label>Are there grammatical errors in the system generated text? <span style={{ color: \"red\" }}>*</span> </label>\n    <div className={styles.surveyOptions}>\n      <label>\n        <input type=\"radio\" name=\"grammar\" value=\"many-errors\" onChange={handleOptionChange} required />  Many errors\n      </label>\n      <label>\n        <input type=\"radio\" name=\"grammar\" value=\"several-errors\" onChange={handleOptionChange} required />  Several errors\n      </label>\n      <label>\n        <input type=\"radio\" name=\"grammar\" value=\"some-errors\" onChange={handleOptionChange} required />  Some errors\n      </label>\n      <label>\n        <input type=\"radio\" name=\"grammar\" value=\"few-errors\" onChange={handleOptionChange} required />  Few errors\n      </label>\n      <label>\n        <input type=\"radio\" name=\"grammar\" value=\"no-errors\" onChange={handleOptionChange} required />  No errors\n      </label>\n    </div>\n  </div>\n\n  <div className={styles.surveyQuestion}>\n    <label>Does the system generated text meet your needs? <span style={{ color: \"red\" }}>*</span> </label>\n    <div className={styles.surveyOptions}>\n    <label><input type=\"radio\" name=\"needs\" value=\"not-at-all\" onChange={handleOptionChange} required />  Not at all</label>\n      <label><input type=\"radio\" name=\"needs\" value=\"somewhat-meets\" onChange={handleOptionChange} required />  Somewhat meets</label>\n      <label><input type=\"radio\" name=\"needs\" value=\"moderately-meets\" onChange={handleOptionChange} required />  Moderately meets</label>\n      <label><input type=\"radio\" name=\"needs\" value=\"mostly-meets\" onChange={handleOptionChange} required />  Mostly meets</label>\n      <label><input type=\"radio\" name=\"needs\" value=\"completely-meets\" onChange={handleOptionChange} required />  Completely meets</label>\n    </div>\n  </div>\n\n  <div className={styles.surveyQuestion}>\n    <label>Does the system generated text follow the IDD guidelines for sentence structure and organization? <span style={{ color: \"red\" }}>*</span> </label>\n    <div className={styles.surveyOptions}>\n    <label><input type=\"radio\" name=\"guidelines\" value=\"not-at-all\" onChange={handleOptionChange} required />  Not at all</label>\n      <label><input type=\"radio\" name=\"guidelines\" value=\"somewhat-follows\" onChange={handleOptionChange} required />  Somewhat follows</label>\n      <label><input type=\"radio\" name=\"guidelines\" value=\"moderately-follows\" onChange={handleOptionChange} required />  Moderately follows</label>\n      <label><input type=\"radio\" name=\"guidelines\" value=\"mostly-follows\" onChange={handleOptionChange} required />  Mostly follows</label>\n      <label><input type=\"radio\" name=\"guidelines\" value=\"completely-follows\" onChange={handleOptionChange} required />  Completely follows</label>\n    </div>\n  </div>\n\n  <div className={styles.surveyQuestion}>\n    <label>Is the system generated text coherent in terms of sentence flow and organization? <span style={{ color: \"red\" }}>*</span> </label>\n    <div className={styles.surveyOptions}>\n    <label><input type=\"radio\" name=\"coherent\" value=\"not-at-all\" onChange={handleOptionChange} required />  Not at all</label>\n      <label><input type=\"radio\" name=\"coherent\" value=\"somewhat-follows\" onChange={handleOptionChange} required />  Somewhat coherent</label>\n      <label><input type=\"radio\" name=\"coherent\" value=\"moderately-follows\" onChange={handleOptionChange} required />  Moderately coherent</label>\n      <label><input type=\"radio\" name=\"coherent\" value=\"mostly-follows\" onChange={handleOptionChange} required />  Mostly coherent</label>\n      <label><input type=\"radio\" name=\"coherent\" value=\"completely-follows\" onChange={handleOptionChange} required />  Completely coherent</label>\n    </div>\n  </div>\n\n  <div className={styles.surveyQuestion}>\n    <label><strong>[OPTIONAL]</strong> How much effort was needed to edit the simplified text to make it acceptable? </label>\n    <div className={styles.surveyOptions}>\n    <label><input type=\"radio\" name=\"editing_effort\" value=\"many-errors\" checked={responses.editing_effort === \"many-errors\"} onChange={handleOptionChange}/>  A lot of effort</label>\n      <label><input type=\"radio\" name=\"editing_effort\" value=\"several-errors\" checked={responses.editing_effort === \"several-errors\"} onChange={handleOptionChange}/>  Significant effort</label>\n      <label><input type=\"radio\" name=\"editing_effort\" value=\"some-errors\" checked={responses.editing_effort === \"some-errors\"} onChange={handleOptionChange}/>  Moderate effort</label>\n      <label><input type=\"radio\" name=\"editing_effort\" value=\"few-errors\" checked={responses.editing_effort === \"few-errors\"} onChange={handleOptionChange}/>  Minimal effort</label>\n      <label><input type=\"radio\" name=\"editing_effort\" value=\"no-errors\" checked={responses.editing_effort === \"no-errors\"} onChange={handleOptionChange}/>  No effort at all</label>\n    </div>\n  </div>\n\n  <div className={styles.surveyQuestion}>\n    <label><strong>[OPTIONAL]</strong> Do you have any additional comments about the system generated text? </label>\n    <textarea\n      // className={styles.textarea}\n      name=\"comments\"\n      rows=\"4\"\n      cols=\"70\"\n      placeholder=\"Enter your feedback or any additional comments here\"\n    ></textarea>\n  </div>\n\n  <div>\n    <button className={styles.submitButton} type=\"submit\" disabled={!isFormComplete}>Submit</button>\n  </div>\n\n</form>\n</div>\n\n</div>\n</div>\n) : (\n  // Thank You Message & Redirect\n  <div className={styles.thankYouContainer}>\n    <h2>Thank You!</h2>\n    <p>Your responses have been saved. We appreciate your feedback.</p>\n    <button\n      className={styles.redirectButton}\n      onClick={() => navigate(\"/simplify\", { replace: true })}\n    >\n      Start Another Simplification\n    </button>\n  </div>\n)}\n\n\n\n</>\n  );\n};\n\nexport default SurveyPage;\n\n       {/* <div className={styles.surveyQuestion}>\n            <label>Is the system-generated text clear and free of confusing language?</label>\n            <div className={styles.surveyOptions}>\n              {[\"not-clear\", \"somewhat-clear\", \"moderately-clear\", \"mostly-clear\", \"very-clear\"].map((option) => (\n                <label key={option}>\n                  <input type=\"radio\" name=\"clarity\" value={option} onChange={handleOptionChange} required />\n                  {option.replace(\"-\", \" \")}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <div className={styles.surveyQuestion}>\n            <label>Does the system-generated text preserve the original meaning?</label>\n            <div className={styles.surveyOptions}>\n              {[\"not-at-all\", \"somewhat-preserves\", \"moderately-preserves\", \"mostly-preserves\", \"completely-preserves\"].map((option) => (\n                <label key={option}>\n                  <input type=\"radio\" name=\"meaning\" value={option} onChange={handleOptionChange} required />\n                  {option.replace(\"-\", \" \")}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <div className={styles.surveyQuestion}>\n            <label>Are there grammatical errors in the system-generated text?</label>\n            <div className={styles.surveyOptions}>\n              {[\"many-errors\", \"several-errors\", \"some-errors\", \"few-errors\", \"no-errors\"].map((option) => (\n                <label key={option}>\n                  <input type=\"radio\" name=\"grammar\" value={option} onChange={handleOptionChange} required />\n                  {option.replace(\"-\", \" \")}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <div className={styles.surveyQuestion}>\n            <label>Does the system-generated text meet your needs?</label>\n            <div className={styles.surveyOptions}>\n              {[\"not-at-all\", \"somewhat-meets\", \"moderately-meets\", \"mostly-meets\", \"completely-meets\"].map((option) => (\n                <label key={option}>\n                  <input type=\"radio\" name=\"needs\" value={option} onChange={handleOptionChange} required />\n                  {option.replace(\"-\", \" \")}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <div className={styles.surveyQuestion}>\n            <label>Does the system-generated text follow the IDD guidelines for sentence structure and organization?</label>\n            <div className={styles.surveyOptions}>\n              {[\"not-at-all\", \"somewhat-follows\", \"moderately-follows\", \"mostly-follows\", \"completely-follows\"].map((option) => (\n                <label key={option}>\n                  <input type=\"radio\" name=\"guidelines\" value={option} onChange={handleOptionChange} required />\n                  {option.replace(\"-\", \" \")}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <div className={styles.surveyQuestion}>\n            <label>Is the system-generated text coherent in terms of sentence flow and organization?</label>\n            <div className={styles.surveyOptions}>\n              {[\"not-at-all\", \"somewhat-coherent\", \"moderately-coherent\", \"mostly-coherent\", \"completely-coherent\"].map((option) => (\n                <label key={option}>\n                  <input type=\"radio\" name=\"coherent\" value={option} onChange={handleOptionChange} required />\n                  {option.replace(\"-\", \" \")}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <div className={styles.surveyQuestion}>\n            <label>Is the system-generated text coherent in terms of sentence flow and organization?</label>\n            <div className={styles.surveyOptions}>\n              {[\"not-at-all\", \"somewhat-coherent\", \"moderately-coherent\", \"mostly-coherent\", \"completely-coherent\"].map((option) => (\n                <label key={option}>\n                  <input type=\"radio\" name=\"editing_effort\" value={option} onChange={handleOptionChange} required />\n                  {option.replace(\"-\", \" \")}\n                </label>\n              ))}\n            </div>\n          </div>\n\n\n          <div className={styles.surveyQuestion}>\n            <label><strong>[OPTIONAL]</strong> Additional comments:</label>\n            <textarea name=\"comments\" rows=\"4\" cols=\"70\" placeholder=\"Enter your feedback here\"></textarea>\n          </div> */}\n"],"mappings":"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AAa,CAAC3E,IAAI,CAAC,QAAQ,CAAC4E,QAAQ,CAAE,CAACjG,cAAe,CAAA2C,QAAA,CAAC,QAAM,CAAQ,CAAC,CAC7F,CAAC,EAEF,CAAC,CACF,CAAC,EAED,CAAC,CACD,CAAC,cAEJ;AACApH,KAAA,QAAKsH,SAAS,CAAE5H,MAAM,CAACiL,iBAAkB,CAAAvD,QAAA,eACvCtH,IAAA,OAAAsH,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBtH,IAAA,MAAAsH,QAAA,CAAG,8DAA4D,CAAG,CAAC,cACnEtH,IAAA,WACEwH,SAAS,CAAE5H,MAAM,CAACkL,cAAe,CACjCpD,OAAO,CAAEA,CAAA,GAAM/F,QAAQ,CAAC,WAAW,CAAE,CAAEoJ,OAAO,CAAE,IAAK,CAAC,CAAE,CAAAzD,QAAA,CACzD,8BAED,CAAQ,CAAC,EACN,CACN,EAIC,CAAC,CAEH,CAAC,CAED,cAAe,CAAAjH,UAAU,CAElB,CAAC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAxFQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}