{"ast":null,"code":"var _jsxFileName = \"/Users/anukumar/Desktop/Autumn 2024/Text Simplification/project_v3/client/src/components/Review/index.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport DiffMatchPatch from \"diff-match-patch\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Review = () => {\n  _s();\n  const {\n    state\n  } = useLocation();\n  //   const { inputText, outputText } = state || { inputText: \"\", outputText: \"\" };\n  //   const navigate = useNavigate();\n  const {\n    inputText,\n    outputText: initialOutputText\n  } = state || {\n    inputText: \"\",\n    outputText: \"\"\n  };\n  const [outputText, setOutputText] = useState(initialOutputText);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEditable, setIsEditable] = useState(false); // For toggling edit mode\n  const [diffHtml, setDiffHtml] = useState(\"\");\n  const [isSaveButtonVisible, setIsSaveButtonVisible] = useState(true);\n  const [showSurveyPrompt, setShowSurveyPrompt] = useState(false); // State for survey prompt\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n\n  // Function to calculate and render diff\n  const generateDiff = (input, output) => {\n    const dmp = new DiffMatchPatch();\n    const diffs = dmp.diff_main(input, output);\n    dmp.diff_cleanupSemantic(diffs); // Optional cleanup for better readability\n    return dmp.diff_prettyHtml(diffs); // Generate diff HTML\n  };\n\n  // Effect to calculate diff whenever text changes\n  useEffect(() => {\n    const diffResult = generateDiff(inputText, outputText);\n    setDiffHtml(diffResult);\n  }, [inputText, outputText]);\n  const handleSave = async (isAuto = false) => {\n    //\t\tsetIsSaveButtonVisible(false);\n    if (isAuto && isAuto.nativeEvent) {\n      isAuto = false; // Default behavior if called by an event\n    }\n    try {\n      const user = JSON.parse(localStorage.getItem(\"user\")); // Retrieve user info\n      if (!user) {\n        alert(\"User not logged in!\");\n        return;\n      }\n      const payload = {\n        userId: user._id,\n        email: user.email,\n        inputText,\n        ...(isEditable ? {\n          editedText: outputText\n        } : {\n          outputText,\n          editableText: outputText\n        })\n      };\n      const endpoint = isEditable ? \"http://localhost:8080/api/simplifications/edit\" // Endpoint for updating\n      : \"http://localhost:8080/api/simplifications\"; // Endpoint for initial save\n\n      const method = isEditable ? \"PUT\" : \"POST\"; // Use PUT for updates, POST for saves\n\n      const response = await fetch(endpoint, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        alert(isEditable ? \"Edited text saved successfully!\" : \"Simplification saved successfully!\");\n\n        //setShowSurveyPrompt(true); \n        console.log(\"isSaveButtonVisible\", isSaveButtonVisible);\n        console.log(\"isEditable\", isEditable);\n        console.log(\"isAuto\", isAuto);\n        if (!isSaveButtonVisible) {\n          //edit, save, edit\n          setShowSurveyPrompt(false); // Show the survey prompt\n        } else if (isSaveButtonVisible && !isEditable && isAuto)\n          //true false -- first time save or edit button clicked\n          {\n            setShowSurveyPrompt(false);\n          } else if (isSaveButtonVisible && isEditable) {\n          setShowSurveyPrompt(true);\n        } else if (isSaveButtonVisible && !isEditable && !isAuto)\n          //true false -- first time save or edit button clicked\n          {\n            setShowSurveyPrompt(true);\n          }\n        if (isEditable) {\n          {\n            setIsEditable(false); // Exit editing mode after saving edits\n            // disable saving button\n            setIsSaveButtonVisible(false); // Hide the save button\n            // Show the survey prompt\n            // setShowSurveyPrompt(true); \n          }\n        }\n      } else {\n        const error = await response.json();\n        alert(error.message || \"Failed to save simplification.\");\n      }\n    } catch (error) {\n      console.error(\"Error saving simplification:\", error);\n      alert(\"An error occurred. Please try again.\");\n    }\n  };\n  const handleEdit = () => {\n    let isAuto = true;\n    handleSave(isAuto); // Save the current output text\n    setIsEditable(true); // Enable editing mode\n    setIsSaveButtonVisible(true);\n\n    //navigate(\"/edit\"); // Navigate to edit page\n\n    //setShowSurveyPrompt(false);\n\n    // Add back button\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: styles.navbar,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Text Simplification Study\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.white_btn,\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main_container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.description,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Review the generated output and make any necessary edits. Click the \\\"Edit\\\" button to make changes to the text. Once you are satisfied with the text, click the \\\"Save\\\" button to save your changes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.form_container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.textareas_container,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.text_container,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: styles.label,\n                htmlFor: \"inputText\",\n                children: \"Input Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"inputText\",\n                className: `${styles.textarea} ${styles.side_by_side}`,\n                value: inputText\n                //onChange={(e) => setInputText(e.target.value)}\n                ,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.text_container,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: styles.label,\n                htmlFor: \"diffText\",\n                children: \"System-generated Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"diffText\",\n                className: `${styles.output_box} ${styles.side_by_side}`,\n                value: outputText,\n                onChange: e => setOutputText(e.target.value),\n                dangerouslySetInnerHTML: {\n                  __html: diffHtml\n                },\n                readOnly: !isEditable,\n                placeholder: \"Output\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.button_container,\n            children: [isSaveButtonVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${styles.save_btn} ${styles.text_btn}`,\n              onClick: handleSave,\n              disabled: isLoading,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 9\n            }, this), !isEditable && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${styles.edit_btn} ${styles.text_btn}`,\n              onClick: handleEdit,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 9\n          }, this), showSurveyPrompt && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.survey_prompt,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Please take the survey to help us improve \", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.link_btn,\n                onClick: () => navigate(\"/survey\", {\n                  state: {\n                    email: JSON.parse(localStorage.getItem(\"user\")).email,\n                    inputText\n                  }\n                }),\n                children: \"Take the Survey\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Review, \"Sr4NU8ARXgD8XcDtK1PvEiaIWOQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Review;\nexport default Review;\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","DiffMatchPatch","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Review","_s","state","inputText","outputText","initialOutputText","setOutputText","isLoading","setIsLoading","isEditable","setIsEditable","diffHtml","setDiffHtml","isSaveButtonVisible","setIsSaveButtonVisible","showSurveyPrompt","setShowSurveyPrompt","navigate","handleLogout","localStorage","removeItem","window","location","reload","generateDiff","input","output","dmp","diffs","diff_main","diff_cleanupSemantic","diff_prettyHtml","useEffect","diffResult","handleSave","isAuto","nativeEvent","user","JSON","parse","getItem","alert","payload","userId","_id","email","editedText","editableText","endpoint","method","response","fetch","headers","body","stringify","ok","data","json","console","log","error","message","handleEdit","children","className","navbar","fileName","_jsxFileName","lineNumber","columnNumber","white_btn","onClick","main_container","description","form_container","textareas_container","text_container","label","htmlFor","id","textarea","side_by_side","value","readOnly","output_box","onChange","e","target","dangerouslySetInnerHTML","__html","placeholder","button_container","save_btn","text_btn","disabled","edit_btn","survey_prompt","link_btn","_c","$RefreshReg$"],"sources":["/Users/anukumar/Desktop/Autumn 2024/Text Simplification/project_v3/client/src/components/Review/index.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport DiffMatchPatch from \"diff-match-patch\";\nimport styles from \"./styles.module.css\";\n\nconst Review = () => {\n  const { state } = useLocation();\n//   const { inputText, outputText } = state || { inputText: \"\", outputText: \"\" };\n//   const navigate = useNavigate();\nconst { inputText, outputText: initialOutputText } = state || {\n    inputText: \"\",\n    outputText: \"\",\n  };\n  const [outputText, setOutputText] = useState(initialOutputText);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [isEditable, setIsEditable] = useState(false); // For toggling edit mode\n\tconst [diffHtml, setDiffHtml] = useState(\"\"); \n\tconst [isSaveButtonVisible, setIsSaveButtonVisible] = useState(true);\n\tconst [showSurveyPrompt, setShowSurveyPrompt] = useState(false); // State for survey prompt\n    const navigate = useNavigate();\n\n\tconst handleLogout = () => {\n\t  localStorage.removeItem(\"token\");\n\t  window.location.reload();\n\t};\n\n\t// Function to calculate and render diff\n\tconst generateDiff = (input, output) => {\n\tconst dmp = new DiffMatchPatch();\n\tconst diffs = dmp.diff_main(input, output);\n\tdmp.diff_cleanupSemantic(diffs); // Optional cleanup for better readability\n\treturn dmp.diff_prettyHtml(diffs); // Generate diff HTML\n\t};\n\n\t// Effect to calculate diff whenever text changes\n\tuseEffect(() => {\n\tconst diffResult = generateDiff(inputText, outputText);\n\tsetDiffHtml(diffResult);\n\t}, [inputText, outputText]);\n\t\n\n\n  \tconst handleSave = async (isAuto = false) => {\n//\t\tsetIsSaveButtonVisible(false);\nif (isAuto && isAuto.nativeEvent) {\n\tisAuto = false; // Default behavior if called by an event\n}\n\n\t\t  \n\t\ttry {\n\t\t  const user = JSON.parse(localStorage.getItem(\"user\")); // Retrieve user info\n\t\t  if (!user) {\n\t\t\talert(\"User not logged in!\");\n\t\t\treturn;\n\t\t  }\n\t  \n\t\t  const payload = {\n\t\t\tuserId: user._id,\n\t\t\temail: user.email,\n\t\t\tinputText,\n\t\t\t...(isEditable ? { editedText: outputText } : { outputText, editableText: outputText }),\n\t\t  };\n\t  \n\t\t  const endpoint = isEditable\n\t\t\t? \"http://localhost:8080/api/simplifications/edit\" // Endpoint for updating\n\t\t\t: \"http://localhost:8080/api/simplifications\"; // Endpoint for initial save\n\t  \n\t\t  const method = isEditable ? \"PUT\" : \"POST\"; // Use PUT for updates, POST for saves\n\t  \n\t\t  const response = await fetch(endpoint, {\n\t\t\tmethod,\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify(payload),\n\t\t  });\n\t  \n\t\t  if (response.ok) {\n\t\t\tconst data = await response.json();\n            \n\t\t\talert(isEditable ? \"Edited text saved successfully!\" : \"Simplification saved successfully!\");\n\n\t\t\t//setShowSurveyPrompt(true); \n\t\t\tconsole.log(\"isSaveButtonVisible\", isSaveButtonVisible);\n\t\t\tconsole.log(\"isEditable\", isEditable);\n\t\t\tconsole.log(\"isAuto\", isAuto);\n\t\t\tif (!isSaveButtonVisible) {  //edit, save, edit\n\t\t\t\tsetShowSurveyPrompt(false); // Show the survey prompt\n\t\t\t  }\n\t\t\telse if (isSaveButtonVisible && !isEditable && isAuto)  //true false -- first time save or edit button clicked\n\t\t\t{\n\t\t\t\tsetShowSurveyPrompt(false);\n\t\t\t}\n\t\t\telse if (isSaveButtonVisible && isEditable)\n\t\t\t{\n\t\t\t\tsetShowSurveyPrompt(true);\n\t\t\t} \n\t\t\telse if (isSaveButtonVisible && !isEditable && !isAuto)  //true false -- first time save or edit button clicked\n\t\t\t{\n\t\t\t\tsetShowSurveyPrompt(true);\n\t\t\t}\n\n\n\t\t\tif (isEditable) {\n\t\t\t {\n\t\t\t\tsetIsEditable(false); // Exit editing mode after saving edits\n\t\t\t  // disable saving button\n\t\t\t  setIsSaveButtonVisible(false); // Hide the save button\n\t\t\t   // Show the survey prompt\n\t\t\t // setShowSurveyPrompt(true); \n\t\t\t }\n\t\t  }} else {\n\t\t\tconst error = await response.json();\n\t\t\talert(error.message || \"Failed to save simplification.\");\n\t\t  }\n\t\t} catch (error) {\n\t\t  console.error(\"Error saving simplification:\", error);\n\t\t  alert(\"An error occurred. Please try again.\");\n\t\t}\n\n\t  };\n\t  \n\t\n  \n\tconst handleEdit = () => {\n\t  let isAuto = true;\n\t  handleSave(isAuto); // Save the current output text\n\t  setIsEditable(true); // Enable editing mode\n\t  setIsSaveButtonVisible(true);\n\n\t  //navigate(\"/edit\"); // Navigate to edit page\n\n\t  //setShowSurveyPrompt(false);\n\n\t  // Add back button\n\t};\n  \n  return (\n    <>\n    <nav className={styles.navbar}>\n      <h1>Text Simplification Study</h1>\n      <button className={styles.white_btn} onClick={handleLogout}>\n        Logout\n      </button>\n    </nav>\n\n    <div className={styles.main_container}>\n        <div className={styles.description}>\n\t\t\t  <p>\n\t\t\t\tReview the generated output and make any necessary edits. Click the \"Edit\" button to make changes to the text. Once you are satisfied with the text, click the \"Save\" button to save your changes.\n\t\t\t  </p>\n\t\t\t\n            <br></br>\n            \n     \t\t\t<div className={styles.form_container}>\n     \t\t\t  {/* Input and Output Boxes */}\n     \t\t\t  <div className={styles.textareas_container}>\n     \t\t\t\t{/* Input Text Box */}\n     \t\t\t\t<div className={styles.text_container}>\n     \t\t\t\t  <label className={styles.label} htmlFor=\"inputText\">\n     \t\t\t\t\tInput Text\n     \t\t\t\t  </label>\n    \t\t\t\t  <textarea\n    \t\t\t\t\tid=\"inputText\"\n    \t\t\t\t\tclassName={`${styles.textarea} ${styles.side_by_side}`}\n    \t\t\t\t\tvalue={inputText}\n    \t\t\t\t\t//onChange={(e) => setInputText(e.target.value)}\n    \t\t\t\t\treadOnly\n    \t\t\t\t  ></textarea>\n    \t\t\t\t</div>\n      \n    \t\t\t\t{/* Output Text Box */}\n    \t\t\t\t<div className={styles.text_container}>\n    \t\t\t\t  <label className={styles.label} htmlFor=\"diffText\">\n    \t\t\t\t\tSystem-generated Text\n    \t\t\t\t  </label>\n    \t\t\t\t  <textarea\n    \t\t\t\t\tid=\"diffText\"\n    \t\t\t\t\tclassName={`${styles.output_box} ${styles.side_by_side}`}\n    \t\t\t\t\tvalue={outputText}\n    \t\t\t\t\tonChange={(e) => setOutputText(e.target.value)}\n\t\t\t\t\t\tdangerouslySetInnerHTML={{ __html: diffHtml }}\n    \t\t\t\t\treadOnly={!isEditable}\n    \t\t\t\t\tplaceholder=\"Output\"\n    \t\t\t\t  ></textarea>\n    \t\t\t\t</div>\n\n    \t\t\t  </div>\n    \n    \n    \t\t\t\t{/* Save and Edit Buttons */}\n    \t\t\t\t<div className={styles.button_container}>\n\n    \n    \t\t\t\t{isSaveButtonVisible && (\n    \t\t\t\t<button\n    \t\t\t\t\tclassName={`${styles.save_btn} ${styles.text_btn}`}\n    \t\t\t\t\tonClick={handleSave}\n    \t\t\t\t\tdisabled={isLoading}\n    \t\t\t\t>\n    \t\t\t\t\tSave\n    \t\t\t\t</button>\n    \t\t\t\t)}\n    \n    \t\t\t\t{!isEditable && (\n    \t\t\t\t\t<button\n    \t\t\t\t\tclassName={`${styles.edit_btn} ${styles.text_btn}`}\n    \t\t\t\t\tonClick={handleEdit}\n    \t\t\t\t\t>\n    \t\t\t\t\tEdit\n    \t\t\t\t\t</button>\n    \t\t\t\t)}\n    \t\t\t\t</div>\n          {/* Survey Prompt */}\n    \t  {showSurveyPrompt && (\n                  <div className={styles.survey_prompt}>\n                    <p>\n                      Please take the survey to help us improve {\" \"}\n                      <button\n                        className={styles.link_btn}\n                        onClick={() =>\n                          navigate(\"/survey\", {\n                            state: { email: JSON.parse(localStorage.getItem(\"user\")).email, inputText },\n                          })\n                        }\n                      >\n                        Take the Survey\n                      </button>\n                    </p>\n                  </div>\n                )}\n    \n    \t\t\t</div>\n    \t\t</div> \n    \t\t</div>\n    \t  </>\n  );\n};\n\nexport default Review;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}