{"ast":null,"code":"var _jsxFileName = \"/Users/anukumar/Desktop/Spring2025/local-textsimplification/client/src/components/StatsButton/index.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from \"react\";\nimport { calcMetrics } from \"../../utils/textMetrics\"; // ← already written\nimport styles from \"./stats.module.css\"; // make next\n\n/** Small icon‑button that pops a metrics panel. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StatsButton({\n  text\n}) {\n  _s();\n  var _metrics$fleschReadin, _metrics$fleschKincai, _metrics$lexicalDensi, _metrics$avgSentenceL, _metrics$avgCharsPerW, _metrics$avgSyllables;\n  const [open, setOpen] = useState(false);\n\n  /* re‑compute only if the text itself changes */\n  const metrics = useMemo(() => calcMetrics(text || \"\"), [text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.icon,\n      title: \"Show statistics\",\n      onClick: () => setOpen(o => !o),\n      children: \"\\uD83D\\uDCCA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.panel,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.close,\n        onClick: () => setOpen(false),\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Readability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.row,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Flesch Reading Ease\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: (_metrics$fleschReadin = metrics.fleschReadingEase) === null || _metrics$fleschReadin === void 0 ? void 0 : _metrics$fleschReadin.toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.row,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Flesch\\u2011Kincaid Grade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: (_metrics$fleschKincai = metrics.fleschKincaidGrade) === null || _metrics$fleschKincai === void 0 ? void 0 : _metrics$fleschKincai.toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Linguistic Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), [[\"Lexical density\", (_metrics$lexicalDensi = metrics.lexicalDensity) === null || _metrics$lexicalDensi === void 0 ? void 0 : _metrics$lexicalDensi.toFixed(2)], [\"Word count\", metrics.wordCount], [\"Unique words\", metrics.uniqueWords], [\"Sentence count\", metrics.sentenceCount], [\"Avg. sentence length\", (_metrics$avgSentenceL = metrics.avgSentenceLength) === null || _metrics$avgSentenceL === void 0 ? void 0 : _metrics$avgSentenceL.toFixed(2)], [\"Chars (with spaces)\", metrics.charsWithSpaces], [\"Chars (no spaces)\", metrics.charsWithoutSpaces], [\"Avg. chars / word\", (_metrics$avgCharsPerW = metrics.avgCharsPerWord) === null || _metrics$avgCharsPerW === void 0 ? void 0 : _metrics$avgCharsPerW.toFixed(2)], [\"Syllables (∼)\", metrics.syllableCount], [\"Avg. syllables / word\", (_metrics$avgSyllables = metrics.avgSyllablesPerWord) === null || _metrics$avgSyllables === void 0 ? void 0 : _metrics$avgSyllables.toFixed(2)]].map(([k, v]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.row,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: k\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: v\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, k, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(StatsButton, \"x88AydA2vyXENzPlfVG2WmsOb1c=\");\n_c = StatsButton;\nvar _c;\n$RefreshReg$(_c, \"StatsButton\");","map":{"version":3,"names":["React","useMemo","useState","calcMetrics","styles","jsxDEV","_jsxDEV","StatsButton","text","_s","_metrics$fleschReadin","_metrics$fleschKincai","_metrics$lexicalDensi","_metrics$avgSentenceL","_metrics$avgCharsPerW","_metrics$avgSyllables","open","setOpen","metrics","className","wrapper","children","icon","title","onClick","o","fileName","_jsxFileName","lineNumber","columnNumber","panel","close","row","fleschReadingEase","toFixed","fleschKincaidGrade","lexicalDensity","wordCount","uniqueWords","sentenceCount","avgSentenceLength","charsWithSpaces","charsWithoutSpaces","avgCharsPerWord","syllableCount","avgSyllablesPerWord","map","k","v","_c","$RefreshReg$"],"sources":["/Users/anukumar/Desktop/Spring2025/local-textsimplification/client/src/components/StatsButton/index.js"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { calcMetrics } from \"../../utils/textMetrics\";   // ← already written\nimport styles from \"./stats.module.css\";                 // make next\n\n/** Small icon‑button that pops a metrics panel. */\nexport default function StatsButton({ text }) {\n  const [open, setOpen] = useState(false);\n\n  /* re‑compute only if the text itself changes */\n  const metrics = useMemo(() => calcMetrics(text || \"\"), [text]);\n\n  return (\n    <div className={styles.wrapper}>\n      <span\n        className={styles.icon}\n        title=\"Show statistics\"\n        onClick={() => setOpen((o) => !o)}\n      >\n        📊\n      </span>\n\n      {open && (\n        <div className={styles.panel}>\n          <button className={styles.close} onClick={() => setOpen(false)}>✖</button>\n\n          <h4>Readability</h4>\n          <div className={styles.row}>\n            <label>Flesch Reading Ease</label>\n            <span>{metrics.fleschReadingEase?.toFixed(1)}</span>\n          </div>\n          <div className={styles.row}>\n            <label>Flesch‑Kincaid Grade</label>\n            <span>{metrics.fleschKincaidGrade?.toFixed(1)}</span>\n          </div>\n\n          <h4>Linguistic Metrics</h4>\n          {[\n            [\"Lexical density\", metrics.lexicalDensity?.toFixed(2)],\n            [\"Word count\", metrics.wordCount],\n            [\"Unique words\", metrics.uniqueWords],\n            [\"Sentence count\", metrics.sentenceCount],\n            [\"Avg. sentence length\", metrics.avgSentenceLength?.toFixed(2)],\n            [\"Chars (with spaces)\", metrics.charsWithSpaces],\n            [\"Chars (no spaces)\", metrics.charsWithoutSpaces],\n            [\"Avg. chars / word\", metrics.avgCharsPerWord?.toFixed(2)],\n            [\"Syllables (∼)\", metrics.syllableCount],\n            [\"Avg. syllables / word\", metrics.avgSyllablesPerWord?.toFixed(2)],\n          ].map(([k, v]) => (\n            <div key={k} className={styles.row}>\n              <label>{k}</label>\n              <span>{v}</span>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}