{"ast":null,"code":"var _jsxFileName = \"/Users/anukumar/Desktop/Autumn 2024/Text Simplification/project_v2/client/src/components/Review/index.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Review = () => {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const {\n    inputText,\n    outputText\n  } = state || {\n    inputText: \"\",\n    outputText: \"\"\n  };\n  //   const navigate = useNavigate();\n\n  // const [inputText, setInputText] = useState(\"\");\n  // const [outputText, setOutputText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isEditable, setIsEditable] = useState(false); // For toggling edit mode\n  const [uploadedFileName, setUploadedFileName] = useState(\"\"); // State for file name\n  const [isSaveButtonVisible, setIsSaveButtonVisible] = useState(true);\n  const [showSurveyPrompt, setShowSurveyPrompt] = useState(false); // State for survey prompt\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n  const handleSave = () => {\n    alert(\"Text saved successfully!\");\n    // Add your save logic here if needed\n    navigate(\"/simplify\"); // Redirect back to Main\n  };\n  const handleEdit = () => {\n    navigate(\"/simplify\", {\n      state: {\n        inputText,\n        outputText\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: styles.navbar,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Text Simplification Study\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.white_btn,\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main_container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.form_container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.textareas_container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.text_container,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.label,\n              htmlFor: \"inputText\",\n              children: \"Input Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"inputText\",\n              className: `${styles.textarea} ${styles.side_by_side}`,\n              value: inputText,\n              onChange: e => setInputText(e.target.value),\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.text_container,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.label,\n              htmlFor: \"outputText\",\n              children: \"System-generated Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"outputText\",\n              className: `${styles.output_box} ${styles.side_by_side}`,\n              value: outputText,\n              onChange: e => setOutputText(e.target.value),\n              readOnly: !isEditable,\n              placeholder: \"Output\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.button_container,\n          children: [isSaveButtonVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.save_btn} ${styles.text_btn}`,\n            onClick: handleSave,\n            disabled: isLoading,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }, this), !isEditable && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${styles.edit_btn} ${styles.text_btn}`,\n            onClick: handleEdit,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), showSurveyPrompt && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.survey_prompt,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Please take the survey to help us improve.\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.link_btn,\n              onClick: () => navigate(\"/survey\", {\n                state: {\n                  email: JSON.parse(localStorage.getItem(\"user\")).email,\n                  inputText\n                }\n              }),\n              children: \"Take the Survey\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), \"}\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true)\n  // <div className={styles.review_container}>\n  //   <h1>Review Simplified Text</h1>\n  //   <div className={styles.textareas_container}>\n  //     <div className={styles.text_container}>\n  //       <label className={styles.label}>Input Text</label>\n  //       <textarea\n  //         className={`${styles.textarea} ${styles.readonly}`}\n  //         value={inputText}\n  //         readOnly\n  //       ></textarea>\n  //     </div>\n\n  //     <div className={styles.text_container}>\n  //       <label className={styles.label}>Simplified Text</label>\n  //       <textarea\n  //         className={`${styles.textarea} ${styles.readonly}`}\n  //         value={outputText}\n  //         readOnly\n  //       ></textarea>\n  //     </div>\n  //   </div>\n\n  //   <div className={styles.button_container}>\n  //     <button className={styles.save_btn} onClick={handleSave}>\n  //       Save\n  //     </button>\n  //     <button className={styles.edit_btn} onClick={handleEdit}>\n  //       Edit\n  //     </button>\n  //   </div>\n  // </div>\n  // </>\n  ;\n};\n_s(Review, \"ayr6C4y71peAALOkEZd3r4eUdj8=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Review;\nexport default Review;\n\n// \t  <>\n\n// \t\t<div className={styles.main_container}>\n// \t\t  {!isSubmitted ? (\n// \t\t\t<div className={styles.description}>\n// \t\t\t  <p>\n// \t\t\t\tThis app is about simplifying text for improved readability and\n// \t\t\t\taccessibility.\n// \t\t\t  </p>\n// \t\t\t  <p>\n// \t\t\t\tUpload a document or paste your text to get a simplified version\n// \t\t\t\twith just a click.\n// \t\t\t  </p>\n\n// \t\t\t  <div className={styles.form_container}>\n// \t\t\t\t{/* Input Area */}\n// \t\t\t\t<div className={styles.input_area}>\n// \t\t\t\t  <div className={styles.text_container}>\n// \t\t\t\t\t<label className={styles.label} htmlFor=\"inputText\">\n// \t\t\t\t\t  Input Text\n// \t\t\t\t\t</label>\n// \t\t\t\t\t<textarea\n// \t\t\t\t\t  id=\"inputText\"\n// \t\t\t\t\t  className={styles.textarea}\n// \t\t\t\t\t  placeholder=\"Original Text\"\n// \t\t\t\t\t  value={inputText}\n// \t\t\t\t\t  onChange={(e) => setInputText(e.target.value)}\n// \t\t\t\t\t></textarea>\n// \t\t\t\t  </div>\n\n// \t\t\t\t  {/* OR Divider */}\n// \t\t\t\t  <div className={styles.or_divider}>OR</div>\n\n// \t\t\t\t  {/* File Upload */}\n// \t\t\t\t  <div className={styles.upload_area}>\n// \t\t\t\t\t<label htmlFor=\"fileUpload\" className={styles.upload_box}>\n// \t\t\t\t\t  {uploadedFileName ? (\n// \t\t\t\t\t\t<>\n// \t\t\t\t\t\t  File uploaded: <strong>{uploadedFileName}</strong>\n// \t\t\t\t\t\t</>\n// \t\t\t\t\t  ) : (\n// \t\t\t\t\t\t<>\n// \t\t\t\t\t\t  Click to Upload a PDF\n// \t\t\t\t\t\t  <br />\n// \t\t\t\t\t\t  <span>...or drag and drop a file.</span>\n// \t\t\t\t\t\t</>\n// \t\t\t\t\t  )}\n// \t\t\t\t\t</label>\n// \t\t\t\t\t<input\n// \t\t\t\t\t  type=\"file\"\n// \t\t\t\t\t  id=\"fileUpload\"\n// \t\t\t\t\t  accept=\"application/pdf\"\n// \t\t\t\t\t  onChange={handleFileUpload}\n// \t\t\t\t\t  className={styles.hidden_input}\n// \t\t\t\t\t/>\n// \t\t\t\t  </div>\n// \t\t\t\t</div>\n// \t\t\t  </div>\n// \t\t\t  {/* Submit Button */}\n// \t\t\t  <button\n// \t\t\t\tclassName={styles.submit_btn}\n// \t\t\t\tonClick={handleSubmit}\n// \t\t\t\tdisabled={!inputText.trim() || isLoading}\n// \t\t\t  >\n// \t\t\t\t{isLoading ? \"Processing...\" : \"Simplfiy Text\"}\n// \t\t\t  </button>\n// \t\t\t</div>\n// \t\t  ) : (\n// \t\t\t<div className={styles.form_container}>\n// \t\t\t  {/* Input and Output Boxes */}\n// \t\t\t  <div className={styles.textareas_container}>\n// \t\t\t\t{/* Input Text Box */}\n// \t\t\t\t<div className={styles.text_container}>\n// \t\t\t\t  <label className={styles.label} htmlFor=\"inputText\">\n// \t\t\t\t\tInput Text\n// \t\t\t\t  </label>\n// \t\t\t\t  <textarea\n// \t\t\t\t\tid=\"inputText\"\n// \t\t\t\t\tclassName={`${styles.textarea} ${styles.side_by_side}`}\n// \t\t\t\t\tvalue={inputText}\n// \t\t\t\t\tonChange={(e) => setInputText(e.target.value)}\n// \t\t\t\t\treadOnly\n// \t\t\t\t  ></textarea>\n// \t\t\t\t</div>\n\n// \t\t\t\t{/* Output Text Box */}\n// \t\t\t\t<div className={styles.text_container}>\n// \t\t\t\t  <label className={styles.label} htmlFor=\"outputText\">\n// \t\t\t\t\tSystem-generated Text\n// \t\t\t\t  </label>\n// \t\t\t\t  <textarea\n// \t\t\t\t\tid=\"outputText\"\n// \t\t\t\t\tclassName={`${styles.output_box} ${styles.side_by_side}`}\n// \t\t\t\t\tvalue={outputText}\n// \t\t\t\t\tonChange={(e) => setOutputText(e.target.value)}\n// \t\t\t\t\treadOnly={!isEditable}\n// \t\t\t\t\tplaceholder=\"Output\"\n// \t\t\t\t  ></textarea>\n// \t\t\t\t</div>\n// \t\t\t  </div>\n\n// \t\t\t\t{/* Save and Edit Buttons */}\n// \t\t\t\t<div className={styles.button_container}>\n// \t\t\t\t{/* <button\n// \t\t\t\t\tclassName={`${styles.save_btn} ${styles.text_btn}`}\n// \t\t\t\t\tonClick={handleSave}\n// \t\t\t\t>\n// \t\t\t\t\tSave\n// \t\t\t\t</button> */}\n\n// \t\t\t\t{isSaveButtonVisible && (\n// \t\t\t\t<button\n// \t\t\t\t\tclassName={`${styles.save_btn} ${styles.text_btn}`}\n// \t\t\t\t\tonClick={handleSave}\n// \t\t\t\t\tdisabled={isLoading}\n// \t\t\t\t>\n// \t\t\t\t\tSave\n// \t\t\t\t</button>\n// \t\t\t\t)}\n\n// \t\t\t\t{!isEditable && (\n// \t\t\t\t\t<button\n// \t\t\t\t\tclassName={`${styles.edit_btn} ${styles.text_btn}`}\n// \t\t\t\t\tonClick={handleEdit}\n// \t\t\t\t\t>\n// \t\t\t\t\tEdit\n// \t\t\t\t\t</button>\n// \t\t\t\t)}\n// \t\t\t\t</div>\n//       {/* Survey Prompt */}\n// \t  {showSurveyPrompt && (\n//               <div className={styles.survey_prompt}>\n//                 <p>\n//                   Please take the survey to help us improve.{\" \"}\n//                   <button\n//                     className={styles.link_btn}\n//                     onClick={() =>\n//                       navigate(\"/survey\", {\n//                         state: { email: JSON.parse(localStorage.getItem(\"user\")).email, inputText },\n//                       })\n//                     }\n//                   >\n//                     Take the Survey\n//                   </button>\n//                 </p>\n//               </div>\n//             )}\n\n// \t\t\t</div>\n// \t\t  )}\n// \t\t</div>\n// \t  </>\n// \t);\n//   };\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["React","useLocation","useNavigate","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Review","_s","state","inputText","outputText","isLoading","setIsLoading","useState","isSubmitted","setIsSubmitted","isEditable","setIsEditable","uploadedFileName","setUploadedFileName","isSaveButtonVisible","setIsSaveButtonVisible","showSurveyPrompt","setShowSurveyPrompt","navigate","handleLogout","localStorage","removeItem","window","location","reload","handleSave","alert","handleEdit","children","className","navbar","fileName","_jsxFileName","lineNumber","columnNumber","white_btn","onClick","main_container","form_container","textareas_container","text_container","label","htmlFor","id","textarea","side_by_side","value","onChange","e","setInputText","target","readOnly","output_box","setOutputText","placeholder","button_container","save_btn","text_btn","disabled","edit_btn","survey_prompt","link_btn","email","JSON","parse","getItem","_c","$RefreshReg$"],"sources":["/Users/anukumar/Desktop/Autumn 2024/Text Simplification/project_v2/client/src/components/Review/index.jsx"],"sourcesContent":["import React from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\n\nconst Review = () => {\n  const { state } = useLocation();\n  const { inputText, outputText } = state || { inputText: \"\", outputText: \"\" };\n//   const navigate = useNavigate();\n\n  \t// const [inputText, setInputText] = useState(\"\");\n\t// const [outputText, setOutputText] = useState(\"\");\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [isSubmitted, setIsSubmitted] = useState(false);\n\tconst [isEditable, setIsEditable] = useState(false); // For toggling edit mode\n\tconst [uploadedFileName, setUploadedFileName] = useState(\"\"); // State for file name\n\tconst [isSaveButtonVisible, setIsSaveButtonVisible] = useState(true);\n\tconst [showSurveyPrompt, setShowSurveyPrompt] = useState(false); // State for survey prompt\n    const navigate = useNavigate();\n\n\tconst handleLogout = () => {\n\t  localStorage.removeItem(\"token\");\n\t  window.location.reload();\n\t};\n\n  const handleSave = () => {\n    alert(\"Text saved successfully!\");\n    // Add your save logic here if needed\n    navigate(\"/simplify\"); // Redirect back to Main\n  };\n\n  const handleEdit = () => {\n    navigate(\"/simplify\", { state: { inputText, outputText } });\n  };\n\n  return (\n    <>\n    <nav className={styles.navbar}>\n      <h1>Text Simplification Study</h1>\n      <button className={styles.white_btn} onClick={handleLogout}>\n        Logout\n      </button>\n    </nav>\n\n    <div className={styles.main_container}>\n     \t\t\t<div className={styles.form_container}>\n     \t\t\t  {/* Input and Output Boxes */}\n     \t\t\t  <div className={styles.textareas_container}>\n     \t\t\t\t{/* Input Text Box */}\n     \t\t\t\t<div className={styles.text_container}>\n     \t\t\t\t  <label className={styles.label} htmlFor=\"inputText\">\n     \t\t\t\t\tInput Text\n     \t\t\t\t  </label>\n    \t\t\t\t  <textarea\n    \t\t\t\t\tid=\"inputText\"\n    \t\t\t\t\tclassName={`${styles.textarea} ${styles.side_by_side}`}\n    \t\t\t\t\tvalue={inputText}\n    \t\t\t\t\tonChange={(e) => setInputText(e.target.value)}\n    \t\t\t\t\treadOnly\n    \t\t\t\t  ></textarea>\n    \t\t\t\t</div>\n      \n    \t\t\t\t{/* Output Text Box */}\n    \t\t\t\t<div className={styles.text_container}>\n    \t\t\t\t  <label className={styles.label} htmlFor=\"outputText\">\n    \t\t\t\t\tSystem-generated Text\n    \t\t\t\t  </label>\n    \t\t\t\t  <textarea\n    \t\t\t\t\tid=\"outputText\"\n    \t\t\t\t\tclassName={`${styles.output_box} ${styles.side_by_side}`}\n    \t\t\t\t\tvalue={outputText}\n    \t\t\t\t\tonChange={(e) => setOutputText(e.target.value)}\n    \t\t\t\t\treadOnly={!isEditable}\n    \t\t\t\t\tplaceholder=\"Output\"\n    \t\t\t\t  ></textarea>\n    \t\t\t\t</div>\n    \t\t\t  </div>\n    \n    \n    \t\t\t\t{/* Save and Edit Buttons */}\n    \t\t\t\t<div className={styles.button_container}>\n    \t\t\t\t{/* <button\n    \t\t\t\t\tclassName={`${styles.save_btn} ${styles.text_btn}`}\n    \t\t\t\t\tonClick={handleSave}\n    \t\t\t\t>\n    \t\t\t\t\tSave\n    \t\t\t\t</button> */}\n    \n    \t\t\t\t{isSaveButtonVisible && (\n    \t\t\t\t<button\n    \t\t\t\t\tclassName={`${styles.save_btn} ${styles.text_btn}`}\n    \t\t\t\t\tonClick={handleSave}\n    \t\t\t\t\tdisabled={isLoading}\n    \t\t\t\t>\n    \t\t\t\t\tSave\n    \t\t\t\t</button>\n    \t\t\t\t)}\n    \n    \t\t\t\t{!isEditable && (\n    \t\t\t\t\t<button\n    \t\t\t\t\tclassName={`${styles.edit_btn} ${styles.text_btn}`}\n    \t\t\t\t\tonClick={handleEdit}\n    \t\t\t\t\t>\n    \t\t\t\t\tEdit\n    \t\t\t\t\t</button>\n    \t\t\t\t)}\n    \t\t\t\t</div>\n          {/* Survey Prompt */}\n    \t  {showSurveyPrompt && (\n                  <div className={styles.survey_prompt}>\n                    <p>\n                      Please take the survey to help us improve.{\" \"}\n                      <button\n                        className={styles.link_btn}\n                        onClick={() =>\n                          navigate(\"/survey\", {\n                            state: { email: JSON.parse(localStorage.getItem(\"user\")).email, inputText },\n                          })\n                        }\n                      >\n                        Take the Survey\n                      </button>\n                    </p>\n                  </div>\n                )}\n    \n    \t\t\t</div>\n    \t\t  }\n    \t\t</div>\n    \t  </>\n    // <div className={styles.review_container}>\n    //   <h1>Review Simplified Text</h1>\n    //   <div className={styles.textareas_container}>\n    //     <div className={styles.text_container}>\n    //       <label className={styles.label}>Input Text</label>\n    //       <textarea\n    //         className={`${styles.textarea} ${styles.readonly}`}\n    //         value={inputText}\n    //         readOnly\n    //       ></textarea>\n    //     </div>\n\n    //     <div className={styles.text_container}>\n    //       <label className={styles.label}>Simplified Text</label>\n    //       <textarea\n    //         className={`${styles.textarea} ${styles.readonly}`}\n    //         value={outputText}\n    //         readOnly\n    //       ></textarea>\n    //     </div>\n    //   </div>\n\n    //   <div className={styles.button_container}>\n    //     <button className={styles.save_btn} onClick={handleSave}>\n    //       Save\n    //     </button>\n    //     <button className={styles.edit_btn} onClick={handleEdit}>\n    //       Edit\n    //     </button>\n    //   </div>\n    // </div>\n    // </>\n  );\n};\n\nexport default Review;\n\n\n    // \t  <>\n    \n    // \t\t<div className={styles.main_container}>\n    // \t\t  {!isSubmitted ? (\n    // \t\t\t<div className={styles.description}>\n    // \t\t\t  <p>\n    // \t\t\t\tThis app is about simplifying text for improved readability and\n    // \t\t\t\taccessibility.\n    // \t\t\t  </p>\n    // \t\t\t  <p>\n    // \t\t\t\tUpload a document or paste your text to get a simplified version\n    // \t\t\t\twith just a click.\n    // \t\t\t  </p>\n      \n    // \t\t\t  <div className={styles.form_container}>\n    // \t\t\t\t{/* Input Area */}\n    // \t\t\t\t<div className={styles.input_area}>\n    // \t\t\t\t  <div className={styles.text_container}>\n    // \t\t\t\t\t<label className={styles.label} htmlFor=\"inputText\">\n    // \t\t\t\t\t  Input Text\n    // \t\t\t\t\t</label>\n    // \t\t\t\t\t<textarea\n    // \t\t\t\t\t  id=\"inputText\"\n    // \t\t\t\t\t  className={styles.textarea}\n    // \t\t\t\t\t  placeholder=\"Original Text\"\n    // \t\t\t\t\t  value={inputText}\n    // \t\t\t\t\t  onChange={(e) => setInputText(e.target.value)}\n    // \t\t\t\t\t></textarea>\n    // \t\t\t\t  </div>\n      \n    // \t\t\t\t  {/* OR Divider */}\n    // \t\t\t\t  <div className={styles.or_divider}>OR</div>\n      \n    // \t\t\t\t  {/* File Upload */}\n    // \t\t\t\t  <div className={styles.upload_area}>\n    // \t\t\t\t\t<label htmlFor=\"fileUpload\" className={styles.upload_box}>\n    // \t\t\t\t\t  {uploadedFileName ? (\n    // \t\t\t\t\t\t<>\n    // \t\t\t\t\t\t  File uploaded: <strong>{uploadedFileName}</strong>\n    // \t\t\t\t\t\t</>\n    // \t\t\t\t\t  ) : (\n    // \t\t\t\t\t\t<>\n    // \t\t\t\t\t\t  Click to Upload a PDF\n    // \t\t\t\t\t\t  <br />\n    // \t\t\t\t\t\t  <span>...or drag and drop a file.</span>\n    // \t\t\t\t\t\t</>\n    // \t\t\t\t\t  )}\n    // \t\t\t\t\t</label>\n    // \t\t\t\t\t<input\n    // \t\t\t\t\t  type=\"file\"\n    // \t\t\t\t\t  id=\"fileUpload\"\n    // \t\t\t\t\t  accept=\"application/pdf\"\n    // \t\t\t\t\t  onChange={handleFileUpload}\n    // \t\t\t\t\t  className={styles.hidden_input}\n    // \t\t\t\t\t/>\n    // \t\t\t\t  </div>\n    // \t\t\t\t</div>\n    // \t\t\t  </div>\n    // \t\t\t  {/* Submit Button */}\n    // \t\t\t  <button\n    // \t\t\t\tclassName={styles.submit_btn}\n    // \t\t\t\tonClick={handleSubmit}\n    // \t\t\t\tdisabled={!inputText.trim() || isLoading}\n    // \t\t\t  >\n    // \t\t\t\t{isLoading ? \"Processing...\" : \"Simplfiy Text\"}\n    // \t\t\t  </button>\n    // \t\t\t</div>\n    // \t\t  ) : (\n    // \t\t\t<div className={styles.form_container}>\n    // \t\t\t  {/* Input and Output Boxes */}\n    // \t\t\t  <div className={styles.textareas_container}>\n    // \t\t\t\t{/* Input Text Box */}\n    // \t\t\t\t<div className={styles.text_container}>\n    // \t\t\t\t  <label className={styles.label} htmlFor=\"inputText\">\n    // \t\t\t\t\tInput Text\n    // \t\t\t\t  </label>\n    // \t\t\t\t  <textarea\n    // \t\t\t\t\tid=\"inputText\"\n    // \t\t\t\t\tclassName={`${styles.textarea} ${styles.side_by_side}`}\n    // \t\t\t\t\tvalue={inputText}\n    // \t\t\t\t\tonChange={(e) => setInputText(e.target.value)}\n    // \t\t\t\t\treadOnly\n    // \t\t\t\t  ></textarea>\n    // \t\t\t\t</div>\n      \n    // \t\t\t\t{/* Output Text Box */}\n    // \t\t\t\t<div className={styles.text_container}>\n    // \t\t\t\t  <label className={styles.label} htmlFor=\"outputText\">\n    // \t\t\t\t\tSystem-generated Text\n    // \t\t\t\t  </label>\n    // \t\t\t\t  <textarea\n    // \t\t\t\t\tid=\"outputText\"\n    // \t\t\t\t\tclassName={`${styles.output_box} ${styles.side_by_side}`}\n    // \t\t\t\t\tvalue={outputText}\n    // \t\t\t\t\tonChange={(e) => setOutputText(e.target.value)}\n    // \t\t\t\t\treadOnly={!isEditable}\n    // \t\t\t\t\tplaceholder=\"Output\"\n    // \t\t\t\t  ></textarea>\n    // \t\t\t\t</div>\n    // \t\t\t  </div>\n    \n    \n    // \t\t\t\t{/* Save and Edit Buttons */}\n    // \t\t\t\t<div className={styles.button_container}>\n    // \t\t\t\t{/* <button\n    // \t\t\t\t\tclassName={`${styles.save_btn} ${styles.text_btn}`}\n    // \t\t\t\t\tonClick={handleSave}\n    // \t\t\t\t>\n    // \t\t\t\t\tSave\n    // \t\t\t\t</button> */}\n    \n    // \t\t\t\t{isSaveButtonVisible && (\n    // \t\t\t\t<button\n    // \t\t\t\t\tclassName={`${styles.save_btn} ${styles.text_btn}`}\n    // \t\t\t\t\tonClick={handleSave}\n    // \t\t\t\t\tdisabled={isLoading}\n    // \t\t\t\t>\n    // \t\t\t\t\tSave\n    // \t\t\t\t</button>\n    // \t\t\t\t)}\n    \n    // \t\t\t\t{!isEditable && (\n    // \t\t\t\t\t<button\n    // \t\t\t\t\tclassName={`${styles.edit_btn} ${styles.text_btn}`}\n    // \t\t\t\t\tonClick={handleEdit}\n    // \t\t\t\t\t>\n    // \t\t\t\t\tEdit\n    // \t\t\t\t\t</button>\n    // \t\t\t\t)}\n    // \t\t\t\t</div>\n    //       {/* Survey Prompt */}\n    // \t  {showSurveyPrompt && (\n    //               <div className={styles.survey_prompt}>\n    //                 <p>\n    //                   Please take the survey to help us improve.{\" \"}\n    //                   <button\n    //                     className={styles.link_btn}\n    //                     onClick={() =>\n    //                       navigate(\"/survey\", {\n    //                         state: { email: JSON.parse(localStorage.getItem(\"user\")).email, inputText },\n    //                       })\n    //                     }\n    //                   >\n    //                     Take the Survey\n    //                   </button>\n    //                 </p>\n    //               </div>\n    //             )}\n    \n    // \t\t\t</div>\n    // \t\t  )}\n    // \t\t</div>\n    // \t  </>\n    // \t);\n    //   };\n      \n    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}