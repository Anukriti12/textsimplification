{"ast":null,"code":"import{useState}from\"react\";import styles from\"./styles.module.css\";import{useNavigate}from\"react-router-dom\";import*as pdfjsLib from\"pdfjs-dist/legacy/build/pdf\";// import { BrowserRouter as Router, Routes, Route, useNavigate } from \"react-router-dom\";\nimport{jwtDecode}from\"jwt-decode\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";pdfjsLib.GlobalWorkerOptions.workerSrc=`${process.env.PUBLIC_URL}/pdf.worker.mjs`;const Main=()=>{const[inputText,setInputText]=useState(\"\");const[outputText,setOutputText]=useState(\"\");const[isLoading,setIsLoading]=useState(false);const[isSubmitted,setIsSubmitted]=useState(false);const[isEditable,setIsEditable]=useState(false);// For toggling edit mode\nconst[uploadedFileName,setUploadedFileName]=useState(\"\");// State for file name\nconst[isSaveButtonVisible,setIsSaveButtonVisible]=useState(true);const[showSurveyPrompt,setShowSurveyPrompt]=useState(false);// State for survey prompt\nconst navigate=useNavigate();const[isUploading,setIsUploading]=useState(false);// State for showing buffer\nconst handleLogout=()=>{localStorage.removeItem(\"token\");navigate(\"/Login\");};const handleFileUpload=async event=>{const file=event.target.files[0];if(!file)return;setIsUploading(true);// Show buffer while processing\nsetUploadedFileName(file.name);// Set file name\ntry{//setUploadedFileName(file.name); // Set the uploaded file name\nconst fileReader=new FileReader();fileReader.onload=async function(){const typedArray=new Uint8Array(this.result);const pdf=await pdfjsLib.getDocument(typedArray).promise;let text=\"\";// Extract text from all pages\nfor(let i=1;i<=pdf.numPages;i++){const page=await pdf.getPage(i);const textContent=await page.getTextContent();text+=textContent.items.map(item=>item.str).join(\" \");}setInputText(text);};fileReader.readAsArrayBuffer(file);}catch(error){console.error(\"Error reading PDF:\",error);alert(\"Failed to extract text from the PDF.\");}finally{setIsUploading(false);// Hide buffer once done\n}};// Function to format the prompt with user input\nconst generatePrompt=inputText=>{return`\n\tYou are an expert in accessible communication, tasked with simplifying a given text for individuals with intellectual and developmental disabilities (IDD).\n\t\n\tFollow these detailed guidelines to ensure the text is clear, easy to understand, and accessible:\n  \n\t1. Sentence and Structure Simplification\n\t- Use short sentences (8-10 words max).\n\t- Keep one main idea per sentence to avoid confusion.\n\t- Write in active voice (e.g., \"A doctor gives medicine\" instead of \"Medicine is given by a doctor\").\n\t- Avoid bulleted lists. Instead, write short, direct sentences in paragraph form.\n\t- Repeat important words instead of using synonyms to improve comprehension.\n\t- Start a new paragraph when introducing a different idea.\n  \n\t2. Word Choice and Vocabulary\n\t- Use simple, common words (words most people know and use every day).\n\t- Use words with few syllables (e.g., \"help\" instead of \"assist\").\n\t- Avoid figurative language (no metaphors, similes, or idioms).\n\t  - ❌ \"It’s a piece of cake.\"  \n\t  - ✅ \"It is easy to do.\"  \n\t- If a difficult word is necessary, provide a simple definition within the text.\n\t- Avoid negatives when possible (e.g., instead of \"Do not touch,\" say \"Keep hands away\").\n  \n\t3. Text Organization\n\t- Clearly state the topic at the beginning of each section.\n\t- Use headings that are short and direct (max 8 words). Example:\n\t  - ❌ \"Understanding the Difference Between the Flu and COVID-19\"  \n\t  - ✅ \"Flu vs. COVID-19\"  \n\t- Keep paragraphs short (2-3 sentences max).\n  \n\t4. Formatting for Readability\n\t- Use left-aligned text with wide spacing between lines.\n\t- Use bold for important words or phrases (but sparingly).\n\t- Ensure the text is high contrast (black text on a white background).\n\t- Avoid italics, underlining, or all caps, as they can be hard to read.\n  \n\t5. Instructions and Steps\n\t- If the text includes instructions, keep steps short and clear.\n\t- Example:\n\t  - ❌ \"First, you will need to open the box carefully and remove the contents before proceeding to step two, which involves assembling the parts.\"  \n\t  - ✅ \"Step 1: Open the box.  \n\t\t Step 2: Take out the parts.\"  \n  \n\t6. Retaining Meaning and Key Details\n\t- Do not remove important information, but explain it in a simpler way.\n\t- Ensure the simplified version does not change the facts.\n\t- The output should remain accurate, informative, and accessible.\n  \n\tNow, simplify the following text according to these guidelines:\n\t\"${inputText}\"\n\t`;};const handleSubmit=async()=>{if(!inputText.trim())return;setIsLoading(true);try{var _data$response;const prompt=generatePrompt(inputText);//`Simplify the following text for better readability while preserving meaning:\\n\\n\"${inputText}\"`;\nconst response=await fetch(\"https://textsimplification-eecqhvdcduczf8cz.westus-01.azurewebsites.net/api/gpt4\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({prompt})});const data=await response.json();const cleanedResponse=(data===null||data===void 0?void 0:(_data$response=data.response)===null||_data$response===void 0?void 0:_data$response.replace(/^\"|\"$/g,\"\"))||\"No response received.\";setOutputText(cleanedResponse);setIsSubmitted(true);navigate(\"/review\",{state:{inputText,outputText:cleanedResponse}});// navigate(\"/simplify\");\n}catch(error){console.error(\"Error fetching GPT-4 response:\",error);setOutputText(\"An error occurred while fetching the response.\");}setIsLoading(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"nav\",{className:styles.navbar,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Text Simplification Tool\"}),/*#__PURE__*/_jsx(\"button\",{className:styles.white_btn,onClick:handleLogout,children:\"Logout\"})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.main_container,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.description,children:[/*#__PURE__*/_jsx(\"p\",{children:\"This tool helps make complex text easier to read while preserving its original meaning. Whether you're simplifying academic content, technical documents, or general text for better accessibility, this tool provides a quick and efficient way to generate a more readable version. You can enter text manually or upload a document to get started.\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.form_container,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.input_area,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.text_container,children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,htmlFor:\"inputText\",children:\"Input Text\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"inputText\",className:styles.textarea,placeholder:\"Write/Paste your text here or upload a PDF document to extract content automatically.\",value:inputText,onChange:e=>setInputText(e.target.value)})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.or_divider,children:\"OR\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.upload_area,onDragOver:e=>e.preventDefault()// Prevent default behavior\n,onDrop:e=>{e.preventDefault();const file=e.dataTransfer.files[0];// Get the first dropped file\nif(file){handleFileUpload({target:{files:[file]}});// Simulate file selection event\n}},children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"fileUpload\",className:styles.upload_box,children:isUploading?/*#__PURE__*/_jsx(\"span\",{className:styles.loadingText,children:\"Extracting text, please wait...\"}):uploadedFileName?/*#__PURE__*/_jsxs(_Fragment,{children:[\"File uploaded: \",/*#__PURE__*/_jsx(\"strong\",{children:uploadedFileName})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[\"Click to Upload a PDF\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{children:\"...or drag and drop a file.\"})]})}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"fileUpload\",accept:\"application/pdf\",onChange:handleFileUpload,className:styles.hidden_input,disabled:isUploading// Disable upload while processing\n})]})]})}),/*#__PURE__*/_jsx(\"button\",{className:styles.submit_btn,onClick:handleSubmit,disabled:!inputText.trim()||isLoading||isUploading//title={!inputText.trim() ? \"Enter text or upload a file to enable simplification.\" : \"\"}\n,children:isLoading?\"Processing...\":\"Simplfiy Text\"}),/*#__PURE__*/_jsxs(\"p\",{className:styles.help_text,children:[\"Need Help? \",/*#__PURE__*/_jsx(\"a\",{href:\"mailto:anukumar@uw.edu\",children:\"Contact Support\"})]})]})})]});};export default Main;","map":{"version":3,"names":["useState","styles","useNavigate","pdfjsLib","jwtDecode","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GlobalWorkerOptions","workerSrc","process","env","PUBLIC_URL","Main","inputText","setInputText","outputText","setOutputText","isLoading","setIsLoading","isSubmitted","setIsSubmitted","isEditable","setIsEditable","uploadedFileName","setUploadedFileName","isSaveButtonVisible","setIsSaveButtonVisible","showSurveyPrompt","setShowSurveyPrompt","navigate","isUploading","setIsUploading","handleLogout","localStorage","removeItem","handleFileUpload","event","file","target","files","name","fileReader","FileReader","onload","typedArray","Uint8Array","result","pdf","getDocument","promise","text","i","numPages","page","getPage","textContent","getTextContent","items","map","item","str","join","readAsArrayBuffer","error","console","alert","generatePrompt","handleSubmit","trim","_data$response","prompt","response","fetch","method","headers","body","JSON","stringify","data","json","cleanedResponse","replace","state","children","className","navbar","white_btn","onClick","main_container","description","form_container","input_area","text_container","label","htmlFor","id","textarea","placeholder","value","onChange","e","or_divider","upload_area","onDragOver","preventDefault","onDrop","dataTransfer","upload_box","loadingText","type","accept","hidden_input","disabled","submit_btn","help_text","href"],"sources":["/Users/anukumar/Desktop/Autumn 2024/Text Simplification/textsimplification/client/src/components/Main/index.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as pdfjsLib from \"pdfjs-dist/legacy/build/pdf\";\n// import { BrowserRouter as Router, Routes, Route, useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\n\n\npdfjsLib.GlobalWorkerOptions.workerSrc = `${process.env.PUBLIC_URL}/pdf.worker.mjs`;\n\nconst Main = () => {\n\n\tconst [inputText, setInputText] = useState(\"\");\n\tconst [outputText, setOutputText] = useState(\"\");\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [isSubmitted, setIsSubmitted] = useState(false);\n\tconst [isEditable, setIsEditable] = useState(false); // For toggling edit mode\n\tconst [uploadedFileName, setUploadedFileName] = useState(\"\"); // State for file name\n\tconst [isSaveButtonVisible, setIsSaveButtonVisible] = useState(true);\n\tconst [showSurveyPrompt, setShowSurveyPrompt] = useState(false); // State for survey prompt\n\tconst navigate = useNavigate();\n\tconst [isUploading, setIsUploading] = useState(false); // State for showing buffer\n\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/Login\"); \n  };\n\n\n  \tconst handleFileUpload = async (event) => {\n\t  const file = event.target.files[0];\n\t  if (!file) return;\n  \n\t  setIsUploading(true); // Show buffer while processing\n\t  setUploadedFileName(file.name); // Set file name\n\n\t  try {\n\t\t//setUploadedFileName(file.name); // Set the uploaded file name\n\t\tconst fileReader = new FileReader();\n\t\tfileReader.onload = async function () {\n\t\t  const typedArray = new Uint8Array(this.result);\n  \n\t\t  const pdf = await pdfjsLib.getDocument(typedArray).promise;\n\t\t  let text = \"\";\n  \n\t\t  // Extract text from all pages\n\t\t  for (let i = 1; i <= pdf.numPages; i++) {\n\t\t\tconst page = await pdf.getPage(i);\n\t\t\tconst textContent = await page.getTextContent();\n\t\t\ttext += textContent.items.map((item) => item.str).join(\" \");\n\t\t  }\n  \n\t\t  setInputText(text);\n\t\t};\n\t\tfileReader.readAsArrayBuffer(file);\n\t  } catch (error) {\n\t\tconsole.error(\"Error reading PDF:\", error);\n\t\talert(\"Failed to extract text from the PDF.\");\n\t  } finally {\n\t\tsetIsUploading(false); // Hide buffer once done\n\t  }\n\t};\n \n\n\t// Function to format the prompt with user input\nconst generatePrompt = (inputText) => {\n\treturn `\n\tYou are an expert in accessible communication, tasked with simplifying a given text for individuals with intellectual and developmental disabilities (IDD).\n\t\n\tFollow these detailed guidelines to ensure the text is clear, easy to understand, and accessible:\n  \n\t1. Sentence and Structure Simplification\n\t- Use short sentences (8-10 words max).\n\t- Keep one main idea per sentence to avoid confusion.\n\t- Write in active voice (e.g., \"A doctor gives medicine\" instead of \"Medicine is given by a doctor\").\n\t- Avoid bulleted lists. Instead, write short, direct sentences in paragraph form.\n\t- Repeat important words instead of using synonyms to improve comprehension.\n\t- Start a new paragraph when introducing a different idea.\n  \n\t2. Word Choice and Vocabulary\n\t- Use simple, common words (words most people know and use every day).\n\t- Use words with few syllables (e.g., \"help\" instead of \"assist\").\n\t- Avoid figurative language (no metaphors, similes, or idioms).\n\t  - ❌ \"It’s a piece of cake.\"  \n\t  - ✅ \"It is easy to do.\"  \n\t- If a difficult word is necessary, provide a simple definition within the text.\n\t- Avoid negatives when possible (e.g., instead of \"Do not touch,\" say \"Keep hands away\").\n  \n\t3. Text Organization\n\t- Clearly state the topic at the beginning of each section.\n\t- Use headings that are short and direct (max 8 words). Example:\n\t  - ❌ \"Understanding the Difference Between the Flu and COVID-19\"  \n\t  - ✅ \"Flu vs. COVID-19\"  \n\t- Keep paragraphs short (2-3 sentences max).\n  \n\t4. Formatting for Readability\n\t- Use left-aligned text with wide spacing between lines.\n\t- Use bold for important words or phrases (but sparingly).\n\t- Ensure the text is high contrast (black text on a white background).\n\t- Avoid italics, underlining, or all caps, as they can be hard to read.\n  \n\t5. Instructions and Steps\n\t- If the text includes instructions, keep steps short and clear.\n\t- Example:\n\t  - ❌ \"First, you will need to open the box carefully and remove the contents before proceeding to step two, which involves assembling the parts.\"  \n\t  - ✅ \"Step 1: Open the box.  \n\t\t Step 2: Take out the parts.\"  \n  \n\t6. Retaining Meaning and Key Details\n\t- Do not remove important information, but explain it in a simpler way.\n\t- Ensure the simplified version does not change the facts.\n\t- The output should remain accurate, informative, and accessible.\n  \n\tNow, simplify the following text according to these guidelines:\n\t\"${inputText}\"\n\t`;\n  };\n\n  \n  \tconst handleSubmit = async () => {\n\t  if (!inputText.trim()) return;\n\t  setIsLoading(true);\n  \n\t  try {\n\t\tconst prompt = generatePrompt(inputText);\n\t\t//`Simplify the following text for better readability while preserving meaning:\\n\\n\"${inputText}\"`;\n\t\tconst response = await fetch(\"https://textsimplification-eecqhvdcduczf8cz.westus-01.azurewebsites.net/api/gpt4\", {\n\t\t  method: \"POST\",\n\t\t  headers: { \"Content-Type\": \"application/json\" },\n\t\t  body: JSON.stringify({ prompt }),\n\t\t});\n  \n\t\tconst data = await response.json();\n\t\tconst cleanedResponse =\n\t\t  data?.response?.replace(/^\"|\"$/g, \"\") || \"No response received.\";\n\t\tsetOutputText(cleanedResponse);\n\t\tsetIsSubmitted(true);\n\t\tnavigate(\"/review\", { state: { inputText, outputText: cleanedResponse } });\n\n\t\t// navigate(\"/simplify\");\n\t  } catch (error) {\n\t\tconsole.error(\"Error fetching GPT-4 response:\", error);\n\t\tsetOutputText(\"An error occurred while fetching the response.\");\n\t  }\n  \n\t  setIsLoading(false);\n\t};\n\n  return (\n    <>\n      <nav className={styles.navbar}>\n        <h1>Text Simplification Tool</h1>\n        <button className={styles.white_btn} onClick={handleLogout}>\n          Logout\n        </button>\n      </nav>\n\n\t  <div className={styles.main_container}>\n\t\n\t\t\t<div className={styles.description}>\n\t\t\t  <p>\n\t\t\t  This tool helps make complex text easier to read while preserving its original meaning. Whether you're simplifying academic content, technical documents, or general text for better accessibility, this tool provides a quick and efficient way to generate a more readable version. You can enter text manually or upload a document to get started.\n\t\t\t  </p>\n  \n\t\t\t  <div className={styles.form_container}>\n\t\t\t\t{/* Input Area */}\n\t\t\t\t<div className={styles.input_area}>\n\t\t\t\t  <div className={styles.text_container}>\n\t\t\t\t\t<label className={styles.label} htmlFor=\"inputText\">\n\t\t\t\t\t  Input Text\n\t\t\t\t\t</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t  id=\"inputText\"\n\t\t\t\t\t  className={styles.textarea}\n\t\t\t\t\t  placeholder=\"Write/Paste your text here or upload a PDF document to extract content automatically.\"\n\t\t\t\t\t  value={inputText}\n\t\t\t\t\t  onChange={(e) => setInputText(e.target.value)}\n\t\t\t\t\t></textarea>\n\t\t\t\t  </div>\n  \n\t\t\t\t  {/* OR Divider */}\n\t\t\t\t  <div className={styles.or_divider}>OR</div>\n  \n\t\t\t\t  {/* File Upload */}\n\t\t\t\t  <div className={styles.upload_area} \n\t\t\t\t\tonDragOver={(e) => e.preventDefault()} // Prevent default behavior\n\t\t\t\t\tonDrop={(e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tconst file = e.dataTransfer.files[0]; // Get the first dropped file\n\t\t\t\t\t\tif (file) {\n\t\t\t\t\t\thandleFileUpload({ target: { files: [file] } }); // Simulate file selection event\n\t\t\t\t\t\t}\n\t\t\t\t\t}}>\n\t\t\t\t\t<label htmlFor=\"fileUpload\" className={styles.upload_box}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{isUploading ? (\n\t\t\t\t\t\t\t<span className={styles.loadingText}>Extracting text, please wait...</span>\n\t\t\t\t\t\t\t) : uploadedFileName ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\tFile uploaded: <strong>{uploadedFileName}</strong>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\tClick to Upload a PDF\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<span>...or drag and drop a file.</span>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t  {/* {uploadedFileName ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t  File uploaded: <strong>{uploadedFileName}</strong>\n\t\t\t\t\t\t</>\n\t\t\t\t\t  ) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t  Click to Upload a PDF\n\t\t\t\t\t\t  <br />\n\t\t\t\t\t\t  <span>...or drag and drop a file.</span>\n\t\t\t\t\t\t</>\n\t\t\t\t\t  )} */}\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t  type=\"file\"\n\t\t\t\t\t  id=\"fileUpload\"\n\t\t\t\t\t  accept=\"application/pdf\"\n\t\t\t\t\t  onChange={handleFileUpload}\n\t\t\t\t\t  className={styles.hidden_input}\n\t\t\t\t\t  disabled={isUploading} // Disable upload while processing\n\t\t\t\t\t/>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t  </div>\n\t\t\t  {/* Submit Button */}\n\t\t\t  <button\n\t\t\t\tclassName={styles.submit_btn}\n\t\t\t\tonClick={handleSubmit}\n\t\t\t\tdisabled={!inputText.trim() || isLoading || isUploading}\n\t\t\t\t//title={!inputText.trim() ? \"Enter text or upload a file to enable simplification.\" : \"\"}\n\t\t\t  >\n\t\t\t\t{isLoading ? \"Processing...\" : \"Simplfiy Text\"}\n\t\t\t  </button>\n\t\n\t\t\t  <p className={styles.help_text}>Need Help? <a href=\"mailto:anukumar@uw.edu\">Contact Support</a></p>\n\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Main;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}