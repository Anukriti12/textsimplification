{"ast":null,"code":"const syllable=require(\"syllable\");// npm i syllable\nconst flesch=require(\"flesch-kincaid\");// npm i flesch-kincaid\nconst uniq=require(\"lodash/uniq\");exports.calcMetrics=function(){let txt=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";const words=txt.trim().split(/\\s+/).filter(Boolean);const sentences=txt.split(/[.!?]+/).filter(Boolean);const chars=txt.length;const charsNoSp=txt.replace(/\\s+/g,\"\").length;const syllables=words.reduce((s,w)=>s+syllable(w),0);const fk=flesch({sentence:sentences.length||1,word:words.length||1,syllable:syllables||1});return{fleschReadingEase:fk.ease,fleschKincaidGrade:fk.grade,lexicalDensity:uniq(words).length/words.length||0,wordCount:words.length,uniqueWords:uniq(words).length,sentenceCount:sentences.length,avgSentenceLength:words.length/(sentences.length||1),charsWithSpaces:chars,charsWithoutSpaces:charsNoSp,avgCharsPerWord:charsNoSp/(words.length||1),syllableCount:syllables,avgSyllablesPerWord:syllables/(words.length||1)};};exports.diffStats=function(){let a=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";let b=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"\";const dmp=new(require(\"diff-match-patch\"))();const diffs=dmp.diff_main(a,b);dmp.diff_cleanupSemantic(diffs);let insertions=0,deletions=0;diffs.forEach(_ref=>{let[op,txt]=_ref;if(op===1)insertions+=txt.trim().split(/\\s+/).length;if(op===-1)deletions+=txt.trim().split(/\\s+/).length;});return{distance:dmp.diff_levenshtein(diffs),insertions,deletions};};","map":{"version":3,"names":["syllable","require","flesch","uniq","exports","calcMetrics","txt","arguments","length","undefined","words","trim","split","filter","Boolean","sentences","chars","charsNoSp","replace","syllables","reduce","s","w","fk","sentence","word","fleschReadingEase","ease","fleschKincaidGrade","grade","lexicalDensity","wordCount","uniqueWords","sentenceCount","avgSentenceLength","charsWithSpaces","charsWithoutSpaces","avgCharsPerWord","syllableCount","avgSyllablesPerWord","diffStats","a","b","dmp","diffs","diff_main","diff_cleanupSemantic","insertions","deletions","forEach","_ref","op","distance","diff_levenshtein"],"sources":["/Users/anukumar/Desktop/Spring2025/local-textsimplification/client/src/utils/textMetrics.js"],"sourcesContent":["const syllable = require(\"syllable\");         // npm i syllable\nconst flesch   = require(\"flesch-kincaid\");   // npm i flesch-kincaid\nconst uniq     = require(\"lodash/uniq\");\n\nexports.calcMetrics = (txt = \"\") => {\n  const words       = txt.trim().split(/\\s+/).filter(Boolean);\n  const sentences   = txt.split(/[.!?]+/).filter(Boolean);\n  const chars       = txt.length;\n  const charsNoSp   = txt.replace(/\\s+/g, \"\").length;\n  const syllables   = words.reduce((s, w) => s + syllable(w), 0);\n\n  const fk          = flesch({ sentence: sentences.length || 1,\n                               word: words.length || 1,\n                               syllable: syllables || 1 });\n\n  return {\n    fleschReadingEase:  fk.ease,\n    fleschKincaidGrade: fk.grade,\n    lexicalDensity:     uniq(words).length / words.length || 0,\n    wordCount:          words.length,\n    uniqueWords:        uniq(words).length,\n    sentenceCount:      sentences.length,\n    avgSentenceLength:  words.length / (sentences.length || 1),\n    charsWithSpaces:    chars,\n    charsWithoutSpaces: charsNoSp,\n    avgCharsPerWord:    charsNoSp / (words.length || 1),\n    syllableCount:      syllables,\n    avgSyllablesPerWord: syllables / (words.length || 1),\n  };\n};\n\nexports.diffStats = (a = \"\", b = \"\") => {\n  const dmp   = new (require(\"diff-match-patch\"))();\n  const diffs = dmp.diff_main(a, b);\n  dmp.diff_cleanupSemantic(diffs);\n\n  let insertions = 0,\n      deletions  = 0;\n\n  diffs.forEach(([op, txt]) => {\n    if (op === 1) insertions += txt.trim().split(/\\s+/).length;\n    if (op === -1) deletions  += txt.trim().split(/\\s+/).length;\n  });\n\n  return {\n    distance: dmp.diff_levenshtein(diffs),\n    insertions,\n    deletions,\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}