{"ast":null,"code":"var _jsxFileName = \"/Users/anukumar/Desktop/Autumn 2024/Text Simplification/project_v2/client/src/components/Survey/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveyPage = () => {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const {\n    email,\n    inputText\n  } = state || {};\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetchSimplification = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/simplifications/fetch\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email,\n            inputText\n          })\n        });\n        const result = await response.json();\n        setData(result.data);\n      } catch (error) {\n        console.error(\"Error fetching simplification data:\", error);\n      }\n    };\n    if (email && inputText) {\n      fetchSimplification();\n    }\n  }, [email, inputText]);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }, this);\n  const {\n    inputText: input,\n    outputText,\n    editedText\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.survey_container,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: input,\n      readOnly: true,\n      placeholder: \"Input Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: outputText,\n      readOnly: true,\n      placeholder: \"Initial Generated Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), outputText !== editedText && /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: editedText,\n      readOnly: true,\n      placeholder: \"Final Edited Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SurveyPage, \"e/jzeVv396hqm4qu0Iol2MYw1f8=\", false, function () {\n  return [useLocation];\n});\n_c = SurveyPage;\nexport default SurveyPage;\nvar _c;\n$RefreshReg$(_c, \"SurveyPage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","styles","jsxDEV","_jsxDEV","SurveyPage","_s","state","email","inputText","data","setData","fetchSimplification","response","fetch","method","headers","body","JSON","stringify","result","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","input","outputText","editedText","className","survey_container","value","readOnly","placeholder","_c","$RefreshReg$"],"sources":["/Users/anukumar/Desktop/Autumn 2024/Text Simplification/project_v2/client/src/components/Survey/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\n\nconst SurveyPage = () => {\n  const { state } = useLocation();\n  const { email, inputText } = state || {};\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    const fetchSimplification = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/simplifications/fetch\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ email, inputText }),\n        });\n\n        const result = await response.json();\n        setData(result.data);\n      } catch (error) {\n        console.error(\"Error fetching simplification data:\", error);\n      }\n    };\n\n    if (email && inputText) {\n      fetchSimplification();\n    }\n  }, [email, inputText]);\n\n  if (!data) return <p>Loading...</p>;\n\n  const { inputText: input, outputText, editedText } = data;\n\n  return (\n    <div className={styles.survey_container}>\n      <textarea value={input} readOnly placeholder=\"Input Text\" />\n      <textarea value={outputText} readOnly placeholder=\"Initial Generated Text\" />\n      {outputText !== editedText && (\n        <textarea value={editedText} readOnly placeholder=\"Final Edited Text\" />\n      )}\n      <div>\n        <h3>Survey</h3>\n        <form>\n          {/* Add survey questions here */}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SurveyPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}