{"ast":null,"code":"var _jsxFileName = \"/Users/anukumar/Desktop/Autumn 2024/Text Simplification/project_copy/client/src/components/Main/index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [outputText, setOutputText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false); // Track if the button changes to Save\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n  const handleSubmit = async () => {\n    if (!inputText.trim()) return;\n    setIsLoading(true);\n    try {\n      var _data$response;\n      // Define the prompt to send with the user input\n      const prompt = `Simplify the following text for better readability while preserving meaning:\\n\\n\"${inputText}\"`;\n      const response = await fetch(\"http://localhost:5001/api/gpt4\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n      const data = await response.json();\n      const cleanedResponse = (data === null || data === void 0 ? void 0 : (_data$response = data.response) === null || _data$response === void 0 ? void 0 : _data$response.replace(/^\"|\"$/g, '')) || \"No response received.\";\n      setOutputText(cleanedResponse);\n      setIsSubmitted(true); // Mark as submitted to show Save button\n    } catch (error) {\n      console.error(\"Error fetching GPT-4 response:\", error);\n      setOutputText(\"An error occurred while fetching the response.\");\n    }\n    setIsLoading(false);\n  };\n  const handleSave = () => {\n    // Logic for saving the output, if necessary\n    alert(\"Output saved!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main_container,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: styles.navbar,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Text Simplification Study\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.white_btn,\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.form_container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.textareas_container,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: styles.textarea,\n          placeholder: \"Original Text\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this), isSubmitted && /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: styles.textarea,\n          readOnly: true,\n          value: outputText,\n          placeholder: \"GPT-4 Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.submit_btn,\n        onClick: isSubmitted ? handleSave : handleSubmit,\n        disabled: isLoading,\n        children: isLoading ? \"Processing...\" : isSubmitted ? \"Save\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n};\n_s(Main, \"LRCSIScnvgMFc7cmdReFA+VbZGk=\");\n_c = Main;\nexport default Main;\n\n// import { useState } from \"react\";\n// import styles from \"./styles.module.css\";\n\n// const Main = () => {\n// \tconst [inputText, setInputText] = useState(\"\");\n// \tconst [outputText, setOutputText] = useState(\"\");\n// \tconst [isLoading, setIsLoading] = useState(false);\n\n// \tconst handleLogout = () => {\n// \t\tlocalStorage.removeItem(\"token\");\n// \t\twindow.location.reload();\n// \t};\n\n// \tconst handleSubmit = async () => {\n// \t\tif (!inputText.trim()) return;\n// \t\tsetIsLoading(true);\n\n// \t\ttry {\n// \t\t\t// Define the prompt to send with the user input\n// \t\t\tconst prompt = `Simplify the following text for better readability while preserving meaning:\\n\\n\"${inputText}\"`;\n\n// \t\t\tconst response = await fetch(\"http://localhost:5001/api/gpt4\", {\n// \t\t\t\tmethod: \"POST\",\n// \t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n// \t\t\t\tbody: JSON.stringify({ prompt }),\n// \t\t\t});\n\n// \t\t\tconst data = await response.json();\n// \t\t\tsetOutputText(data?.response?.replace(/^\"|\"$/g, '') || \"No response received.\");\n// \t\t} catch (error) {\n// \t\t\tconsole.error(\"Error fetching GPT-4 response:\", error);\n// \t\t\tsetOutputText(\"An error occurred while fetching the response.\");\n// \t\t}\n\n// \t\tsetIsLoading(false);\n// \t};\n\n// \treturn (\n// \t\t<>\n// \t\t\t<nav className={styles.navbar}>\n// \t\t\t\t<h1>Text Simplification Study</h1>\n// \t\t\t\t<button className={styles.white_btn} onClick={handleLogout}>\n// \t\t\t\t\tLogout\n// \t\t\t\t</button>\n// \t\t\t</nav>\n// \t\t\t<div className={styles.main_container}>\n// \t\t\t\t<div className={styles.form_container}>\n// \t\t\t\t\t<textarea\n// \t\t\t\t\t\tclassName={styles.textarea}\n// \t\t\t\t\t\tplaceholder=\"Original Text\"\n// \t\t\t\t\t\tvalue={inputText}\n// \t\t\t\t\t\tonChange={(e) => setInputText(e.target.value)}\n// \t\t\t\t\t></textarea>\n// \t\t\t\t\t<button\n// \t\t\t\t\t\tclassName={styles.submit_btn}\n// \t\t\t\t\t\tonClick={handleSubmit}\n// \t\t\t\t\t\tdisabled={isLoading}\n// \t\t\t\t\t>\n// \t\t\t\t\t\t{isLoading ? \"Processing...\" : \"Submit\"}\n// \t\t\t\t\t</button>\n// \t\t\t\t\t{/* <p className={styles.or_text}>OR</p>\n// \t\t\t\t\t<button className={styles.upload_btn}>Upload Document</button> */}\n\n// \t\t\t\t\t{outputText && (\n// \t\t\t\t\t\t<textarea\n// \t\t\t\t\t\t\tclassName={styles.output_box}\n// \t\t\t\t\t\t\treadOnly\n// \t\t\t\t\t\t\tvalue={outputText}\n// \t\t\t\t\t\t></textarea>\n// \t\t\t\t\t)}\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</>\n// \t);\n\n// };\n\n// export default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","styles","jsxDEV","_jsxDEV","Main","_s","inputText","setInputText","outputText","setOutputText","isLoading","setIsLoading","isSubmitted","setIsSubmitted","handleLogout","localStorage","removeItem","window","location","reload","handleSubmit","trim","_data$response","prompt","response","fetch","method","headers","body","JSON","stringify","data","json","cleanedResponse","replace","error","console","handleSave","alert","className","main_container","children","navbar","fileName","_jsxFileName","lineNumber","columnNumber","white_btn","onClick","form_container","textareas_container","textarea","placeholder","value","onChange","e","target","readOnly","submit_btn","disabled","_c","$RefreshReg$"],"sources":["/Users/anukumar/Desktop/Autumn 2024/Text Simplification/project_copy/client/src/components/Main/index.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport styles from \"./styles.module.css\";\n\nconst Main = () => {\n\tconst [inputText, setInputText] = useState(\"\");\n\tconst [outputText, setOutputText] = useState(\"\");\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [isSubmitted, setIsSubmitted] = useState(false); // Track if the button changes to Save\n\n\tconst handleLogout = () => {\n\t\tlocalStorage.removeItem(\"token\");\n\t\twindow.location.reload();\n\t};\n\n\tconst handleSubmit = async () => {\n\t\tif (!inputText.trim()) return;\n\t\tsetIsLoading(true);\n\n\t\ttry {\n\t\t\t// Define the prompt to send with the user input\n\t\t\tconst prompt = `Simplify the following text for better readability while preserving meaning:\\n\\n\"${inputText}\"`;\n\n\t\t\tconst response = await fetch(\"http://localhost:5001/api/gpt4\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\tbody: JSON.stringify({ prompt }),\n\t\t\t});\n\n\t\t\tconst data = await response.json();\n\t\t\tconst cleanedResponse = data?.response?.replace(/^\"|\"$/g, '') || \"No response received.\";\n\t\t\tsetOutputText(cleanedResponse);\n\t\t\tsetIsSubmitted(true); // Mark as submitted to show Save button\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching GPT-4 response:\", error);\n\t\t\tsetOutputText(\"An error occurred while fetching the response.\");\n\t\t}\n\n\t\tsetIsLoading(false);\n\t};\n\n\tconst handleSave = () => {\n\t\t// Logic for saving the output, if necessary\n\t\talert(\"Output saved!\");\n\t};\n\n\treturn (\n\t\t<div className={styles.main_container}>\n\t\t\t<nav className={styles.navbar}>\n\t\t\t\t<h1>Text Simplification Study</h1>\n\t\t\t\t<button className={styles.white_btn} onClick={handleLogout}>\n\t\t\t\t\tLogout\n\t\t\t\t</button>\n\t\t\t</nav>\n\n\t\t\t<div className={styles.form_container}>\n\t\t\t\t<div className={styles.textareas_container}>\n\t\t\t\t\t{/* Input Textarea */}\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName={styles.textarea}\n\t\t\t\t\t\tplaceholder=\"Original Text\"\n\t\t\t\t\t\tvalue={inputText}\n\t\t\t\t\t\tonChange={(e) => setInputText(e.target.value)}\n\t\t\t\t\t></textarea>\n\n\t\t\t\t\t{/* Output Textarea (shown only after submission) */}\n\t\t\t\t\t{isSubmitted && (\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tclassName={styles.textarea}\n\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\tvalue={outputText}\n\t\t\t\t\t\t\tplaceholder=\"GPT-4 Output\"\n\t\t\t\t\t\t></textarea>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t{/* Button changes between Submit and Save */}\n\t\t\t\t<button\n\t\t\t\t\tclassName={styles.submit_btn}\n\t\t\t\t\tonClick={isSubmitted ? handleSave : handleSubmit}\n\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t>\n\t\t\t\t\t{isLoading ? \"Processing...\" : isSubmitted ? \"Save\" : \"Submit\"}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Main;\n\n\n// import { useState } from \"react\";\n// import styles from \"./styles.module.css\";\n\n// const Main = () => {\n// \tconst [inputText, setInputText] = useState(\"\");\n// \tconst [outputText, setOutputText] = useState(\"\");\n// \tconst [isLoading, setIsLoading] = useState(false);\n\n// \tconst handleLogout = () => {\n// \t\tlocalStorage.removeItem(\"token\");\n// \t\twindow.location.reload();\n// \t};\n\n// \tconst handleSubmit = async () => {\n// \t\tif (!inputText.trim()) return;\n// \t\tsetIsLoading(true);\n\t\n// \t\ttry {\n// \t\t\t// Define the prompt to send with the user input\n// \t\t\tconst prompt = `Simplify the following text for better readability while preserving meaning:\\n\\n\"${inputText}\"`;\n\n// \t\t\tconst response = await fetch(\"http://localhost:5001/api/gpt4\", {\n// \t\t\t\tmethod: \"POST\",\n// \t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n// \t\t\t\tbody: JSON.stringify({ prompt }),\n// \t\t\t});\n\t\n// \t\t\tconst data = await response.json();\n// \t\t\tsetOutputText(data?.response?.replace(/^\"|\"$/g, '') || \"No response received.\");\n// \t\t} catch (error) {\n// \t\t\tconsole.error(\"Error fetching GPT-4 response:\", error);\n// \t\t\tsetOutputText(\"An error occurred while fetching the response.\");\n// \t\t}\n\t\n// \t\tsetIsLoading(false);\n// \t};\n\t\n// \treturn (\n// \t\t<>\n// \t\t\t<nav className={styles.navbar}>\n// \t\t\t\t<h1>Text Simplification Study</h1>\n// \t\t\t\t<button className={styles.white_btn} onClick={handleLogout}>\n// \t\t\t\t\tLogout\n// \t\t\t\t</button>\n// \t\t\t</nav>\n// \t\t\t<div className={styles.main_container}>\n// \t\t\t\t<div className={styles.form_container}>\n// \t\t\t\t\t<textarea\n// \t\t\t\t\t\tclassName={styles.textarea}\n// \t\t\t\t\t\tplaceholder=\"Original Text\"\n// \t\t\t\t\t\tvalue={inputText}\n// \t\t\t\t\t\tonChange={(e) => setInputText(e.target.value)}\n// \t\t\t\t\t></textarea>\n// \t\t\t\t\t<button\n// \t\t\t\t\t\tclassName={styles.submit_btn}\n// \t\t\t\t\t\tonClick={handleSubmit}\n// \t\t\t\t\t\tdisabled={isLoading}\n// \t\t\t\t\t>\n// \t\t\t\t\t\t{isLoading ? \"Processing...\" : \"Submit\"}\n// \t\t\t\t\t</button>\n// \t\t\t\t\t{/* <p className={styles.or_text}>OR</p>\n// \t\t\t\t\t<button className={styles.upload_btn}>Upload Document</button> */}\n\t\n// \t\t\t\t\t{outputText && (\n// \t\t\t\t\t\t<textarea\n// \t\t\t\t\t\t\tclassName={styles.output_box}\n// \t\t\t\t\t\t\treadOnly\n// \t\t\t\t\t\t\tvalue={outputText}\n// \t\t\t\t\t\t></textarea>\n// \t\t\t\t\t)}\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</>\n// \t);\n\t\n\n\n// };\n\n// export default Main;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}