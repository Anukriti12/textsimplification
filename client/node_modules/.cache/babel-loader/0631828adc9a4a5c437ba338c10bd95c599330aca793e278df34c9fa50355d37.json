{"ast":null,"code":"var _jsxFileName = \"/Users/anukumar/Desktop/Autumn 2024/Text Simplification/project_copy/client/src/components/Main/index.jsx\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import styles from \"./styles.module.css\";\n\n// const Main = () => {\n// \tconst [inputText, setInputText] = useState(\"\");\n// \tconst [outputText, setOutputText] = useState(\"\");\n// \tconst [isLoading, setIsLoading] = useState(false);\n\n// \tconst handleLogout = () => {\n// \t\tlocalStorage.removeItem(\"token\");\n// \t\twindow.location.reload();\n// \t};\n\n// \tconst handleSubmit = async () => {\n// \t\tif (!inputText.trim()) return;\n// \t\tsetIsLoading(true);\n\n// \t\ttry {\n// \t\t\t// Define the prompt to send with the user input\n// \t\t\tconst prompt = `Simplify the following text for better readability while preserving meaning:\\n\\n\"${inputText}\"`;\n\n// \t\t\tconst response = await fetch(\"http://localhost:5001/api/gpt4\", {\n// \t\t\t\tmethod: \"POST\",\n// \t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n// \t\t\t\tbody: JSON.stringify({ prompt }),\n// \t\t\t});\n\n// \t\t\tconst data = await response.json();\n// \t\t\tsetOutputText(data?.response?.replace(/^\"|\"$/g, '') || \"No response received.\");\n// \t\t} catch (error) {\n// \t\t\tconsole.error(\"Error fetching GPT-4 response:\", error);\n// \t\t\tsetOutputText(\"An error occurred while fetching the response.\");\n// \t\t}\n\n// \t\tsetIsLoading(false);\n// \t};\n\n// \treturn (\n// \t\t<>\n// \t\t\t<nav className={styles.navbar}>\n// \t\t\t\t<h1>Text Simplification Study</h1>\n// \t\t\t\t<button className={styles.white_btn} onClick={handleLogout}>\n// \t\t\t\t\tLogout\n// \t\t\t\t</button>\n// \t\t\t</nav>\n// \t\t\t<div className={styles.main_container}>\n// \t\t\t\t<div className={styles.form_container}>\n// \t\t\t\t\t<textarea\n// \t\t\t\t\t\tclassName={styles.textarea}\n// \t\t\t\t\t\tplaceholder=\"Original Text\"\n// \t\t\t\t\t\tvalue={inputText}\n// \t\t\t\t\t\tonChange={(e) => setInputText(e.target.value)}\n// \t\t\t\t\t></textarea>\n// \t\t\t\t\t<button\n// \t\t\t\t\t\tclassName={styles.submit_btn}\n// \t\t\t\t\t\tonClick={handleSubmit}\n// \t\t\t\t\t\tdisabled={isLoading}\n// \t\t\t\t\t>\n// \t\t\t\t\t\t{isLoading ? \"Processing...\" : \"Submit\"}\n// \t\t\t\t\t</button>\n// \t\t\t\t\t{/* <p className={styles.or_text}>OR</p>\n// \t\t\t\t\t<button className={styles.upload_btn}>Upload Document</button> */}\n\n// \t\t\t\t\t{outputText && (\n// \t\t\t\t\t\t<textarea\n// \t\t\t\t\t\t\tclassName={styles.output_box}\n// \t\t\t\t\t\t\treadOnly\n// \t\t\t\t\t\t\tvalue={outputText}\n// \t\t\t\t\t\t></textarea>\n// \t\t\t\t\t)}\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</>\n// \t);\n\n// };\n\n// export default Main;\n\nimport { useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [outputText, setOutputText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n  const handleSave = async () => {\n    if (!inputText.trim()) return;\n    setIsLoading(true);\n    try {\n      var _data$response;\n      const prompt = `Simplify the following text for better readability while preserving meaning:\\n\\n\"${inputText}\"`;\n      const response = await fetch(\"http://localhost:5001/api/gpt4\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n      const data = await response.json();\n      const cleanedResponse = (data === null || data === void 0 ? void 0 : (_data$response = data.response) === null || _data$response === void 0 ? void 0 : _data$response.replace(/^\"|\"$/g, \"\")) || \"No response received.\";\n      setOutputText(cleanedResponse);\n    } catch (error) {\n      console.error(\"Error fetching GPT-4 response:\", error);\n      setOutputText(\"An error occurred while fetching the response.\");\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main_container,\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: styles.navbar,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Text Simplification Study\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.white_btn,\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.form_container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.textareas_container,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: styles.textarea,\n          placeholder: \"Original Text\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: styles.textarea,\n          readOnly: true,\n          placeholder: \"Simplified Text\",\n          value: outputText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.save_btn,\n        onClick: handleSave,\n        disabled: isLoading,\n        children: isLoading ? \"Processing...\" : \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"r1SSfUHz0tpuhrZGVeVQKwcPqHI=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","styles","jsxDEV","_jsxDEV","Main","_s","inputText","setInputText","outputText","setOutputText","isLoading","setIsLoading","handleLogout","localStorage","removeItem","window","location","reload","handleSave","trim","_data$response","prompt","response","fetch","method","headers","body","JSON","stringify","data","json","cleanedResponse","replace","error","console","className","main_container","children","navbar","fileName","_jsxFileName","lineNumber","columnNumber","white_btn","onClick","form_container","textareas_container","textarea","placeholder","value","onChange","e","target","readOnly","save_btn","disabled","_c","$RefreshReg$"],"sources":["/Users/anukumar/Desktop/Autumn 2024/Text Simplification/project_copy/client/src/components/Main/index.jsx"],"sourcesContent":["// import { useState } from \"react\";\n// import styles from \"./styles.module.css\";\n\n// const Main = () => {\n// \tconst [inputText, setInputText] = useState(\"\");\n// \tconst [outputText, setOutputText] = useState(\"\");\n// \tconst [isLoading, setIsLoading] = useState(false);\n\n// \tconst handleLogout = () => {\n// \t\tlocalStorage.removeItem(\"token\");\n// \t\twindow.location.reload();\n// \t};\n\n// \tconst handleSubmit = async () => {\n// \t\tif (!inputText.trim()) return;\n// \t\tsetIsLoading(true);\n\t\n// \t\ttry {\n// \t\t\t// Define the prompt to send with the user input\n// \t\t\tconst prompt = `Simplify the following text for better readability while preserving meaning:\\n\\n\"${inputText}\"`;\n\n// \t\t\tconst response = await fetch(\"http://localhost:5001/api/gpt4\", {\n// \t\t\t\tmethod: \"POST\",\n// \t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n// \t\t\t\tbody: JSON.stringify({ prompt }),\n// \t\t\t});\n\t\n// \t\t\tconst data = await response.json();\n// \t\t\tsetOutputText(data?.response?.replace(/^\"|\"$/g, '') || \"No response received.\");\n// \t\t} catch (error) {\n// \t\t\tconsole.error(\"Error fetching GPT-4 response:\", error);\n// \t\t\tsetOutputText(\"An error occurred while fetching the response.\");\n// \t\t}\n\t\n// \t\tsetIsLoading(false);\n// \t};\n\t\n// \treturn (\n// \t\t<>\n// \t\t\t<nav className={styles.navbar}>\n// \t\t\t\t<h1>Text Simplification Study</h1>\n// \t\t\t\t<button className={styles.white_btn} onClick={handleLogout}>\n// \t\t\t\t\tLogout\n// \t\t\t\t</button>\n// \t\t\t</nav>\n// \t\t\t<div className={styles.main_container}>\n// \t\t\t\t<div className={styles.form_container}>\n// \t\t\t\t\t<textarea\n// \t\t\t\t\t\tclassName={styles.textarea}\n// \t\t\t\t\t\tplaceholder=\"Original Text\"\n// \t\t\t\t\t\tvalue={inputText}\n// \t\t\t\t\t\tonChange={(e) => setInputText(e.target.value)}\n// \t\t\t\t\t></textarea>\n// \t\t\t\t\t<button\n// \t\t\t\t\t\tclassName={styles.submit_btn}\n// \t\t\t\t\t\tonClick={handleSubmit}\n// \t\t\t\t\t\tdisabled={isLoading}\n// \t\t\t\t\t>\n// \t\t\t\t\t\t{isLoading ? \"Processing...\" : \"Submit\"}\n// \t\t\t\t\t</button>\n// \t\t\t\t\t{/* <p className={styles.or_text}>OR</p>\n// \t\t\t\t\t<button className={styles.upload_btn}>Upload Document</button> */}\n\t\n// \t\t\t\t\t{outputText && (\n// \t\t\t\t\t\t<textarea\n// \t\t\t\t\t\t\tclassName={styles.output_box}\n// \t\t\t\t\t\t\treadOnly\n// \t\t\t\t\t\t\tvalue={outputText}\n// \t\t\t\t\t\t></textarea>\n// \t\t\t\t\t)}\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</>\n// \t);\n\t\n\n// };\n\n// export default Main;\n\nimport { useState } from \"react\";\nimport styles from \"./styles.module.css\";\n\nconst Main = () => {\n    const [inputText, setInputText] = useState(\"\");\n    const [outputText, setOutputText] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleLogout = () => {\n        localStorage.removeItem(\"token\");\n        window.location.reload();\n    };\n\n    const handleSave = async () => {\n        if (!inputText.trim()) return;\n        setIsLoading(true);\n\n        try {\n            const prompt = `Simplify the following text for better readability while preserving meaning:\\n\\n\"${inputText}\"`;\n\n            const response = await fetch(\"http://localhost:5001/api/gpt4\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ prompt }),\n            });\n\n            const data = await response.json();\n            const cleanedResponse = data?.response?.replace(/^\"|\"$/g, \"\") || \"No response received.\";\n            setOutputText(cleanedResponse);\n        } catch (error) {\n            console.error(\"Error fetching GPT-4 response:\", error);\n            setOutputText(\"An error occurred while fetching the response.\");\n        }\n\n        setIsLoading(false);\n    };\n\n    return (\n        <div className={styles.main_container}>\n            <nav className={styles.navbar}>\n                <h1>Text Simplification Study</h1>\n                <button className={styles.white_btn} onClick={handleLogout}>\n                    Logout\n                </button>\n            </nav>\n\n            <div className={styles.form_container}>\n                <div className={styles.textareas_container}>\n                    {/* Input Textarea */}\n                    <textarea\n                        className={styles.textarea}\n                        placeholder=\"Original Text\"\n                        value={inputText}\n                        onChange={(e) => setInputText(e.target.value)}\n                    ></textarea>\n\n                    {/* Output Textarea */}\n                    <textarea\n                        className={styles.textarea}\n                        readOnly\n                        placeholder=\"Simplified Text\"\n                        value={outputText}\n                    ></textarea>\n                </div>\n\n                {/* Save Button */}\n                <button\n                    className={styles.save_btn}\n                    onClick={handleSave}\n                    disabled={isLoading}\n                >\n                    {isLoading ? \"Processing...\" : \"Save\"}\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Main;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}