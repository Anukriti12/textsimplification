{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useLocation,useNavigate}from\"react-router-dom\";import styles from\"./styles.module.css\";import{saveAs}from\"file-saver\";import DiffMatchPatch from\"diff-match-patch\";// const handleFormSubmit = (e) => {\n//   e.preventDefault();\n//   alert(\"Survey responses saved\");\n// };\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SurveyPage=()=>{const{state}=useLocation();//const { email, inputText } = state || {};\nconst{email,inputText,outputText:initialOutputText,editHistory,saveHistory}=state||{};const[data,setData]=useState(null);const[showDifference1,setShowDifference1]=useState(false);// For Input Text vs System-generated Text\nconst[showDifference2,setShowDifference2]=useState(false);// For System-generated Text vs Submitted Text\nconst[diffHtml1,setDiffHtml1]=useState(\"\");const[diffHtml2,setDiffHtml2]=useState(\"\");const[showStats,setShowStats]=useState(false);// Store latest submitted text from history selection\nconst[latestFinalText,setLatestFinalText]=useState(\"\");const[isSidebarVisible,setIsSidebarVisible]=useState(false);const[selectedVersion,setSelectedVersion]=useState(null);const navigate=useNavigate();// Word count states\nconst[inputWordCount,setInputWordCount]=useState(0);const[outputWordCount,setOutputWordCount]=useState(0);const[submittedWordCount,setSubmittedWordCount]=useState(0);// Function to count words\nconst countWords=text=>{return text?text.trim().split(/\\s+/).filter(Boolean).length:0;};// Update word counts when data changes\nuseEffect(()=>{setInputWordCount(countWords(inputText));setOutputWordCount(countWords(initialOutputText));setSubmittedWordCount(countWords(latestFinalText));},[inputText,initialOutputText,latestFinalText]);useEffect(()=>{if(saveHistory.length>0){var _saveHistory,_saveHistory2;setLatestFinalText(((_saveHistory=saveHistory[saveHistory.length-1])===null||_saveHistory===void 0?void 0:_saveHistory.finalText)||\"\");setSelectedVersion(saveHistory.length);setSubmittedWordCount(countWords(((_saveHistory2=saveHistory[saveHistory.length-1])===null||_saveHistory2===void 0?void 0:_saveHistory2.finalText)||\"\"));}},[saveHistory]);useEffect(()=>{if(saveHistory.length>0){var _saveHistory3,_saveHistory4;setLatestFinalText(((_saveHistory3=saveHistory[saveHistory.length-1])===null||_saveHistory3===void 0?void 0:_saveHistory3.finalText)||\"\");setSelectedVersion(saveHistory.length);setSubmittedWordCount(countWords(((_saveHistory4=saveHistory[saveHistory.length-1])===null||_saveHistory4===void 0?void 0:_saveHistory4.finalText)||\"\"));}else{// Fallback in case no edit is saved\nsetLatestFinalText(initialOutputText);// fallback if user didnâ€™t save edits\n}},[saveHistory,initialOutputText]);const handleHistoryClick=index=>{setLatestFinalText(saveHistory[index].finalText);setSelectedVersion(index+1);};useEffect(()=>{const handleBackButton=event=>{event.preventDefault();const confirmLeave=window.confirm(\"You have unsaved changes. Going back may result in losing your edits. Do you want to continue?\\n\\nIf you want to edit your already submitted text, copy it from here.\");if(!confirmLeave){window.history.pushState(null,\"\",window.location.href);// Prevent navigation\n}else{navigate(-1);}};// **Push a history state to detect back button click**\nwindow.history.pushState(null,\"\",window.location.href);window.addEventListener(\"popstate\",handleBackButton);return()=>{window.removeEventListener(\"popstate\",handleBackButton);};},[navigate]);// useEffect(() => {\n//   if (saveHistory.length > 0) {\n//     setLatestFinalText(saveHistory[saveHistory.length - 1]?.finalText || \"\");\n//   }\n// }, [saveHistory]);\nconst[submitted,setSubmitted]=useState(false);const[responses,setResponses]=useState({easy:\"\",clarity:\"\",meaning:\"\",grammar:\"\",needs:\"\",guidelines:\"\",coherent:\"\",relevancy:\"\"});const computeTextStats=text=>{const words=text.trim().split(/\\s+/).filter(Boolean);const wordCount=words.length;const uniqueWords=new Set(words).size;const sentenceCount=(text.match(/[.!?]/g)||[]).length;const avgSentenceLength=sentenceCount?(wordCount/sentenceCount).toFixed(2):wordCount;const charWithSpaces=text.length;const charWithoutSpaces=text.replace(/\\s/g,\"\").length;const avgCharsPerWord=wordCount?(charWithoutSpaces/wordCount).toFixed(2):0;// Approximate syllables: count number of vowel groups\nconst syllableCount=text.toLowerCase().split(/\\s+/).map(word=>(word.match(/[aeiouy]+/g)||[]).length).reduce((a,b)=>a+b,0);const avgSyllablesPerWord=wordCount?(syllableCount/wordCount).toFixed(2):0;// Word length frequency\nconst wordLengths={};words.forEach(w=>{const len=w.length;wordLengths[len]=(wordLengths[len]||0)+1;});return{wordCount,uniqueWords,sentenceCount,avgSentenceLength,charWithSpaces,charWithoutSpaces,avgCharsPerWord,syllableCount,avgSyllablesPerWord,lexicalDensity:(uniqueWords/wordCount).toFixed(2),wordLengths:wordLengths};};// Handle input changes     \n// const handleOptionChange = (event) => {\n//   setResponses({ ...responses, [event.target.name]: event.target.value });\n// };\n// Handle input changes, allowing deselection\nconst handleOptionChange=event=>{const{name,value}=event.target;setResponses(prevResponses=>({...prevResponses,[name]:prevResponses[name]===value?\"\":value// Toggle selection\n}));};// Check if all required fields are filled\nconst isFormComplete=Object.values(responses).every(value=>value!==\"\"&&value!==null);const handleLogout=()=>{localStorage.removeItem(\"token\");navigate(\"/Login\");};const handleCopy=text=>{navigator.clipboard.writeText(text).then(()=>{alert(\"Copied to clipboard!\");},err=>{console.error(\"Failed to copy text:\",err);});};const handleDownload=(text,filename,format)=>{const blob=new Blob([text],{type:\"text/plain;charset=utf-8\"});saveAs(blob,`${filename}.${format}`);};// Handle form submission\nconst handleFormSubmit=event=>{event.preventDefault();// if (!isFormComplete) {\n//   alert(\"Please answer all required questions before submitting.\");\n//   return;\n// }\n// Simulate saving responses (replace with API call if needed)\nconsole.log(\"Survey Responses:\",responses);// Show the thank-you message\nsetSubmitted(true);};const generateDiff=(input,output)=>{const dmp=new DiffMatchPatch();const diffs=dmp.diff_main(input,output);dmp.diff_cleanupSemantic(diffs);// Optional cleanup for better readability\nreturn dmp.diff_prettyHtml(diffs);};useEffect(()=>{const fetchSimplification=async()=>{try{const response=await fetch(\"https://textsimplification-eecqhvdcduczf8cz.westus-01.azurewebsites.net/api/simplifications/fetch\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email,inputText})});const result=await response.json();if(response.ok){setData(result.data);setDiffHtml1(generateDiff(result.data.inputText,result.data.outputText));// Input vs System-generated\nsetDiffHtml2(generateDiff(result.data.outputText,result.data.latestFinalText));// System-generated vs Submitted\n}}catch(error){console.error(\"Error fetching simplification data:\",error);}};if(email&&inputText){fetchSimplification();}},[email,inputText,initialOutputText]);if(!data){return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});}// const { inputText: input, outputText, editedText } = data;\nconst{inputText:input,outputText,latestText}=data;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"nav\",{className:styles.navbar,children:[/*#__PURE__*/_jsx(\"h1\",{onClick:()=>window.location.href=\"https://textsimplification-eecqhvdcduczf8cz.westus-01.azurewebsites.net/\",style:{cursor:\"pointer\"}// Makes it look clickable\n,children:\"Text Simplification Tool\"}),/*#__PURE__*/_jsx(\"button\",{className:styles.white_btn,onClick:handleLogout,children:\"Logout\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsxs(\"div\",{className:`${styles.sidebar} ${isSidebarVisible?styles.expanded:\"\"}`,children:[/*#__PURE__*/_jsxs(\"button\",{className:styles.historyIcon,onClick:()=>setIsSidebarVisible(!isSidebarVisible),children:[\"\\uD83D\\uDD52 \",/*#__PURE__*/_jsx(\"p\",{style:{fontSize:\"15px\"},children:\"History\"})]}),isSidebarVisible&&/*#__PURE__*/_jsxs(\"div\",{className:styles.historyContent,children:[/*#__PURE__*/_jsx(\"button\",{className:styles.closeButton,onClick:()=>setIsSidebarVisible(false),children:\"\\u2716\"}),/*#__PURE__*/_jsx(\"ul\",{className:styles.historyList,children:saveHistory.map((entry,index)=>/*#__PURE__*///  <li key={index} className={styles.historyItem} onClick={() => handleHistoryClick(entry)}>\n//    {entry.timestamp}\n//  </li>\n_jsxs(\"li\",{className:`${styles.historyItem} ${selectedVersion===index+1?styles.activeVersion:\"\"}`,onClick:()=>handleHistoryClick(index),children:[\"Version \",index+1]},index))})]})]}),!submitted?/*#__PURE__*/_jsxs(\"div\",{className:`${styles.mainContent} ${isSidebarVisible?styles.withSidebar:\"\"}`,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.description}),/*#__PURE__*/_jsxs(\"div\",{className:styles.textareas_container,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.text_container,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.labelWrapper,children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,htmlFor:\"inputText\",children:\"Input Text\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.actions,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.copyIcon,onClick:()=>handleCopy(inputText),title:\"Copy to Clipboard\",children:\"\\uD83D\\uDCCB \"}),/*#__PURE__*/_jsx(\"div\",{className:styles.copyIcon,onClick:()=>handleDownload(inputText,\"inputText\",\"txt\"),title:\"Download as .txt file\",children:\"\\uD83D\\uDCE5 \"})]})]}),/*#__PURE__*/_jsxs(\"p\",{className:styles.wordCount,children:[\"Words: \",inputWordCount]}),/*#__PURE__*/_jsx(\"textarea\",{id:\"inputText\",className:`${styles.textarea} ${styles.side_by_side}`,value:input,readOnly:true,placeholder:\"Input Text\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.text_container,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.labelWrapper,children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,htmlFor:\"outputText\",children:\"AI-generated Text\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.actions,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.copyIcon,onClick:()=>handleCopy(outputText),title:\"Copy to Clipboard\",children:\"\\uD83D\\uDCCB \"}),/*#__PURE__*/_jsx(\"div\",{className:styles.copyIcon,onClick:()=>handleDownload(outputText,\"GeneratedText\",\"txt\"),title:\"Download as .txt file\",children:\"\\uD83D\\uDCE5 \"}),/*#__PURE__*/_jsx(\"button\",{className:styles.toggleDiffBtn,onClick:()=>setShowDifference1(!showDifference1),children:showDifference1?\"Hide the comparison\":\"Compare with input text\"}),/*#__PURE__*/_jsx(\"button\",{className:styles.toggleDiffBtn,onClick:()=>setShowStats(!showStats),children:showStats?\"Hide Stats\":\"Show Stats\"})]})]}),/*#__PURE__*/_jsxs(\"p\",{className:styles.wordCount,children:[\"Words: \",outputWordCount]}),/*#__PURE__*/_jsx(\"textarea\",{id:\"outputText\",className:`${styles.output_box} ${styles.side_by_side}`,value:initialOutputText,readOnly:true,placeholder:\"Initial AI-Generated Text\"}),showDifference1&&/*#__PURE__*/_jsxs(\"div\",{className:styles.diff_box,children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,children:\"Input vs AI-generated Text\"}),/*#__PURE__*/_jsx(\"div\",{className:`${styles.diff_output}`,dangerouslySetInnerHTML:{__html:diffHtml1}})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.text_container,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.labelWrapper,children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,htmlFor:\"submittedText\",children:\"Final Revised Text\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.actions,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.copyIcon,onClick:()=>handleCopy(latestFinalText),title:\"Copy to Clipboard\",children:\"\\uD83D\\uDCCB \"}),/*#__PURE__*/_jsx(\"div\",{className:styles.copyIcon,onClick:()=>handleDownload(latestFinalText,\"SubmittedText\",\"txt\"),title:\"Download as .txt file\",children:\"\\uD83D\\uDCE5 \"}),/*#__PURE__*/_jsx(\"button\",{className:styles.toggleDiffBtn,onClick:()=>setShowDifference2(!showDifference2),children:showDifference2?\"Hide the comparison\":\"Compare with AI-generated text\"})]})]}),/*#__PURE__*/_jsxs(\"p\",{className:styles.wordCount,children:[\"Words: \",submittedWordCount]}),/*#__PURE__*/_jsx(\"textarea\",{id:\"submittedText\",className:`${styles.output_box} ${styles.side_by_side}`,value:latestFinalText,readOnly:true,placeholder:\"Final Revised Text\"}),showDifference2&&/*#__PURE__*/_jsxs(\"div\",{className:styles.diff_box,children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,children:\"AI-generated vs Final revised Text\"}),/*#__PURE__*/_jsx(\"div\",{className:`${styles.diff_output}`,dangerouslySetInnerHTML:{__html:diffHtml2}})]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.diff_container})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.surveyContainer,children:/*#__PURE__*/_jsxs(\"form\",{className:styles.surveyForm,onSubmit:handleFormSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Survey\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Your feedback is valuable. Please try to answer all the questions.\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Does the AI-generated text meet your needs?\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyOptions,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"needs\",value:\"not-at-all\",onChange:handleOptionChange}),\"  Not at all\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"needs\",value:\"somewhat-meets\",onChange:handleOptionChange}),\"  Somewhat meets\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"needs\",value:\"moderately-meets\",onChange:handleOptionChange}),\"  Moderately meets\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"needs\",value:\"mostly-meets\",onChange:handleOptionChange}),\"  Mostly meets\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"needs\",value:\"completely-meets\",onChange:handleOptionChange}),\"  Completely meets\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Is the AI-generated text easy to understand?  \"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyOptions,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"easy\",value:\"not-clear\",onChange:handleOptionChange}),\"  Not easy at all\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"easy\",value:\"somewhat-clear\",onChange:handleOptionChange}),\"  Somewhat easy\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"easy\",value:\"moderately-clear\",onChange:handleOptionChange}),\"  Moderately easy\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"easy\",value:\"mostly-clear\",onChange:handleOptionChange}),\"  Mostly easy\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"easy\",value:\"very-clear\",onChange:handleOptionChange}),\"  Completely easy\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Does the AI-generated text preserve the original meaning? \"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyOptions,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"meaning\",value:\"not-at-all\",onChange:handleOptionChange}),\"  Not at all\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"meaning\",value:\"somewhat-preserves\",onChange:handleOptionChange}),\"  Somewhat preserves\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"meaning\",value:\"moderately-preserves\",onChange:handleOptionChange}),\"  Moderately preserves\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"meaning\",value:\"mostly-preserves\",onChange:handleOptionChange}),\"  Mostly preserves\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"meaning\",value:\"completely-preserves\",onChange:handleOptionChange}),\"  Completely preserves\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Does the AI-generated text contain false or irrelevant information?  \"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyOptions,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"relevancy\",value:\"not-at-all\",onChange:handleOptionChange}),\"  A lot of inaccuracies\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"relevancy\",value:\"somewhat\",onChange:handleOptionChange}),\"  Several inaccuracies\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"relevancy\",value:\"moderately\",onChange:handleOptionChange}),\"  Some minor inaccuracies\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"relevancy\",value:\"mostly\",onChange:handleOptionChange}),\"  Mostly accurate\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"relevancy\",value:\"completely\",onChange:handleOptionChange}),\"  Completely accurate\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Are there spelling or grammar mistakes in the AI-generated text? \"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyOptions,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"grammar\",value:\"many-errors\",onChange:handleOptionChange}),\"  Many mistakes\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"grammar\",value:\"several-errors\",onChange:handleOptionChange}),\"  Several mistakes\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"grammar\",value:\"some-errors\",onChange:handleOptionChange}),\"  Some mistakes\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"grammar\",value:\"few-errors\",onChange:handleOptionChange}),\"  Few mistakes\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"grammar\",value:\"no-errors\",onChange:handleOptionChange}),\"  No mistakes\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Does the AI-generated text avoid difficult words?     \"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyOptions,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"guidelines\",value:\"not-at-all\",onChange:handleOptionChange}),\"  Not at all\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"guidelines\",value:\"somewhat-follows\",onChange:handleOptionChange}),\"  Somewhat\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"guidelines\",value:\"moderately-follows\",onChange:handleOptionChange}),\"  Moderately\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"guidelines\",value:\"mostly-follows\",onChange:handleOptionChange}),\"  Mostly\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"guidelines\",value:\"completely-follows\",onChange:handleOptionChange}),\"  Completely \"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Does the AI-generated text use short sentences and clear headings?    \"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyOptions,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"clarity\",value:\"not-at-all\",onChange:handleOptionChange}),\"  Not at all\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"clarity\",value:\"somewhat-follows\",onChange:handleOptionChange}),\"  Somewhat \"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"clarity\",value:\"moderately-follows\",onChange:handleOptionChange}),\"  Moderately\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"clarity\",value:\"mostly-follows\",onChange:handleOptionChange}),\"  Mostly\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"clarity\",value:\"completely-follows\",onChange:handleOptionChange}),\"  Completely \"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Does the AI-generated text flow logically from start to finish? \"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyOptions,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"coherent\",value:\"not-at-all\",onChange:handleOptionChange}),\"  Not at all\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"coherent\",value:\"somewhat-follows\",onChange:handleOptionChange}),\"  Somewhat \"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"coherent\",value:\"moderately-follows\",onChange:handleOptionChange}),\"  Moderately\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"coherent\",value:\"mostly-follows\",onChange:handleOptionChange}),\"  Mostly\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"coherent\",value:\"completely-follows\",onChange:handleOptionChange}),\"  Completely \"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"[OPTIONAL]\"}),\" How much effort did you need to edit the AI-generated text? \"]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyOptions,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"editing_effort\",value:\"many-errors\",checked:responses.editing_effort===\"many-errors\",onChange:handleOptionChange}),\"  A lot of effort\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"editing_effort\",value:\"several-errors\",checked:responses.editing_effort===\"several-errors\",onChange:handleOptionChange}),\"  Significant effort\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"editing_effort\",value:\"some-errors\",checked:responses.editing_effort===\"some-errors\",onChange:handleOptionChange}),\"  Moderate effort\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"editing_effort\",value:\"few-errors\",checked:responses.editing_effort===\"few-errors\",onChange:handleOptionChange}),\"  Minimal effort\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"editing_effort\",value:\"no-errors\",checked:responses.editing_effort===\"no-errors\",onChange:handleOptionChange}),\"  No effort at all\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"[OPTIONAL]\"}),\"  If you edited the AI-generated text, what were your main reasons for it?\"]}),/*#__PURE__*/_jsx(\"textarea\",{// className={styles.textarea}\nname:\"edits\",rows:\"3\",cols:\"70\",placeholder:\"\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.surveyQuestion,children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"[OPTIONAL]\"}),\" Do you have any additional comments about the AI-generated text? \"]}),/*#__PURE__*/_jsx(\"textarea\",{// className={styles.textarea}\nname:\"comments\",rows:\"4\",cols:\"70\",placeholder:\"\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{className:styles.submitButton,type:\"submit\",children:\"Submit\"})})]})})]}):/*#__PURE__*/// Thank You Message & Redirect\n_jsxs(\"div\",{className:styles.thankYouContainer,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Thank You!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Your responses have been saved. We appreciate your feedback.\"}),/*#__PURE__*/_jsx(\"button\",{className:styles.redirectButton,onClick:()=>navigate(\"/simplify\",{replace:true}),children:\"Start Another Simplification\"})]})]})]});};export default SurveyPage;","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","styles","saveAs","DiffMatchPatch","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SurveyPage","state","email","inputText","outputText","initialOutputText","editHistory","saveHistory","data","setData","showDifference1","setShowDifference1","showDifference2","setShowDifference2","diffHtml1","setDiffHtml1","diffHtml2","setDiffHtml2","showStats","setShowStats","latestFinalText","setLatestFinalText","isSidebarVisible","setIsSidebarVisible","selectedVersion","setSelectedVersion","navigate","inputWordCount","setInputWordCount","outputWordCount","setOutputWordCount","submittedWordCount","setSubmittedWordCount","countWords","text","trim","split","filter","Boolean","length","_saveHistory","_saveHistory2","finalText","_saveHistory3","_saveHistory4","handleHistoryClick","index","handleBackButton","event","preventDefault","confirmLeave","window","confirm","history","pushState","location","href","addEventListener","removeEventListener","submitted","setSubmitted","responses","setResponses","easy","clarity","meaning","grammar","needs","guidelines","coherent","relevancy","computeTextStats","words","wordCount","uniqueWords","Set","size","sentenceCount","match","avgSentenceLength","toFixed","charWithSpaces","charWithoutSpaces","replace","avgCharsPerWord","syllableCount","toLowerCase","map","word","reduce","a","b","avgSyllablesPerWord","wordLengths","forEach","w","len","lexicalDensity","handleOptionChange","name","value","target","prevResponses","isFormComplete","Object","values","every","handleLogout","localStorage","removeItem","handleCopy","navigator","clipboard","writeText","then","alert","err","console","error","handleDownload","filename","format","blob","Blob","type","handleFormSubmit","log","generateDiff","input","output","dmp","diffs","diff_main","diff_cleanupSemantic","diff_prettyHtml","fetchSimplification","response","fetch","method","headers","body","JSON","stringify","result","json","ok","children","latestText","className","navbar","onClick","style","cursor","white_btn","container","sidebar","expanded","historyIcon","fontSize","historyContent","closeButton","historyList","entry","historyItem","activeVersion","mainContent","withSidebar","description","textareas_container","text_container","labelWrapper","label","htmlFor","actions","copyIcon","title","id","textarea","side_by_side","readOnly","placeholder","toggleDiffBtn","output_box","diff_box","diff_output","dangerouslySetInnerHTML","__html","diff_container","surveyContainer","surveyForm","onSubmit","surveyQuestion","surveyOptions","onChange","checked","editing_effort","rows","cols","submitButton","thankYouContainer","redirectButton"],"sources":["/Users/anukumar/Desktop/Autumn 2024/Text Simplification/textsimplification/client/src/components/Survey/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\nimport { saveAs } from \"file-saver\";\nimport DiffMatchPatch from \"diff-match-patch\";\n\n// const handleFormSubmit = (e) => {\n//   e.preventDefault();\n//   alert(\"Survey responses saved\");\n// };\n\nconst SurveyPage = () => {\n  const { state } = useLocation();\n  //const { email, inputText } = state || {};\n  const { email, inputText, outputText: initialOutputText, editHistory, saveHistory } = state || {};\n\n\n  const [data, setData] = useState(null);\n       \n  const [showDifference1, setShowDifference1] = useState(false); // For Input Text vs System-generated Text\n  const [showDifference2, setShowDifference2] = useState(false); // For System-generated Text vs Submitted Text\n  const [diffHtml1, setDiffHtml1] = useState(\"\");\n  const [diffHtml2, setDiffHtml2] = useState(\"\");\n\n  const [showStats, setShowStats] = useState(false);\n\n    // Store latest submitted text from history selection\n    const [latestFinalText, setLatestFinalText] = useState(\"\");\n    const [isSidebarVisible, setIsSidebarVisible] = useState(false);\n    const [selectedVersion, setSelectedVersion] = useState(null);\n    \n\n  const navigate = useNavigate();\n\n  // Word count states\n  const [inputWordCount, setInputWordCount] = useState(0);\n  const [outputWordCount, setOutputWordCount] = useState(0);\n  const [submittedWordCount, setSubmittedWordCount] = useState(0);\n\n  // Function to count words\n  const countWords = (text) => {\n    return text ? text.trim().split(/\\s+/).filter(Boolean).length : 0;\n  };\n\n  // Update word counts when data changes\n  useEffect(() => {\n    setInputWordCount(countWords(inputText));\n    setOutputWordCount(countWords(initialOutputText));\n    setSubmittedWordCount(countWords(latestFinalText));\n  }, [inputText, initialOutputText, latestFinalText]);\n\n\n  useEffect(() => {\n    if (saveHistory.length > 0) {\n      setLatestFinalText(saveHistory[saveHistory.length - 1]?.finalText || \"\");\n      setSelectedVersion(saveHistory.length);\n      setSubmittedWordCount(countWords(saveHistory[saveHistory.length - 1]?.finalText || \"\"));\n    }\n  }, [saveHistory]);\n\n  useEffect(() => {\n    if (saveHistory.length > 0) {\n      setLatestFinalText(saveHistory[saveHistory.length - 1]?.finalText || \"\");\n      setSelectedVersion(saveHistory.length);\n      setSubmittedWordCount(countWords(saveHistory[saveHistory.length - 1]?.finalText || \"\"));\n    } else {\n      // Fallback in case no edit is saved\n      setLatestFinalText(initialOutputText); // fallback if user didnâ€™t save edits\n    }\n  }, [saveHistory, initialOutputText]);\n\n  \n  const handleHistoryClick = (index) => {\n    setLatestFinalText(saveHistory[index].finalText);\n    setSelectedVersion(index + 1);\n  };\n\n  useEffect(() => {\n    const handleBackButton = (event) => {\n      event.preventDefault();\n      const confirmLeave = window.confirm(\n        \"You have unsaved changes. Going back may result in losing your edits. Do you want to continue?\\n\\nIf you want to edit your already submitted text, copy it from here.\"\n      );\n      if (!confirmLeave) {\n        window.history.pushState(null, \"\", window.location.href); // Prevent navigation\n      } else {\n        navigate(-1);\n      }\n    };\n\n\n    // **Push a history state to detect back button click**\n    window.history.pushState(null, \"\", window.location.href);\n    window.addEventListener(\"popstate\", handleBackButton);\n\n    return () => {\n      window.removeEventListener(\"popstate\", handleBackButton);\n    };\n  }, [navigate]);\n\n  // useEffect(() => {\n  //   if (saveHistory.length > 0) {\n  //     setLatestFinalText(saveHistory[saveHistory.length - 1]?.finalText || \"\");\n  //   }\n  // }, [saveHistory]);\n  \n  const [submitted, setSubmitted] = useState(false);\n\n  const [responses, setResponses] = useState({\n    easy: \"\",\n    clarity: \"\",\n    meaning: \"\",\n    grammar: \"\",\n    needs: \"\",\n    guidelines: \"\",\n    coherent: \"\",\n    relevancy: \"\"\n  });\n\n  const computeTextStats = (text) => {\n    const words = text.trim().split(/\\s+/).filter(Boolean);\n    const wordCount = words.length;\n    const uniqueWords = new Set(words).size;\n    const sentenceCount = (text.match(/[.!?]/g) || []).length;\n    const avgSentenceLength = sentenceCount ? (wordCount / sentenceCount).toFixed(2) : wordCount;\n    const charWithSpaces = text.length;\n    const charWithoutSpaces = text.replace(/\\s/g, \"\").length;\n    const avgCharsPerWord = wordCount ? (charWithoutSpaces / wordCount).toFixed(2) : 0;\n  \n    // Approximate syllables: count number of vowel groups\n    const syllableCount = text\n      .toLowerCase()\n      .split(/\\s+/)\n      .map(word => (word.match(/[aeiouy]+/g) || []).length)\n      .reduce((a, b) => a + b, 0);\n    const avgSyllablesPerWord = wordCount ? (syllableCount / wordCount).toFixed(2) : 0;\n  \n    // Word length frequency\n    const wordLengths = {};\n    words.forEach((w) => {\n      const len = w.length;\n      wordLengths[len] = (wordLengths[len] || 0) + 1;\n    });\n  \n    return {\n      wordCount,\n      uniqueWords,\n      sentenceCount,\n      avgSentenceLength,\n      charWithSpaces,\n      charWithoutSpaces,\n      avgCharsPerWord,\n      syllableCount,\n      avgSyllablesPerWord,\n      lexicalDensity: (uniqueWords / wordCount).toFixed(2),\n      wordLengths: wordLengths,\n    };\n  };\n\n  \n  // Handle input changes     \n  // const handleOptionChange = (event) => {\n  //   setResponses({ ...responses, [event.target.name]: event.target.value });\n  // };\n\n  // Handle input changes, allowing deselection\nconst handleOptionChange = (event) => {\n  const { name, value } = event.target;\n  setResponses((prevResponses) => ({\n    ...prevResponses,\n    [name]: prevResponses[name] === value ? \"\" : value,  // Toggle selection\n  }));\n};\n  // Check if all required fields are filled\n  const isFormComplete = Object.values(responses).every((value) => value !== \"\" && value !== null);\n\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/Login\"); \n  };\n  \n  const handleCopy = (text) => {\n    navigator.clipboard.writeText(text).then(\n      () => {\n        alert(\"Copied to clipboard!\");\n      },\n      (err) => {\n        console.error(\"Failed to copy text:\", err);\n      }\n    );\n  };\n\n  const handleDownload = (text, filename, format) => {\n    const blob = new Blob([text], { type: \"text/plain;charset=utf-8\" });\n    saveAs(blob, `${filename}.${format}`);\n  };\n\n  // Handle form submission\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    // if (!isFormComplete) {\n    //   alert(\"Please answer all required questions before submitting.\");\n    //   return;\n    // }\n\n    // Simulate saving responses (replace with API call if needed)\n    console.log(\"Survey Responses:\", responses);\n\n    // Show the thank-you message\n    setSubmitted(true);\n  };\n\n  const generateDiff = (input, output) => {\n    const dmp = new DiffMatchPatch();\n    const diffs = dmp.diff_main(input, output);\n    dmp.diff_cleanupSemantic(diffs); // Optional cleanup for better readability\n    return dmp.diff_prettyHtml(diffs);\n  };\n\n  useEffect(() => {\n    const fetchSimplification = async () => {\n      try {\n        const response = await fetch(\"https://textsimplification-eecqhvdcduczf8cz.westus-01.azurewebsites.net/api/simplifications/fetch\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ email, inputText }),\n        });\n  \n        const result = await response.json();\n  \n        if (response.ok) {\n          setData(result.data);\n          setDiffHtml1(generateDiff(result.data.inputText, result.data.outputText)); // Input vs System-generated\n          setDiffHtml2(generateDiff(result.data.outputText, result.data.latestFinalText)); // System-generated vs Submitted\n        }\n      } catch (error) {\n        console.error(\"Error fetching simplification data:\", error);\n      }\n    };\n  \n    if (email && inputText) {\n      fetchSimplification();\n    }\n  }, [email, inputText, initialOutputText]);\n\n\n  if (!data)\n    {return <p>Loading...</p>;}\n\n  // const { inputText: input, outputText, editedText } = data;\n  const { inputText: input, outputText, latestText } = data;\n\n  return (\n    <>\n\t\t{/* Navbar */}\n\t\t<nav className={styles.navbar}>\n\t\t  {/* <h1>Text Simplification Tool</h1> */}\n      <h1 \n    onClick={() => window.location.href = \"https://textsimplification-eecqhvdcduczf8cz.westus-01.azurewebsites.net/\"}\n    style={{ cursor: \"pointer\" }} // Makes it look clickable\n \t\t>\n\t\tText Simplification Tool</h1>\n\t\t  <button className={styles.white_btn} onClick={handleLogout}>\n\t\t\tLogout\n\t\t  </button>\n\t\t</nav>\n\n\n<div className={styles.container}>\n    <div className={`${styles.sidebar} ${isSidebarVisible ? styles.expanded : \"\"}`}>\n         \n         <button className={styles.historyIcon} onClick={() => setIsSidebarVisible(!isSidebarVisible)}>\n           ðŸ•’ <p style={{ fontSize: \"15px\" }}>History</p>\n         </button>\n         {isSidebarVisible && (\n           <div className={styles.historyContent}>\n             <button className={styles.closeButton} onClick={() => setIsSidebarVisible(false)}>âœ–</button>\n             <ul className={styles.historyList}>\n               {saveHistory.map((entry, index) => (\n                //  <li key={index} className={styles.historyItem} onClick={() => handleHistoryClick(entry)}>\n                //    {entry.timestamp}\n                //  </li>\n                <li key={index} className={`${styles.historyItem} ${selectedVersion === index + 1 ? styles.activeVersion : \"\"}`} \n                         onClick={() => handleHistoryClick(index)}>\n                       Version {index + 1}\n                </li>\n\n               ))}\n             </ul>\n           </div>\n         )}\n    </div>\n\n\n    {!submitted ? (\n\n    <div className={`${styles.mainContent} ${isSidebarVisible ? styles.withSidebar : \"\"}`}>\n\n          <div className={styles.description}>\n            </div>\n\n\n        <div className={styles.textareas_container}>\n\n          {/* Input Text */}\n          <div className={styles.text_container}>\n            \n            <div className={styles.labelWrapper}>\n              <label className={styles.label} htmlFor=\"inputText\">\n                Input Text\n              </label>\n\n              <div className={styles.actions}>\n                <div\n                  className={styles.copyIcon}\n                  onClick={() => handleCopy(inputText)}\n                  title=\"Copy to Clipboard\"\n                >\n                  ðŸ“‹ {/* Clipboard Emoji */}\n                </div>\n\n                <div\n                  className={styles.copyIcon}\n                  onClick={() => handleDownload(inputText, \"inputText\", \"txt\")}\n                  title=\"Download as .txt file\"\n                >\n                  ðŸ“¥ {/* Download Icon */}\n                </div>\n              </div>\n            </div>\n\n            <p className={styles.wordCount}>Words: {inputWordCount}</p>\n\n            <textarea\n              id=\"inputText\"\n              className={`${styles.textarea} ${styles.side_by_side}`}\n              value={input} readOnly placeholder=\"Input Text\"\n            ></textarea>\n          </div>\n\n            {/* system generated text Box */}\n          <div className={styles.text_container}>\n            <div className={styles.labelWrapper}>\n              <label className={styles.label} htmlFor=\"outputText\">\n                AI-generated Text\n              </label>\n\n\n              <div className={styles.actions}>\n                <div\n                  className={styles.copyIcon}\n                  onClick={() => handleCopy(outputText)}\n                  title=\"Copy to Clipboard\"\n                >\n                  ðŸ“‹ {/* Clipboard Emoji */}\n                </div>\n\n                <div\n                  className={styles.copyIcon}\n                  onClick={() => handleDownload(outputText, \"GeneratedText\", \"txt\")}\n                  title=\"Download as .txt file\"\n                >\n                  ðŸ“¥ {/* Download Icon */}\n                </div>\n                <button\n                  className={styles.toggleDiffBtn}\n                  onClick={() => setShowDifference1(!showDifference1)}\n                >\n                  {showDifference1 ? \"Hide the comparison\" : \"Compare with input text\"}\n                </button>\n\n                <button\n                  className={styles.toggleDiffBtn}\n                  onClick={() => setShowStats(!showStats)}\n                >\n                  {showStats ? \"Hide Stats\" : \"Show Stats\"}\n                </button>\n\n\n              </div>\n            </div>\n            <p className={styles.wordCount}>Words: {outputWordCount}</p>\n\n            <textarea\n              id=\"outputText\"\n              className={`${styles.output_box} ${styles.side_by_side}`}\n              value={initialOutputText}\n          readOnly\n          placeholder=\"Initial AI-Generated Text\"\n\n            ></textarea>\n              {/* Difference Box appears right below System-generated Text */}\n              {showDifference1 && (\n              <div className={styles.diff_box}>\n                <label className={styles.label}>Input vs AI-generated Text</label>\n                <div className={`${styles.diff_output}`} dangerouslySetInnerHTML={{ __html: diffHtml1 }}></div>\n              </div>\n            )}\n          </div>\n\n          <div className={styles.text_container}>\n            <div className={styles.labelWrapper}>\n            <label className={styles.label} htmlFor=\"submittedText\">Final Revised Text</label>\n            {/* <textarea className={styles.textarea} value={latestText} readOnly></textarea> */}\n\n                  {/* <textarea value={latestFinalText} readOnly /> */}\n\n\n              <div className={styles.actions}>\n                <div\n                  className={styles.copyIcon}\n                  onClick={() => handleCopy(latestFinalText)}\n                  title=\"Copy to Clipboard\"\n                >\n                  ðŸ“‹ {/* Clipboard Emoji */}\n                </div>\n\n                <div\n                  className={styles.copyIcon}\n                  onClick={() => handleDownload(latestFinalText, \"SubmittedText\", \"txt\")}\n                  title=\"Download as .txt file\"\n                >\n                  ðŸ“¥ {/* Download Icon */}\n                </div>\n\n                <button\n                  className={styles.toggleDiffBtn}\n                  onClick={() => setShowDifference2(!showDifference2)}\n                >\n                  {showDifference2 ? \"Hide the comparison\" : \"Compare with AI-generated text\"}\n                </button>\n\n              </div>\n            </div>\n            {/* <textarea id=\"EditedText\" className={`${styles.output_box} ${styles.side_by_side}`} value={latestFinalText} readOnly/>\n            */}\n                        \n                          <p className={styles.wordCount}>Words: {submittedWordCount}</p>\n\n            <textarea\n                        id=\"submittedText\"\n                        className={`${styles.output_box} ${styles.side_by_side}`}\n                        value={latestFinalText}\n                        readOnly\n                        placeholder=\"Final Revised Text\"\n                      ></textarea>\n\n                        {/* Difference Box appears right below Submitted Text */}\n            {showDifference2 && (\n              <div className={styles.diff_box}>\n                <label className={styles.label}>AI-generated vs Final revised Text</label>\n                <div className={`${styles.diff_output}`} dangerouslySetInnerHTML={{ __html: diffHtml2 }}></div>\n              </div>\n            )}\n          </div>\n            \n        \n\n            <div className={styles.diff_container}>\n\n            </div>\n        \n        </div>\n\n            {/* <div> */}\n        <div className={styles.surveyContainer}>\n\n          <form className={styles.surveyForm} onSubmit={handleFormSubmit}>\n                <h2>Survey</h2>\n                <h3>Your feedback is valuable. Please try to answer all the questions.</h3>\n\n\n            <div className={styles.surveyQuestion}>\n              <label>Does the AI-generated text meet your needs? \n                {/* <span style={{ color: \"red\" }}>*</span> \n              */}\n              </label>\n              <div className={styles.surveyOptions}>\n              <label><input type=\"radio\" name=\"needs\" value=\"not-at-all\" onChange={handleOptionChange}  />  Not at all</label>\n                <label><input type=\"radio\" name=\"needs\" value=\"somewhat-meets\" onChange={handleOptionChange}  />  Somewhat meets</label>\n                <label><input type=\"radio\" name=\"needs\" value=\"moderately-meets\" onChange={handleOptionChange}  />  Moderately meets</label>\n                <label><input type=\"radio\" name=\"needs\" value=\"mostly-meets\" onChange={handleOptionChange}  />  Mostly meets</label>\n                <label><input type=\"radio\" name=\"needs\" value=\"completely-meets\" onChange={handleOptionChange}  />  Completely meets</label>\n              </div>\n            </div>\n\n          <div className={styles.surveyQuestion}>\n              <label>Is the AI-generated text easy to understand?  </label>\n              <div className={styles.surveyOptions}>\n                <label>\n                  <input type=\"radio\" name=\"easy\" value=\"not-clear\" onChange={handleOptionChange}  />  Not easy at all\n                </label>\n                <label>\n                  <input type=\"radio\" name=\"easy\" value=\"somewhat-clear\" onChange={handleOptionChange}  />  Somewhat easy\n                </label>\n                <label>\n                  <input type=\"radio\" name=\"easy\" value=\"moderately-clear\" onChange={handleOptionChange}  />  Moderately easy\n                </label>\n                <label>\n                  <input type=\"radio\" name=\"easy\" value=\"mostly-clear\" onChange={handleOptionChange}  />  Mostly easy\n                </label>\n                <label>\n                  <input type=\"radio\" name=\"easy\" value=\"very-clear\" onChange={handleOptionChange}  />  Completely easy\n                </label>\n              </div>\n            </div>\n\n            <div className={styles.surveyQuestion}>\n              <label>Does the AI-generated text preserve the original meaning? </label>\n              <div className={styles.surveyOptions}>\n                <label>\n                  <input type=\"radio\" name=\"meaning\" value=\"not-at-all\" onChange={handleOptionChange}  />  Not at all\n                </label>\n                <label>\n                  <input type=\"radio\" name=\"meaning\" value=\"somewhat-preserves\" onChange={handleOptionChange}  />  Somewhat preserves\n                </label>\n                <label>\n                  <input type=\"radio\" name=\"meaning\" value=\"moderately-preserves\" onChange={handleOptionChange}  />  Moderately preserves\n                </label>\n                <label>\n                  <input type=\"radio\" name=\"meaning\" value=\"mostly-preserves\" onChange={handleOptionChange}  />  Mostly preserves\n                </label>\n                <label>\n                  <input type=\"radio\" name=\"meaning\" value=\"completely-preserves\" onChange={handleOptionChange}  />  Completely preserves\n                </label>\n              </div>\n            </div>\n\n            <div className={styles.surveyQuestion}>\n              <label>Does the AI-generated text contain false or irrelevant information?  </label>\n              <div className={styles.surveyOptions}>\n                <label>\n                  <input type=\"radio\" name=\"relevancy\" value=\"not-at-all\" onChange={handleOptionChange}  />  A lot of inaccuracies\n                </label>\n                <label>\n                  <input type=\"radio\" name=\"relevancy\" value=\"somewhat\" onChange={handleOptionChange}  />  Several inaccuracies\n                </label>\n                <label>\n                  <input type=\"radio\" name=\"relevancy\" value=\"moderately\" onChange={handleOptionChange}  />  Some minor inaccuracies\n                </label>\n                <label>\n                  <input type=\"radio\" name=\"relevancy\" value=\"mostly\" onChange={handleOptionChange}  />  Mostly accurate\n                </label>\n                <label>\n                  <input type=\"radio\" name=\"relevancy\" value=\"completely\" onChange={handleOptionChange}  />  Completely accurate\n                </label>\n              </div>\n            </div>\n\n            <div className={styles.surveyQuestion}>\n              <label>Are there spelling or grammar mistakes in the AI-generated text? </label>\n              <div className={styles.surveyOptions}>\n                <label>\n                  <input type=\"radio\" name=\"grammar\" value=\"many-errors\" onChange={handleOptionChange}  />  Many mistakes\n                </label>\n                <label>\n                  <input type=\"radio\" name=\"grammar\" value=\"several-errors\" onChange={handleOptionChange}  />  Several mistakes\n                </label>\n                <label>\n                  <input type=\"radio\" name=\"grammar\" value=\"some-errors\" onChange={handleOptionChange}  />  Some mistakes\n                </label>\n                <label>\n                  <input type=\"radio\" name=\"grammar\" value=\"few-errors\" onChange={handleOptionChange}  />  Few mistakes\n                </label>\n                <label>\n                  <input type=\"radio\" name=\"grammar\" value=\"no-errors\" onChange={handleOptionChange}  />  No mistakes\n                </label>\n              </div>\n            </div>\n\n\n\n            <div className={styles.surveyQuestion}>\n              <label>Does the AI-generated text avoid difficult words?     </label>\n              <div className={styles.surveyOptions}>\n              <label><input type=\"radio\" name=\"guidelines\" value=\"not-at-all\" onChange={handleOptionChange}  />  Not at all</label>\n                <label><input type=\"radio\" name=\"guidelines\" value=\"somewhat-follows\" onChange={handleOptionChange}  />  Somewhat</label>\n                <label><input type=\"radio\" name=\"guidelines\" value=\"moderately-follows\" onChange={handleOptionChange}  />  Moderately</label>\n                <label><input type=\"radio\" name=\"guidelines\" value=\"mostly-follows\" onChange={handleOptionChange}  />  Mostly</label>\n                <label><input type=\"radio\" name=\"guidelines\" value=\"completely-follows\" onChange={handleOptionChange}  />  Completely </label>\n              </div>\n            </div>\n\n            <div className={styles.surveyQuestion}>\n              <label>Does the AI-generated text use short sentences and clear headings?    </label>\n              <div className={styles.surveyOptions}>\n              <label><input type=\"radio\" name=\"clarity\" value=\"not-at-all\" onChange={handleOptionChange}  />  Not at all</label>\n                <label><input type=\"radio\" name=\"clarity\" value=\"somewhat-follows\" onChange={handleOptionChange}  />  Somewhat </label>\n                <label><input type=\"radio\" name=\"clarity\" value=\"moderately-follows\" onChange={handleOptionChange}  />  Moderately</label>\n                <label><input type=\"radio\" name=\"clarity\" value=\"mostly-follows\" onChange={handleOptionChange}  />  Mostly</label>\n                <label><input type=\"radio\" name=\"clarity\" value=\"completely-follows\" onChange={handleOptionChange}  />  Completely </label>\n              </div>\n            </div>\n\n            <div className={styles.surveyQuestion}>\n              <label>Does the AI-generated text flow logically from start to finish? </label>\n              <div className={styles.surveyOptions}>\n              <label><input type=\"radio\" name=\"coherent\" value=\"not-at-all\" onChange={handleOptionChange}  />  Not at all</label>\n                <label><input type=\"radio\" name=\"coherent\" value=\"somewhat-follows\" onChange={handleOptionChange}  />  Somewhat </label>\n                <label><input type=\"radio\" name=\"coherent\" value=\"moderately-follows\" onChange={handleOptionChange}  />  Moderately</label>\n                <label><input type=\"radio\" name=\"coherent\" value=\"mostly-follows\" onChange={handleOptionChange}  />  Mostly</label>\n                <label><input type=\"radio\" name=\"coherent\" value=\"completely-follows\" onChange={handleOptionChange}  />  Completely </label>\n              </div>\n            </div>\n\n            <div className={styles.surveyQuestion}>\n              <label><strong>[OPTIONAL]</strong> How much effort did you need to edit the AI-generated text? </label>\n              <div className={styles.surveyOptions}>\n              <label><input type=\"radio\" name=\"editing_effort\" value=\"many-errors\" checked={responses.editing_effort === \"many-errors\"} onChange={handleOptionChange}/>  A lot of effort</label>\n                <label><input type=\"radio\" name=\"editing_effort\" value=\"several-errors\" checked={responses.editing_effort === \"several-errors\"} onChange={handleOptionChange}/>  Significant effort</label>\n                <label><input type=\"radio\" name=\"editing_effort\" value=\"some-errors\" checked={responses.editing_effort === \"some-errors\"} onChange={handleOptionChange}/>  Moderate effort</label>\n                <label><input type=\"radio\" name=\"editing_effort\" value=\"few-errors\" checked={responses.editing_effort === \"few-errors\"} onChange={handleOptionChange}/>  Minimal effort</label>\n                <label><input type=\"radio\" name=\"editing_effort\" value=\"no-errors\" checked={responses.editing_effort === \"no-errors\"} onChange={handleOptionChange}/>  No effort at all</label>\n              </div>\n            </div>\n\n            <div className={styles.surveyQuestion}>\n              <label><strong>[OPTIONAL]</strong>  If you edited the AI-generated text, what were your main reasons for it?</label>\n              <textarea\n                // className={styles.textarea}\n                name=\"edits\"\n                rows=\"3\"\n                cols=\"70\"\n                placeholder=\"\"\n              ></textarea>\n            </div>\n\n            <div className={styles.surveyQuestion}>\n              <label><strong>[OPTIONAL]</strong> Do you have any additional comments about the AI-generated text? </label>\n              <textarea\n                // className={styles.textarea}\n                name=\"comments\"\n                rows=\"4\"\n                cols=\"70\"\n                placeholder=\"\"\n              ></textarea>\n            </div>\n\n            <div>\n              <button className={styles.submitButton} type=\"submit\" >Submit</button>\n            </div>\n\n          </form>\n\n        </div>\n  {/* disabled={!isFormComplete} */}\n  </div>\n\n) : (\n  // Thank You Message & Redirect\n  <div className={styles.thankYouContainer}>\n    <h2>Thank You!</h2>\n    <p>Your responses have been saved. We appreciate your feedback.</p>\n    <button\n      className={styles.redirectButton}\n      onClick={() => navigate(\"/simplify\", { replace: true })}\n    >\n      Start Another Simplification\n    </button>\n  </div>\n)}\n</div>\n\n\n</>\n  );\n};\n\nexport default SurveyPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}