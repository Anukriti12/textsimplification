{"ast":null,"code":"import{useState}from\"react\";import styles from\"./styles.module.css\";import{useNavigate}from\"react-router-dom\";import*as pdfjsLib from\"pdfjs-dist/legacy/build/pdf\";// import { BrowserRouter as Router, Routes, Route, useNavigate } from \"react-router-dom\";\nimport{jwtDecode}from\"jwt-decode\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";pdfjsLib.GlobalWorkerOptions.workerSrc=`${process.env.PUBLIC_URL}/pdf.worker.mjs`;const Main=()=>{const[inputText,setInputText]=useState(\"\");const[outputText,setOutputText]=useState(\"\");const[isLoading,setIsLoading]=useState(false);const[isSubmitted,setIsSubmitted]=useState(false);const[isEditable,setIsEditable]=useState(false);// For toggling edit mode\nconst[uploadedFileName,setUploadedFileName]=useState(\"\");// State for file name\nconst[isSaveButtonVisible,setIsSaveButtonVisible]=useState(true);const[showSurveyPrompt,setShowSurveyPrompt]=useState(false);// State for survey prompt\nconst navigate=useNavigate();const[isUploading,setIsUploading]=useState(false);// State for showing buffer\nconst handleLogout=()=>{localStorage.removeItem(\"token\");navigate(\"/Login\");};const handleFileUpload=async event=>{const file=event.target.files[0];if(!file)return;setIsUploading(true);// Show buffer while processing\nsetUploadedFileName(file.name);// Set file name\ntry{//setUploadedFileName(file.name); // Set the uploaded file name\nconst fileReader=new FileReader();fileReader.onload=async function(){const typedArray=new Uint8Array(this.result);const pdf=await pdfjsLib.getDocument(typedArray).promise;let text=\"\";// Extract text from all pages\nfor(let i=1;i<=pdf.numPages;i++){const page=await pdf.getPage(i);const textContent=await page.getTextContent();text+=textContent.items.map(item=>item.str).join(\" \");}setInputText(text);};fileReader.readAsArrayBuffer(file);}catch(error){console.error(\"Error reading PDF:\",error);alert(\"Failed to extract text from the PDF.\");}finally{setIsUploading(false);// Hide buffer once done\n}};// Function to format the prompt with user input\nconst generatePrompt=inputText=>{return`\n\tYou are an expert in accessible communication, tasked with simplifying a given text for individuals with intellectual and developmental disabilities (IDD). \n\t\n\tPlease do not summarize or reduce the length of output content. Instead, simplify the text preserving the intended meaning or information. The output length should be very similar to the input length.\n\t\n\tFollow these detailed guidelines to ensure the text is clear, easy to understand, and accessible:\n  \n\t1. Sentence and Structure Simplification\n\t- Use short sentences (8-10 words max).\n\t- Keep one main idea per sentence to avoid confusion.\n\t- Write in active voice (e.g., \"A doctor gives medicine\" instead of \"Medicine is given by a doctor\").\n\t- Avoid bulleted lists. Instead, write short, direct sentences in paragraph form.\n\t- Repeat important words instead of using synonyms to improve comprehension.\n\t- Start a new paragraph when introducing a different idea.\n  \n\t2. Word Choice and Vocabulary\n\t- Replace complex words with simple, common words (words most people know and use every day).\n\t- Use words with few syllables (e.g., \"help\" instead of \"assist\").\n\t- Avoid figurative language (no metaphors, similes, or idioms).\n\t  - ❌ \"It’s a piece of cake.\"  \n\t  - ✅ \"It is easy to do.\"  \n\t- If a difficult word is necessary, provide a simple definition within the text.\n\t- Avoid negatives when possible (e.g., instead of \"Do not touch,\" say \"Keep hands away\").\n  \n\t3. Text Organization\n\tIf necessary,\n\t- Use headings that are short and direct (max 8 words). Example:\n\t  - ❌ \"Understanding the Difference Between the Flu and COVID-19\"  \n\t  - ✅ \"Flu vs. COVID-19\"  \n\t- Keep paragraphs short.\n  \n\t4. Formatting for Readability\n\t- Use left-aligned text with wide spacing between lines.\n\t- Ensure the text is high contrast (black text on a white background).\n\t- Avoid italics, underlining, or all caps, as they can be hard to read.\n  \n\t5. Instructions and Steps\n\t- If the text includes instructions, keep steps short and clear.\n\t- Example:\n\t  - ❌ \"First, you will need to open the box carefully and remove the contents before proceeding to step two, which involves assembling the parts.\"  \n\t  - ✅ \"Step 1: Open the box.  \n\t\t Step 2: Take out the parts.\"  \n  \n\t6. Retaining Meaning and Key Details\n\t- Do not remove important information, but explain it in a simpler way.\n\t- Ensure the simplified version does not change the facts.\n\t- The output should remain accurate, informative, and accessible.\n  \n\tNow, simplify the following text according to these guidelines:\n\t\"${inputText}\"\n\t`;};const splitTextIntoChunks=(text,maxTokens)=>{const words=text.split(\" \");let chunks=[];let currentChunk=[];for(let word of words){if(currentChunk.join(\" \").length+word.length<maxTokens){currentChunk.push(word);}else{chunks.push(currentChunk.join(\" \"));currentChunk=[word];}}if(currentChunk.length>0)chunks.push(currentChunk.join(\" \"));return chunks;};const handleSubmit=async()=>{if(!inputText.trim())return;setIsLoading(true);try{const chunks=splitTextIntoChunks(inputText,30000);let combinedOutput=\"\";for(let chunk of chunks){var _data$response;const prompt=generatePrompt(chunk);const response=await fetch(\"https://textsimplification-eecqhvdcduczf8cz.westus-01.azurewebsites.net/api/gpt4\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({prompt})});if(!response.ok){console.error(`API request failed with status: ${response.status}`);continue;// Skip this chunk if the API request failed\n}const data=await response.json();console.log(\"Full API Response: \",data);const data1=(data===null||data===void 0?void 0:(_data$response=data.response)===null||_data$response===void 0?void 0:_data$response.replace(/^\"|\"$/g,\"\"))||\"No response received.\";// Append results\ncombinedOutput+=data1+\" \";}console.log(\"Final Combined Output: \",combinedOutput);console.log(\"Data: \",combinedOutput);const cleanedResponse=combinedOutput.trim();setOutputText(cleanedResponse);setIsSubmitted(true);navigate(\"/review\",{state:{inputText,outputText:cleanedResponse}});// const prompt = generatePrompt(inputText);\n//   const response = await fetch(\"https://textsimplification-eecqhvdcduczf8cz.westus-01.azurewebsites.net/api/gpt4\", {\n// \tmethod: \"POST\",\n// \theaders: { \"Content-Type\": \"application/json\" },\n// \tbody: JSON.stringify({ prompt }),\n//   });\n//   const data = await response.json();\n//   const cleanedResponse =\n// \tdata?.response?.replace(/^\"|\"$/g, \"\") || \"No response received.\";\n//   setOutputText(cleanedResponse);\n//   setIsSubmitted(true);\n//   navigate(\"/review\", { state: { inputText, outputText: cleanedResponse } });\n}catch(error){console.error(\"Error fetching GPT-4o response:\",error);setOutputText(\"An error occurred while simplifying the text.\");}setIsLoading(false);};// const handleSubmit = async () => {\n//   if (!inputText.trim()) return;\n//   setIsLoading(true);\n//   try {\n// \tconst prompt = generatePrompt(inputText);\n// \t//`Simplify the following text for better readability while preserving meaning:\\n\\n\"${inputText}\"`;\n// \tconst response = await fetch(\"https://textsimplification-eecqhvdcduczf8cz.westus-01.azurewebsites.net/api/gpt4\", {\n// \t  method: \"POST\",\n// \t  headers: { \"Content-Type\": \"application/json\" },\n// \t  body: JSON.stringify({ prompt }),\n// \t});\n// \tconst data = await response.json();\n// \tconst cleanedResponse =\n// \t  data?.response?.replace(/^\"|\"$/g, \"\") || \"No response received.\";\n// \tsetOutputText(cleanedResponse);\n// \tsetIsSubmitted(true);\n// \tnavigate(\"/review\", { state: { inputText, outputText: cleanedResponse } });\n// \t// navigate(\"/simplify\");\n//   } catch (error) {\n// \tconsole.error(\"Error fetching GPT-4 response:\", error);\n// \tsetOutputText(\"An error occurred while fetching the response.\");\n//   }\n//   setIsLoading(false);\n// };\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"nav\",{className:styles.navbar,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Text Simplification Tool\"}),/*#__PURE__*/_jsx(\"button\",{className:styles.white_btn,onClick:handleLogout,children:\"Logout\"})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.main_container,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.description,children:[/*#__PURE__*/_jsx(\"p\",{children:\"This tool helps make complex text easier to read while preserving its original meaning. Whether you're simplifying academic content, technical documents, or general text for better accessibility, this tool provides a quick and efficient way to generate a more readable version. You can enter text manually or upload a document to get started.\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.form_container,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.input_area,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.text_container,children:[/*#__PURE__*/_jsx(\"label\",{className:styles.label,htmlFor:\"inputText\",children:\"Input Text\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"inputText\",className:`${styles.textarea} ${isLoading?styles.disabled:\"\"}`//   className={styles.textarea}\n,placeholder:\"Write/Paste your text here or upload a PDF document to extract content automatically.\",value:inputText,onChange:e=>setInputText(e.target.value),disabled:isLoading// Disable input when loading\n})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.or_divider,children:\"OR\"}),/*#__PURE__*/_jsxs(\"div\",{className:`${styles.upload_area} ${isLoading?styles.disabled:\"\"}`,onDragOver:e=>e.preventDefault()// Prevent default behavior\n,onDrop:e=>{e.preventDefault();const file=e.dataTransfer.files[0];// Get the first dropped file\nif(file){handleFileUpload({target:{files:[file]}});// Simulate file selection event\n}},children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"fileUpload\",className:styles.upload_box,children:isUploading?/*#__PURE__*/_jsx(\"span\",{className:styles.loadingText,children:\"Extracting text, please wait...\"}):uploadedFileName?/*#__PURE__*/_jsxs(_Fragment,{children:[\"File uploaded: \",/*#__PURE__*/_jsx(\"strong\",{children:uploadedFileName})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[\"Click to Upload a PDF\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{children:\"...or drag and drop a file.\"})]})}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"fileUpload\",accept:\"application/pdf\",onChange:handleFileUpload,className:styles.hidden_input,disabled:isUploading||isLoading// Disable upload while processing\n//disabled={isUploading} // Disable upload while processing\n})]})]})}),/*#__PURE__*/_jsx(\"button\",{className:styles.submit_btn,onClick:handleSubmit,disabled:!inputText.trim()||isLoading||isUploading//title={!inputText.trim() ? \"Enter text or upload a file to enable simplification.\" : \"\"}\n,children:isLoading?\"Processing...\":\"Simplify Text\"}),/*#__PURE__*/_jsxs(\"p\",{className:styles.help_text,children:[\"Need Help? \",/*#__PURE__*/_jsx(\"a\",{href:\"mailto:anukumar@uw.edu\",children:\"Contact Support\"})]})]})})]});};export default Main;","map":{"version":3,"names":["useState","styles","useNavigate","pdfjsLib","jwtDecode","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GlobalWorkerOptions","workerSrc","process","env","PUBLIC_URL","Main","inputText","setInputText","outputText","setOutputText","isLoading","setIsLoading","isSubmitted","setIsSubmitted","isEditable","setIsEditable","uploadedFileName","setUploadedFileName","isSaveButtonVisible","setIsSaveButtonVisible","showSurveyPrompt","setShowSurveyPrompt","navigate","isUploading","setIsUploading","handleLogout","localStorage","removeItem","handleFileUpload","event","file","target","files","name","fileReader","FileReader","onload","typedArray","Uint8Array","result","pdf","getDocument","promise","text","i","numPages","page","getPage","textContent","getTextContent","items","map","item","str","join","readAsArrayBuffer","error","console","alert","generatePrompt","splitTextIntoChunks","maxTokens","words","split","chunks","currentChunk","word","length","push","handleSubmit","trim","combinedOutput","chunk","_data$response","prompt","response","fetch","method","headers","body","JSON","stringify","ok","status","data","json","log","data1","replace","cleanedResponse","state","children","className","navbar","white_btn","onClick","main_container","description","form_container","input_area","text_container","label","htmlFor","id","textarea","disabled","placeholder","value","onChange","e","or_divider","upload_area","onDragOver","preventDefault","onDrop","dataTransfer","upload_box","loadingText","type","accept","hidden_input","submit_btn","help_text","href"],"sources":["/Users/anukumar/Desktop/Autumn 2024/Text Simplification/textsimplification/client/src/components/Main/index.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as pdfjsLib from \"pdfjs-dist/legacy/build/pdf\";\n// import { BrowserRouter as Router, Routes, Route, useNavigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\";\n\n\npdfjsLib.GlobalWorkerOptions.workerSrc = `${process.env.PUBLIC_URL}/pdf.worker.mjs`;\n\nconst Main = () => {\n\n\tconst [inputText, setInputText] = useState(\"\");\n\tconst [outputText, setOutputText] = useState(\"\");\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [isSubmitted, setIsSubmitted] = useState(false);\n\tconst [isEditable, setIsEditable] = useState(false); // For toggling edit mode\n\tconst [uploadedFileName, setUploadedFileName] = useState(\"\"); // State for file name\n\tconst [isSaveButtonVisible, setIsSaveButtonVisible] = useState(true);\n\tconst [showSurveyPrompt, setShowSurveyPrompt] = useState(false); // State for survey prompt\n\tconst navigate = useNavigate();\n\tconst [isUploading, setIsUploading] = useState(false); // State for showing buffer\n\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/Login\"); \n  };\n\n\n  \tconst handleFileUpload = async (event) => {\n\t  const file = event.target.files[0];\n\t  if (!file) return;\n  \n\t  setIsUploading(true); // Show buffer while processing\n\t  setUploadedFileName(file.name); // Set file name\n\n\t  try {\n\t\t//setUploadedFileName(file.name); // Set the uploaded file name\n\t\tconst fileReader = new FileReader();\n\t\tfileReader.onload = async function () {\n\t\t  const typedArray = new Uint8Array(this.result);\n  \n\t\t  const pdf = await pdfjsLib.getDocument(typedArray).promise;\n\t\t  let text = \"\";\n  \n\t\t  // Extract text from all pages\n\t\t  for (let i = 1; i <= pdf.numPages; i++) {\n\t\t\tconst page = await pdf.getPage(i);\n\t\t\tconst textContent = await page.getTextContent();\n\t\t\ttext += textContent.items.map((item) => item.str).join(\" \");\n\t\t  }\n  \n\t\t  setInputText(text);\n\t\t};\n\t\tfileReader.readAsArrayBuffer(file);\n\t  } catch (error) {\n\t\tconsole.error(\"Error reading PDF:\", error);\n\t\talert(\"Failed to extract text from the PDF.\");\n\t  } finally {\n\t\tsetIsUploading(false); // Hide buffer once done\n\t  }\n\t};\n \n\n\t// Function to format the prompt with user input\nconst generatePrompt = (inputText) => {\n\treturn `\n\tYou are an expert in accessible communication, tasked with simplifying a given text for individuals with intellectual and developmental disabilities (IDD). \n\t\n\tPlease do not summarize or reduce the length of output content. Instead, simplify the text preserving the intended meaning or information. The output length should be very similar to the input length.\n\t\n\tFollow these detailed guidelines to ensure the text is clear, easy to understand, and accessible:\n  \n\t1. Sentence and Structure Simplification\n\t- Use short sentences (8-10 words max).\n\t- Keep one main idea per sentence to avoid confusion.\n\t- Write in active voice (e.g., \"A doctor gives medicine\" instead of \"Medicine is given by a doctor\").\n\t- Avoid bulleted lists. Instead, write short, direct sentences in paragraph form.\n\t- Repeat important words instead of using synonyms to improve comprehension.\n\t- Start a new paragraph when introducing a different idea.\n  \n\t2. Word Choice and Vocabulary\n\t- Replace complex words with simple, common words (words most people know and use every day).\n\t- Use words with few syllables (e.g., \"help\" instead of \"assist\").\n\t- Avoid figurative language (no metaphors, similes, or idioms).\n\t  - ❌ \"It’s a piece of cake.\"  \n\t  - ✅ \"It is easy to do.\"  \n\t- If a difficult word is necessary, provide a simple definition within the text.\n\t- Avoid negatives when possible (e.g., instead of \"Do not touch,\" say \"Keep hands away\").\n  \n\t3. Text Organization\n\tIf necessary,\n\t- Use headings that are short and direct (max 8 words). Example:\n\t  - ❌ \"Understanding the Difference Between the Flu and COVID-19\"  \n\t  - ✅ \"Flu vs. COVID-19\"  \n\t- Keep paragraphs short.\n  \n\t4. Formatting for Readability\n\t- Use left-aligned text with wide spacing between lines.\n\t- Ensure the text is high contrast (black text on a white background).\n\t- Avoid italics, underlining, or all caps, as they can be hard to read.\n  \n\t5. Instructions and Steps\n\t- If the text includes instructions, keep steps short and clear.\n\t- Example:\n\t  - ❌ \"First, you will need to open the box carefully and remove the contents before proceeding to step two, which involves assembling the parts.\"  \n\t  - ✅ \"Step 1: Open the box.  \n\t\t Step 2: Take out the parts.\"  \n  \n\t6. Retaining Meaning and Key Details\n\t- Do not remove important information, but explain it in a simpler way.\n\t- Ensure the simplified version does not change the facts.\n\t- The output should remain accurate, informative, and accessible.\n  \n\tNow, simplify the following text according to these guidelines:\n\t\"${inputText}\"\n\t`;\n  };\n\n  const splitTextIntoChunks = (text, maxTokens) => {\n\tconst words = text.split(\" \");\n\tlet chunks = [];\n\tlet currentChunk = [];\n  \n\tfor (let word of words) {\n\t  if (currentChunk.join(\" \").length + word.length < maxTokens) {\n\t\tcurrentChunk.push(word);\n\t  } else {\n\t\tchunks.push(currentChunk.join(\" \"));\n\t\tcurrentChunk = [word];\n\t  }\n\t}\n\tif (currentChunk.length > 0) chunks.push(currentChunk.join(\" \"));\n\treturn chunks;\n  };\n\n\n  const handleSubmit = async () => {\n\tif (!inputText.trim()) return;\n\tsetIsLoading(true);\n  \n\ttry {\n\t  const chunks = splitTextIntoChunks(inputText, 30000);\n\t  let combinedOutput = \"\";\n  \n\t  for (let chunk of chunks) {\n\t\tconst prompt = generatePrompt(chunk);\n\t\tconst response = await fetch(\"https://textsimplification-eecqhvdcduczf8cz.westus-01.azurewebsites.net/api/gpt4\", {\n\t\t  method: \"POST\",\n\t\t  headers: { \"Content-Type\": \"application/json\" },\n\t\t  body: JSON.stringify({ prompt }),\n\t\t});\n\t\t\n\t\tif (!response.ok) {\n\t\t\tconsole.error(`API request failed with status: ${response.status}`);\n\t\t\tcontinue; // Skip this chunk if the API request failed\n\t\t  }\n\n\t\tconst data = await response.json();\n\t\tconsole.log(\"Full API Response: \", data);\n\n\n\t\tconst data1 = data?.response?.replace(/^\"|\"$/g, \"\") || \"No response received.\"; // Append results\n\t\tcombinedOutput += data1 + \" \";\n\t}\n\t  console.log(\"Final Combined Output: \", combinedOutput);\n\n\tconsole.log(\"Data: \", combinedOutput);\n\tconst cleanedResponse = combinedOutput.trim();\n\t  setOutputText(cleanedResponse);\n\t  setIsSubmitted(true);\n\t  navigate(\"/review\", { state: { inputText, outputText: cleanedResponse } });\n\t\n\t\n\t// const prompt = generatePrompt(inputText);\n\t//   const response = await fetch(\"https://textsimplification-eecqhvdcduczf8cz.westus-01.azurewebsites.net/api/gpt4\", {\n\t// \tmethod: \"POST\",\n\t// \theaders: { \"Content-Type\": \"application/json\" },\n\t// \tbody: JSON.stringify({ prompt }),\n\t//   });\n\n\t//   const data = await response.json();\n\t//   const cleanedResponse =\n\t// \tdata?.response?.replace(/^\"|\"$/g, \"\") || \"No response received.\";\n\t//   setOutputText(cleanedResponse);\n\t//   setIsSubmitted(true);\n\t//   navigate(\"/review\", { state: { inputText, outputText: cleanedResponse } });\n\n\t} catch (error) {\n\t  console.error(\"Error fetching GPT-4o response:\", error);\n\t  setOutputText(\"An error occurred while simplifying the text.\");\n\t}\n  \n\tsetIsLoading(false);\n  };\n\n  \n  \t// const handleSubmit = async () => {\n\t//   if (!inputText.trim()) return;\n\t//   setIsLoading(true);\n  \n\t//   try {\n\t// \tconst prompt = generatePrompt(inputText);\n\t// \t//`Simplify the following text for better readability while preserving meaning:\\n\\n\"${inputText}\"`;\n\t// \tconst response = await fetch(\"https://textsimplification-eecqhvdcduczf8cz.westus-01.azurewebsites.net/api/gpt4\", {\n\t// \t  method: \"POST\",\n\t// \t  headers: { \"Content-Type\": \"application/json\" },\n\t// \t  body: JSON.stringify({ prompt }),\n\t// \t});\n  \n\t// \tconst data = await response.json();\n\t// \tconst cleanedResponse =\n\t// \t  data?.response?.replace(/^\"|\"$/g, \"\") || \"No response received.\";\n\t// \tsetOutputText(cleanedResponse);\n\t// \tsetIsSubmitted(true);\n\t// \tnavigate(\"/review\", { state: { inputText, outputText: cleanedResponse } });\n\n\t// \t// navigate(\"/simplify\");\n\t//   } catch (error) {\n\t// \tconsole.error(\"Error fetching GPT-4 response:\", error);\n\t// \tsetOutputText(\"An error occurred while fetching the response.\");\n\t//   }\n  \n\t//   setIsLoading(false);\n\t// };\n\n  return (\n    <>\n      <nav className={styles.navbar}>\n        <h1>Text Simplification Tool</h1>\n        <button className={styles.white_btn} onClick={handleLogout}>\n          Logout\n        </button>\n      </nav>\n\n\t  <div className={styles.main_container}>\n\t\n\t\t\t<div className={styles.description}>\n\t\t\t  <p>\n\t\t\t  This tool helps make complex text easier to read while preserving its original meaning. Whether you're simplifying academic content, technical documents, or general text for better accessibility, this tool provides a quick and efficient way to generate a more readable version. You can enter text manually or upload a document to get started.\n\t\t\t  </p>\n  \n\t\t\t  <div className={styles.form_container}>\n\t\t\t\t{/* Input Area */}\n\t\t\t\t<div className={styles.input_area}>\n\t\t\t\t  <div className={styles.text_container}>\n\t\t\t\t\t<label className={styles.label} htmlFor=\"inputText\">\n\t\t\t\t\t  Input Text\n\t\t\t\t\t</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t  id=\"inputText\"\n\t\t\t\t\t  className={`${styles.textarea} ${isLoading ? styles.disabled : \"\"}`}\n\t\t\t\t\t//   className={styles.textarea}\n\t\t\t\t\t  placeholder=\"Write/Paste your text here or upload a PDF document to extract content automatically.\"\n\t\t\t\t\t  value={inputText}\n\t\t\t\t\t  onChange={(e) => setInputText(e.target.value)}\n\t\t\t\t\t  disabled={isLoading} // Disable input when loading\n\t\t\t\t\t></textarea>\n\t\t\t\t  </div>\n  \n\t\t\t\t  {/* OR Divider */}\n\t\t\t\t  <div className={styles.or_divider}>OR</div>\n  \n\t\t\t\t  {/* File Upload */}\n\t\t\t\t  <div className={`${styles.upload_area} ${isLoading ? styles.disabled : \"\"}`}\n\t\t\t\t\tonDragOver={(e) => e.preventDefault()} // Prevent default behavior\n\t\t\t\t\tonDrop={(e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tconst file = e.dataTransfer.files[0]; // Get the first dropped file\n\t\t\t\t\t\tif (file) {\n\t\t\t\t\t\thandleFileUpload({ target: { files: [file] } }); // Simulate file selection event\n\t\t\t\t\t\t}\n\t\t\t\t\t}}>\n\t\t\t\t\t<label htmlFor=\"fileUpload\" className={styles.upload_box}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{isUploading ? (\n\t\t\t\t\t\t\t<span className={styles.loadingText}>Extracting text, please wait...</span>\n\t\t\t\t\t\t\t) : uploadedFileName ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\tFile uploaded: <strong>{uploadedFileName}</strong>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\tClick to Upload a PDF\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<span>...or drag and drop a file.</span>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t  type=\"file\"\n\t\t\t\t\t  id=\"fileUpload\"\n\t\t\t\t\t  accept=\"application/pdf\"\n\t\t\t\t\t  onChange={handleFileUpload}\n\t\t\t\t\t  className={styles.hidden_input}\n\t\t\t\t\t  disabled={isUploading || isLoading} // Disable upload while processing\n\t\t\t\t\t  //disabled={isUploading} // Disable upload while processing\n\t\t\t\t\t/>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t  </div>\n\t\t\t  {/* Submit Button */}\n\t\t\t  <button\n\t\t\t\tclassName={styles.submit_btn}\n\t\t\t\tonClick={handleSubmit}\n\t\t\t\tdisabled={!inputText.trim() || isLoading || isUploading}\n\t\t\t\t//title={!inputText.trim() ? \"Enter text or upload a file to enable simplification.\" : \"\"}\n\t\t\t  >\n\t\t\t\t{isLoading ? \"Processing...\" : \"Simplify Text\"}\n\t\t\t  </button>\n\t\n\t\t\t  <p className={styles.help_text}>Need Help? <a href=\"mailto:anukumar@uw.edu\">Contact Support</a></p>\n\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Main;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}